>>> valkey: Validating /home/packager/oily-pine/main/valkey/APKBUILD...
>>> valkey: Cleaning up srcdir
>>> valkey: Cleaning up pkgdir
>>> valkey: Cleaning up tmpdir
>>> valkey: Fetching https://github.com/valkey-io/valkey/archive/7.2.9/valkey-7.2.9.tar.gz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100  6321    0  6321    0     0   9307      0 --:--:-- --:--:-- --:--:--  9307100 3355k    0 3355k    0     0  3022k      0 --:--:--  0:00:01 --:--:-- 7788k
>>> valkey: Fetching https://github.com/valkey-io/valkey/archive/7.2.9/valkey-7.2.9.tar.gz
>>> valkey: Checking sha512sums...
valkey-7.2.9.tar.gz: OK
valkey.conf.patch: OK
sentinel.conf.patch: OK
valkey.initd: OK
valkey.confd: OK
valkey-sentinel.initd: OK
valkey-sentinel.confd: OK
>>> valkey: Preparing build chroot...
fetch http://dl-cdn.alpinelinux.org/alpine/edge/main/x86_64/APKINDEX.tar.gz
(1/79) Installing musl (1.2.5-r10)
(2/79) Installing libcrypto3 (3.5.0-r0)
(3/79) Installing ca-certificates-bundle (20241121-r2)
(4/79) Installing libssl3 (3.5.0-r0)
(5/79) Installing zlib (1.3.1-r2)
(6/79) Installing libapk2 (2.14.9-r2)
(7/79) Installing apk-tools (2.14.9-r2)
(8/79) Installing libcap2 (2.76-r0)
(9/79) Installing libcap-getcap (2.76-r0)
(10/79) Installing fakeroot (1.37.1.1-r0)
(11/79) Installing scanelf (1.3.8-r1)
(12/79) Installing musl-utils (1.2.5-r10)
(13/79) Installing libgcc (14.3.0-r1)
(14/79) Installing libstdc++ (14.3.0-r1)
(15/79) Installing lzip (1.25-r0)
(16/79) Installing openssl (3.5.0-r0)
(17/79) Installing patch (2.8-r0)
(18/79) Installing pkgconf (2.4.3-r0)
(19/79) Installing acl-libs (2.3.2-r1)
(20/79) Installing tar (1.35-r3)
(21/79) Installing busybox (1.37.0-r18)
Executing busybox-1.37.0-r18.post-install
(22/79) Installing ssl_client (1.37.0-r18)
(23/79) Installing busybox-binsh (1.37.0-r18)
(24/79) Installing abuild (3.15.0-r0)
Executing abuild-3.15.0-r0.pre-install
(25/79) Installing abuild-sudo (3.15.0-r0)
(26/79) Installing alpine-baselayout-data (3.7.0-r0)
(27/79) Installing alpine-baselayout (3.7.0-r0)
Executing alpine-baselayout-3.7.0-r0.pre-install
Executing alpine-baselayout-3.7.0-r0.post-install
(28/79) Installing bridge (1.5-r5)
(29/79) Installing ifupdown-ng (0.12.1-r7)
(30/79) Installing openrc-user (0.62.2-r2)
(31/79) Installing openrc (0.62.2-r2)
Executing openrc-0.62.2-r2.post-install
(32/79) Installing mdev-conf (4.8-r0)
(33/79) Installing busybox-mdev-openrc (1.37.0-r18)
(34/79) Installing alpine-conf (3.20.0-r0)
(35/79) Installing alpine-keys (2.5-r0)
(36/79) Installing alpine-release (3.22.0-r0)
(37/79) Installing busybox-openrc (1.37.0-r18)
(38/79) Installing busybox-suid (1.37.0-r18)
(39/79) Installing alpine-base (3.22.0-r0)
(40/79) Installing jansson (2.14.1-r0)
(41/79) Installing zstd-libs (1.5.7-r0)
(42/79) Installing binutils (2.44-r0)
(43/79) Installing libmagic (5.46-r2)
(44/79) Installing file (5.46-r2)
(45/79) Installing libgomp (14.3.0-r1)
(46/79) Installing libatomic (14.3.0-r1)
(47/79) Installing gmp (6.3.0-r3)
(48/79) Installing isl26 (0.26-r1)
(49/79) Installing mpfr4 (4.2.1_p1-r0)
(50/79) Installing mpc1 (1.3.1-r1)
(51/79) Installing gcc (14.3.0-r1)
(52/79) Installing libstdc++-dev (14.3.0-r1)
(53/79) Installing musl-dev (1.2.5-r10)
(54/79) Installing g++ (14.3.0-r1)
(55/79) Installing make (4.4.1-r3)
(56/79) Installing fortify-headers (1.1-r5)
(57/79) Installing build-base (0.5-r3)
(58/79) Installing brotli-libs (1.1.0-r2)
(59/79) Installing c-ares (1.34.5-r0)
(60/79) Installing libunistring (1.3-r0)
(61/79) Installing libidn2 (2.3.7-r0)
(62/79) Installing nghttp2-libs (1.65.0-r0)
(63/79) Installing libpsl (0.21.5-r3)
(64/79) Installing libcurl (8.14.0-r2)
(65/79) Installing libexpat (2.7.1-r0)
(66/79) Installing pcre2 (10.43-r1)
(67/79) Installing git (2.49.0-r0)
(68/79) Installing git-init-template (2.49.0-r0)
(69/79) Installing linux-headers (6.14.2-r0)
(70/79) Installing openssl-dev (3.5.0-r0)
(71/79) Installing libintl (0.24.1-r0)
(72/79) Installing ncurses-terminfo-base (6.5_p20250503-r0)
(73/79) Installing libncursesw (6.5_p20250503-r0)
(74/79) Installing skalibs-libs (2.14.4.0-r0)
(75/79) Installing utmps-libs (0.1.3.1-r0)
(76/79) Installing libproc2 (4.0.4-r3)
(77/79) Installing procps-ng (4.0.4-r3)
(78/79) Installing tzdata (2025b-r0)
(79/79) Installing tcl (8.6.16-r0)
Executing busybox-1.37.0-r18.trigger
OK: 273 MiB in 79 packages
>>> valkey: Fetching https://github.com/valkey-io/valkey/archive/7.2.9/valkey-7.2.9.tar.gz
>>> valkey: Checking sha512sums...
valkey-7.2.9.tar.gz: OK
valkey.conf.patch: OK
sentinel.conf.patch: OK
valkey.initd: OK
valkey.confd: OK
valkey-sentinel.initd: OK
valkey-sentinel.confd: OK
>>> valkey: Unpacking /var/cache/distfiles/valkey-7.2.9.tar.gz...
>>> valkey: valkey.conf.patch
patching file valkey.conf
>>> valkey: sentinel.conf.patch
patching file sentinel.conf
cd src && make all
make[1]: Entering directory '/tmp/src/valkey-7.2.9/src'
    [34mCC[0m [33mMakefile.dep[0m
rm -rf valkey-server valkey-sentinel valkey-cli valkey-benchmark valkey-check-rdb valkey-check-aof *.o *.gcda *.gcno *.gcov redis.info lcov-html Makefile.dep *.so
rm -f adlist.d quicklist.d ae.d anet.d dict.d server.d sds.d zmalloc.d lzf_c.d lzf_d.d pqsort.d zipmap.d sha1.d ziplist.d release.d networking.d util.d object.d db.d replication.d rdb.d t_string.d t_list.d t_set.d t_zset.d t_hash.d config.d aof.d pubsub.d multi.d debug.d sort.d intset.d syncio.d cluster.d crc16.d endianconv.d slowlog.d eval.d bio.d rio.d rand.d memtest.d syscheck.d crcspeed.d crc64.d bitops.d sentinel.d notify.d setproctitle.d blocked.d hyperloglog.d latency.d sparkline.d valkey-check-rdb.d valkey-check-aof.d geo.d lazyfree.d module.d evict.d expire.d geohash.d geohash_helper.d childinfo.d defrag.d siphash.d rax.d t_stream.d listpack.d localtime.d lolwut.d lolwut5.d lolwut6.d acl.d tracking.d socket.d tls.d sha256.d timeout.d setcpuaffinity.d monotonic.d mt19937-64.d resp_parser.d call_reply.d script_lua.d script.d functions.d function_lua.d commands.d strl.d connection.d unix.d logreqres.d anet.d adlist.d dict.d valkey-cli.d zmalloc.d release.d ae.d redisassert.d crcspeed.d crc64.d siphash.d crc16.d monotonic.d cli_common.d mt19937-64.d strl.d cli_commands.d ae.d anet.d valkey-benchmark.d adlist.d dict.d zmalloc.d redisassert.d release.d crcspeed.d crc64.d siphash.d crc16.d monotonic.d cli_common.d mt19937-64.d strl.d
(cd ../deps && make distclean)
make[2]: Entering directory '/tmp/src/valkey-7.2.9/deps'
(cd hiredis && make clean) > /dev/null || true
(cd linenoise && make clean) > /dev/null || true
(cd lua && make clean) > /dev/null || true
(cd jemalloc && [ -f Makefile ] && make distclean) > /dev/null || true
(cd hdr_histogram && make clean) > /dev/null || true
(cd fpconv && make clean) > /dev/null || true
(rm -f .make-*)
make[2]: Leaving directory '/tmp/src/valkey-7.2.9/deps'
(cd modules && make clean)
make[2]: Entering directory '/tmp/src/valkey-7.2.9/src/modules'
rm -rf *.xo *.so
make[2]: Leaving directory '/tmp/src/valkey-7.2.9/src/modules'
(cd ../tests/modules && make clean)
make[2]: Entering directory '/tmp/src/valkey-7.2.9/tests/modules'
rm -f commandfilter.so basics.so testrdb.so fork.so infotest.so propagate.so misc.so hooks.so blockonkeys.so blockonbackground.so scan.so datatype.so datatype2.so auth.so keyspace_events.so blockedclient.so getkeys.so getchannels.so test_lazyfree.so timer.so defragtest.so keyspecs.so hash.so zset.so stream.so mallocsize.so aclcheck.so list.so subcommands.so reply.so cmdintrospection.so eventloop.so moduleconfigs.so moduleconfigstwo.so publish.so usercall.so postnotifications.so moduleauthtwo.so rdbloadsave.so commandfilter.xo basics.xo testrdb.xo fork.xo infotest.xo propagate.xo misc.xo hooks.xo blockonkeys.xo blockonbackground.xo scan.xo datatype.xo datatype2.xo auth.xo keyspace_events.xo blockedclient.xo getkeys.xo getchannels.xo test_lazyfree.xo timer.xo defragtest.xo keyspecs.xo hash.xo zset.xo stream.xo mallocsize.xo aclcheck.xo list.xo subcommands.xo reply.xo cmdintrospection.xo eventloop.xo moduleconfigs.xo moduleconfigstwo.xo publish.xo usercall.xo postnotifications.xo moduleauthtwo.xo rdbloadsave.xo
make[2]: Leaving directory '/tmp/src/valkey-7.2.9/tests/modules'
(rm -f .make-*)
echo STD=-pedantic -DREDIS_STATIC='' -std=gnu11 >> .make-settings
echo WARN=-Wall -W -Wno-missing-field-initializers -Werror=deprecated-declarations -Wstrict-prototypes >> .make-settings
echo OPT=-O3 >> .make-settings
echo MALLOC=libc >> .make-settings
echo BUILD_TLS=yes >> .make-settings
echo USE_SYSTEMD= >> .make-settings
echo CFLAGS=-Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto >> .make-settings
echo LDFLAGS=-Wl,--as-needed,-O1,--sort-common -Wl,-z,pack-relative-relocs >> .make-settings
echo SERVER_CFLAGS=-flto=auto >> .make-settings
echo SERVER_LDFLAGS=-O3 -flto >> .make-settings
echo PREV_FINAL_CFLAGS=-pedantic -DREDIS_STATIC='' -std=gnu11 -Wall -W -Wno-missing-field-initializers -Werror=deprecated-declarations -Wstrict-prototypes -O3 -g -ggdb -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -flto=auto -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -I../deps/hdr_histogram -I../deps/fpconv -DUSE_OPENSSL=1  -DBUILD_TLS_MODULE=0 >> .make-settings
echo PREV_FINAL_LDFLAGS=-Wl,--as-needed,-O1,--sort-common -Wl,-z,pack-relative-relocs -O3 -flto -g -ggdb -rdynamic  >> .make-settings
(cd ../deps && make hiredis linenoise lua hdr_histogram fpconv)
make[2]: Entering directory '/tmp/src/valkey-7.2.9/deps'
(cd hiredis && make clean) > /dev/null || true
(cd linenoise && make clean) > /dev/null || true
(cd lua && make clean) > /dev/null || true
(cd jemalloc && [ -f Makefile ] && make distclean) > /dev/null || true
(cd hdr_histogram && make clean) > /dev/null || true
(cd fpconv && make clean) > /dev/null || true
(rm -f .make-*)
(echo "-Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto" > .make-cflags)
(echo "-Wl,--as-needed,-O1,--sort-common -Wl,-z,pack-relative-relocs" > .make-ldflags)
[32;1mMAKE[0m [37;1mhiredis[0m
cd hiredis && make static USE_SSL=1
[32;1mMAKE[0m [37;1mlinenoise[0m
[32;1mMAKE[0m [37;1mlua[0m
cd lua/src && make all CFLAGS="-Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2 " MYLDFLAGS="-Wl,--as-needed,-O1,--sort-common -Wl,-z,pack-relative-relocs" AR="ar rc"
cd linenoise && make
[32;1mMAKE[0m [37;1mhdr_histogram[0m
cd hdr_histogram && make
make[3]: Entering directory '/tmp/src/valkey-7.2.9/deps/hiredis'
[32;1mMAKE[0m [37;1mfpconv[0m
cd fpconv && make
make[3]: Entering directory '/tmp/src/valkey-7.2.9/deps/linenoise'
cc  -Wall -Os -g -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -c linenoise.c
make[3]: Entering directory '/tmp/src/valkey-7.2.9/deps/hdr_histogram'
cc -std=c99 -Wall -Os -g -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -DHDR_MALLOC_INCLUDE=\"hdr_redis_malloc.h\" -c  hdr_histogram.c 
make[3]: Entering directory '/tmp/src/valkey-7.2.9/deps/fpconv'
cc  -Wall -Os -g -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -c  fpconv_dtoa.c 
make[3]: Entering directory '/tmp/src/valkey-7.2.9/deps/lua/src'
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o lapi.o lapi.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o lcode.o lcode.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o ldebug.o ldebug.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o ldo.o ldo.c
cc -std=c99 -c -O3 -fPIC  -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -DHIREDIS_TEST_SSL -Wall -Wextra -Werror -Wstrict-prototypes -Wwrite-strings -Wno-missing-field-initializers -g -ggdb  -pedantic alloc.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o ldump.o ldump.c
cc -std=c99 -c -O3 -fPIC  -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -DHIREDIS_TEST_SSL -Wall -Wextra -Werror -Wstrict-prototypes -Wwrite-strings -Wno-missing-field-initializers -g -ggdb  -pedantic net.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o lfunc.o lfunc.c
cc -std=c99 -c -O3 -fPIC  -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -DHIREDIS_TEST_SSL -Wall -Wextra -Werror -Wstrict-prototypes -Wwrite-strings -Wno-missing-field-initializers -g -ggdb  -pedantic hiredis.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o lgc.o lgc.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o llex.o llex.c
cc -std=c99 -c -O3 -fPIC  -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -DHIREDIS_TEST_SSL -Wall -Wextra -Werror -Wstrict-prototypes -Wwrite-strings -Wno-missing-field-initializers -g -ggdb  -pedantic sds.c
cc -std=c99 -c -O3 -fPIC  -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -DHIREDIS_TEST_SSL -Wall -Wextra -Werror -Wstrict-prototypes -Wwrite-strings -Wno-missing-field-initializers -g -ggdb  -pedantic async.c
cc -std=c99 -c -O3 -fPIC  -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -DHIREDIS_TEST_SSL -Wall -Wextra -Werror -Wstrict-prototypes -Wwrite-strings -Wno-missing-field-initializers -g -ggdb  -pedantic read.c
cc -std=c99 -c -O3 -fPIC  -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -DHIREDIS_TEST_SSL -Wall -Wextra -Werror -Wstrict-prototypes -Wwrite-strings -Wno-missing-field-initializers -g -ggdb  -pedantic sockcompat.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o lmem.o lmem.c
ar rcs libfpconv.a fpconv_dtoa.o
make[3]: Leaving directory '/tmp/src/valkey-7.2.9/deps/fpconv'
cc -std=c99 -c -O3 -fPIC  -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -DHIREDIS_TEST_SSL -Wall -Wextra -Werror -Wstrict-prototypes -Wwrite-strings -Wno-missing-field-initializers -g -ggdb  -pedantic ssl.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o lobject.o lobject.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o lopcodes.o lopcodes.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o lparser.o lparser.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o lstate.o lstate.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o lstring.o lstring.c
make[3]: Leaving directory '/tmp/src/valkey-7.2.9/deps/linenoise'
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o ltable.o ltable.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o ltm.o ltm.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o lundump.o lundump.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o lvm.o lvm.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o lzio.o lzio.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o strbuf.o strbuf.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o fpconv.o fpconv.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o lauxlib.o lauxlib.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o lbaselib.o lbaselib.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o ldblib.o ldblib.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o liolib.o liolib.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o lmathlib.o lmathlib.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o loslib.o loslib.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o ltablib.o ltablib.c
ar rcs libhdrhistogram.a hdr_histogram.o
make[3]: Leaving directory '/tmp/src/valkey-7.2.9/deps/hdr_histogram'
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o lstrlib.o lstrlib.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o loadlib.o loadlib.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o linit.o linit.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o lua_cjson.o lua_cjson.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o lua_struct.o lua_struct.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o lua_cmsgpack.o lua_cmsgpack.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o lua_bit.o lua_bit.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o lua.o lua.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o luac.o luac.c
cc -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -DREDIS_STATIC='' -DLUA_USE_MKSTEMP -Os -fstack-clash-protection -Wformat -Werror=format-security -fno-plt -DUSE_MALLOC_USABLE_SIZE -O2 -flto=auto -O2    -c -o print.o print.c
ar rcs libhiredis.a alloc.o net.o hiredis.o sds.o async.o read.o sockcompat.o
ar rcs libhiredis_ssl.a ssl.o
make[3]: Leaving directory '/tmp/src/valkey-7.2.9/deps/hiredis'
ar rc liblua.a lapi.o lcode.o ldebug.o ldo.o ldump.o lfunc.o lgc.o llex.o lmem.o lobject.o lopcodes.o lparser.o lstate.o lstring.o ltable.o ltm.o lundump.o lvm.o lzio.o strbuf.o fpconv.o lauxlib.o lbaselib.o ldblib.o liolib.o lmathlib.o loslib.o ltablib.o lstrlib.o loadlib.o linit.o lua_cjson.o lua_struct.o lua_cmsgpack.o lua_bit.o	# DLL needs all object files
ranlib liblua.a
cc -o lua -Wl,--as-needed,-O1,--sort-common -Wl,-z,pack-relative-relocs lua.o liblua.a -lm 
cc -o luac -Wl,--as-needed,-O1,--sort-common -Wl,-z,pack-relative-relocs luac.o print.o liblua.a -lm 
make[3]: Leaving directory '/tmp/src/valkey-7.2.9/deps/lua/src'
make[2]: Leaving directory '/tmp/src/valkey-7.2.9/deps'
    [34mCC[0m [33madlist.o[0m
    [34mCC[0m [33mquicklist.o[0m
    [34mCC[0m [33mae.o[0m
    [34mCC[0m [33manet.o[0m
    [34mCC[0m [33mdict.o[0m
    [34mCC[0m [33mserver.o[0m
    [34mCC[0m [33msds.o[0m
    [34mCC[0m [33mzmalloc.o[0m
    [34mCC[0m [33mlzf_c.o[0m
    [34mCC[0m [33mlzf_d.o[0m
    [34mCC[0m [33mpqsort.o[0m
    [34mCC[0m [33mzipmap.o[0m
    [34mCC[0m [33msha1.o[0m
    [34mCC[0m [33mziplist.o[0m
    [34mCC[0m [33mrelease.o[0m
    [34mCC[0m [33mnetworking.o[0m
    [34mCC[0m [33mutil.o[0m
    [34mCC[0m [33mobject.o[0m
    [34mCC[0m [33mdb.o[0m
    [34mCC[0m [33mreplication.o[0m
    [34mCC[0m [33mrdb.o[0m
    [34mCC[0m [33mt_string.o[0m
    [34mCC[0m [33mt_list.o[0m
    [34mCC[0m [33mt_set.o[0m
    [34mCC[0m [33mt_zset.o[0m
    [34mCC[0m [33mt_hash.o[0m
    [34mCC[0m [33mconfig.o[0m
    [34mCC[0m [33maof.o[0m
    [34mCC[0m [33mpubsub.o[0m
    [34mCC[0m [33mmulti.o[0m
    [34mCC[0m [33mdebug.o[0m
    [34mCC[0m [33msort.o[0m
    [34mCC[0m [33mintset.o[0m
    [34mCC[0m [33msyncio.o[0m
    [34mCC[0m [33mcluster.o[0m
    [34mCC[0m [33mcrc16.o[0m
    [34mCC[0m [33mendianconv.o[0m
    [34mCC[0m [33mslowlog.o[0m
    [34mCC[0m [33meval.o[0m
    [34mCC[0m [33mbio.o[0m
    [34mCC[0m [33mrio.o[0m
    [34mCC[0m [33mrand.o[0m
    [34mCC[0m [33mmemtest.o[0m
    [34mCC[0m [33msyscheck.o[0m
    [34mCC[0m [33mcrcspeed.o[0m
    [34mCC[0m [33mcrc64.o[0m
    [34mCC[0m [33mbitops.o[0m
    [34mCC[0m [33msentinel.o[0m
    [34mCC[0m [33msetproctitle.o[0m
    [34mCC[0m [33mnotify.o[0m
    [34mCC[0m [33mblocked.o[0m
    [34mCC[0m [33mhyperloglog.o[0m
    [34mCC[0m [33mlatency.o[0m
    [34mCC[0m [33msparkline.o[0m
    [34mCC[0m [33mvalkey-check-rdb.o[0m
    [34mCC[0m [33mvalkey-check-aof.o[0m
    [34mCC[0m [33mgeo.o[0m
    [34mCC[0m [33mlazyfree.o[0m
    [34mCC[0m [33mmodule.o[0m
    [34mCC[0m [33mevict.o[0m
    [34mCC[0m [33mexpire.o[0m
    [34mCC[0m [33mgeohash.o[0m
    [34mCC[0m [33mgeohash_helper.o[0m
    [34mCC[0m [33mchildinfo.o[0m
    [34mCC[0m [33mdefrag.o[0m
    [34mCC[0m [33msiphash.o[0m
    [34mCC[0m [33mrax.o[0m
    [34mCC[0m [33mt_stream.o[0m
    [34mCC[0m [33mlistpack.o[0m
    [34mCC[0m [33mlocaltime.o[0m
    [34mCC[0m [33mlolwut.o[0m
    [34mCC[0m [33mlolwut5.o[0m
    [34mCC[0m [33mlolwut6.o[0m
    [34mCC[0m [33macl.o[0m
    [34mCC[0m [33mtracking.o[0m
    [34mCC[0m [33msocket.o[0m
    [34mCC[0m [33mtls.o[0m
    [34mCC[0m [33msha256.o[0m
    [34mCC[0m [33mtimeout.o[0m
    [34mCC[0m [33msetcpuaffinity.o[0m
    [34mCC[0m [33mmonotonic.o[0m
    [34mCC[0m [33mmt19937-64.o[0m
    [34mCC[0m [33mresp_parser.o[0m
    [34mCC[0m [33mcall_reply.o[0m
    [34mCC[0m [33mscript_lua.o[0m
    [34mCC[0m [33mscript.o[0m
    [34mCC[0m [33mfunctions.o[0m
    [34mCC[0m [33mfunction_lua.o[0m
    [34mCC[0m [33mcommands.o[0m
    [34mCC[0m [33mstrl.o[0m
    [34mCC[0m [33mconnection.o[0m
    [34mCC[0m [33munix.o[0m
    [34mCC[0m [33mlogreqres.o[0m
    [34mCC[0m [33mvalkey-cli.o[0m
    [34mCC[0m [33mredisassert.o[0m
    [34mCC[0m [33mcli_common.o[0m
    [34mCC[0m [33mcli_commands.o[0m
    [34mCC[0m [33mvalkey-benchmark.o[0m
    [34;1mLINK[0m [37;1mvalkey-benchmark[0m
    [34;1mLINK[0m [37;1mvalkey-cli[0m
    [34;1mLINK[0m [37;1mvalkey-server[0m
    [34;1mINSTALL[0m [37;1mvalkey-sentinel[0m
    [34;1mINSTALL[0m [37;1mvalkey-check-rdb[0m
    [34;1mINSTALL[0m [37;1mvalkey-check-aof[0m

Hint: It's a good idea to run 'make test' ;)

make[1]: Leaving directory '/tmp/src/valkey-7.2.9/src'
cd src && make test
make[1]: Entering directory '/tmp/src/valkey-7.2.9/src'
    [34mCC[0m [33mMakefile.dep[0m
Cleanup: may take some time... OK
Starting test server at port 21079
[ready]: 1312
Testing unit/printver
[ready]: 1302
Testing unit/dump
[ready]: 1304
Testing unit/auth
[ready]: 1303
Testing unit/protocol
[ready]: 1307
Testing unit/keyspace
[ready]: 1310
Testing unit/scan
[ready]: 1316
Testing unit/info
[ready]: 1314
Testing unit/info-command
[ready]: 1313
Testing unit/type/string
[ready]: 1306
Testing unit/type/incr
[ready]: 1317
Testing unit/type/list
[ready]: 1305
Testing unit/type/list-2
[ready]: 1315
Testing unit/type/list-3
[ready]: 1308
Testing unit/type/set
[ready]: 1309
Testing unit/type/zset
[ready]: 1311
Testing unit/type/hash
[ok]: Handle an empty query (44 ms)
[ok]: Negative multibulk length (47 ms)
[ok]: Out of range multibulk length (0 ms)
[ok]: Wrong multibulk payload header (1 ms)
[ok]: Negative multibulk payload length (0 ms)
[ok]: Out of range multibulk payload length (0 ms)
[ok]: Non-number multibulk payload length (0 ms)
[ok]: Multi bulk request not followed by bulk arguments (0 ms)
[ok]: Generic wrong number of args (1 ms)
[ok]: Unbalanced number of quotes (0 ms)
[ok]: DEL against a single item (0 ms)
[ok]: SET and GET an item (1 ms)
[ok]: SET and GET an empty item (0 ms)
[ok]: AUTH fails if there is no password configured server side (0 ms)
[ok]: Vararg DEL (0 ms)
[ok]: DUMP / RESTORE are able to serialize / unserialize a simple key (1 ms)
[ok]: Arity check for auth command (0 ms)
[ok]: Untagged multi-key commands (0 ms)
[ok]: RESTORE can set an arbitrary expire to the materialized key (1 ms)
Testing Redis version 7.2.4 (00000000)
[ok]: info command with at most one sub command (1 ms)
[ok]: RESTORE can set an expire that overflows a 32 bit integer (0 ms)
[ok]: KEYS with pattern (0 ms)
[ok]: info command with one sub-section (0 ms)
[ok]: KEYS to get all keys (0 ms)
[ok]: DBSIZE (1 ms)
[ok]: RESTORE can set an absolute expire (1 ms)
[ok]: info command with multiple sub-sections (1 ms)
[ok]: reg node check compression with insert and pop (2 ms)
[ok]: RESTORE with ABSTTL in the past (0 ms)
[ok]: DEL all keys (0 ms)
[ok]: RESTORE can set LRU (1 ms)
[ok]: reg node check compression combined with trim (1 ms)
[ok]: reg node check compression with lset (0 ms)
[ok]: RESTORE can set LFU (1 ms)
[ok]: RESTORE returns an error of the key already exists (0 ms)
[ok]: SADD, SCARD, SISMEMBER, SMISMEMBER, SMEMBERS basics - listpack (2 ms)
[ok]: plain node check compression (2 ms)
[ok]: RESTORE can overwrite an existing key with REPLACE (1 ms)
[ok]: RESTORE can detect a syntax error for unrecognized options (0 ms)
[ok]: Explicit regression for a list bug (1 ms)
[ok]: Check encoding - listpack (0 ms)
[ok]: plain node check compression with ltrim (0 ms)
[ok]: ZSET basic ZADD and score update - listpack (1 ms)
[ok]: ZSET element can't be set to NaN with ZADD - listpack (0 ms)
[ok]: plain node check compression using lset (1 ms)
[ok]: ZSET element can't be set to NaN with ZINCRBY - listpack (0 ms)
[ok]: ZADD with options syntax error with incomplete pair - listpack (0 ms)
[ok]: ZADD XX option without key - listpack (0 ms)
[ok]: ZADD XX existing key - listpack (0 ms)
[ok]: ZADD XX returns the number of elements actually added - listpack (0 ms)
[ok]: ZADD XX updates existing elements score - listpack (0 ms)
[ok]: INCR against non existing key (1 ms)
[ok]: INCR against key created by incr itself (0 ms)
[ok]: ZADD GT updates existing elements when new scores are greater - listpack (0 ms)
[ok]: DECR against key created by incr (0 ms)
[ok]: DECR against key is not exist and incr (0 ms)
[ok]: ZADD LT updates existing elements when new scores are lower - listpack (0 ms)
[ok]: INCR against key originally set with SET (0 ms)
[ok]: INCR over 32bit value (0 ms)
[ok]: INCRBY over 32bit value with over 32bit increment (1 ms)
[ok]: HSET/HLEN - Small hash creation (1 ms)
[ok]: ZADD GT XX updates existing elements when new scores are greater and skips new elements - listpack (1 ms)
[ok]: INCR fails against key with spaces (left) (0 ms)
[ok]: Is the small hash encoded with a listpack? (0 ms)
[ok]: INCR fails against key with spaces (right) (0 ms)
[ok]: INCR fails against key with spaces (both) (0 ms)
[ok]: DECRBY negation overflow (0 ms)
[ok]: ZADD LT XX updates existing elements when new scores are lower and skips new elements - listpack (0 ms)
[ok]: INCR fails against a key holding a list (0 ms)
[ok]: DECRBY over 32bit value with over 32bit increment, negative res (0 ms)
[ok]: ZADD XX and NX are not compatible - listpack (0 ms)
[ok]: DECRBY against key is not exist (1 ms)
[ok]: ZADD NX with non existing key - listpack (0 ms)
[ok]: INCR uses shared objects in the 0-9999 range (0 ms)
[ok]: INCR can modify objects in-place (0 ms)
[ok]: ZADD NX only add new elements without updating old ones - listpack (0 ms)
[ok]: ZADD GT and NX are not compatible - listpack (0 ms)
[ok]: INCRBYFLOAT against non existing key (1 ms)
[ok]: INCRBYFLOAT against key originally set with SET (0 ms)
[ok]: ZADD LT and NX are not compatible - listpack (0 ms)
[ok]: INCRBYFLOAT over 32bit value (0 ms)
[ok]: INCRBYFLOAT over 32bit value with over 32bit increment (0 ms)
[ok]: ZADD LT and GT are not compatible - listpack (0 ms)
[ok]: INCRBYFLOAT fails against key with spaces (left) (0 ms)
[ok]: INCRBYFLOAT fails against key with spaces (right) (0 ms)
[ok]: INCRBYFLOAT fails against key with spaces (both) (0 ms)
[ok]: ZADD INCR LT/GT replies with nill if score not updated - listpack (0 ms)
[ok]: INCRBYFLOAT fails against a key holding a list (0 ms)
[ok]: INCRBYFLOAT does not allow NaN or Infinity (1 ms)
[ok]: INCRBYFLOAT decrement (0 ms)
[ok]: string to double with null terminator (0 ms)
[ok]: No negative zero (0 ms)
[ok]: SADD, SCARD, SISMEMBER, SMISMEMBER, SMEMBERS basics - hashtable (8 ms)
[ok]: ZADD INCR LT/GT with inf - listpack (2 ms)
[ok]: ZADD INCR works like ZINCRBY - listpack (0 ms)
[ok]: incr operation should update encoding from raw to int (1 ms)
[ok]: ZADD INCR works with a single score-elemenet pair - listpack (0 ms)
[ok]: SADD, SCARD, SISMEMBER, SMISMEMBER, SMEMBERS basics - intset (0 ms)
[ok]: ZADD CH option changes return value to all changed elements - listpack (0 ms)
[ok]: SMISMEMBER SMEMBERS SCARD against non set (1 ms)
[ok]: ZINCRBY calls leading to NaN result in error - listpack (1 ms)
[ok]: decr operation should update encoding from raw to int (1 ms)
[ok]: ZADD - Variadic version base case - listpack (0 ms)
[ok]: SMISMEMBER SMEMBERS SCARD against non existing key (0 ms)
[ok]: ZADD - Return value is the number of actually added items - listpack (0 ms)
[ok]: SMISMEMBER requires one or more members (0 ms)
[ok]: SADD against non set (0 ms)
[ok]: ZADD - Variadic version does not add nothing on single parsing err - listpack (0 ms)
[ok]: ZADD - Variadic version will raise error on missing arg - listpack (0 ms)
[ok]: incrby operation should update encoding from raw to int (0 ms)
[ok]: ZINCRBY does not work variadic even if shares ZADD implementation - listpack (0 ms)
[ok]: SADD a non-integer against a small intset (0 ms)
[ok]: HRANDFIELD - listpack (5 ms)
[ok]: ZCARD basics - listpack (1 ms)
[ok]: decrby operation should update encoding from raw to int (1 ms)
[ok]: ZREM removes key after last element is removed - listpack (0 ms)
[ok]: ZREM variadic version - listpack (0 ms)
[ok]: ZREM variadic version -- remove elements after key deletion - listpack (0 ms)
[ok]: ZRANGE basics - listpack (1 ms)
[ok]: ZREVRANGE basics - listpack (1 ms)
[ok]: ZRANK/ZREVRANK basics - listpack (1 ms)
[ok]: ZRANK - after deletion - listpack (0 ms)
[ok]: ZINCRBY - can create a new sorted set - listpack (1 ms)
[ok]: ZINCRBY - increment and decrement - listpack (0 ms)
[ok]: ZINCRBY return value - listpack (0 ms)
[ok]: HRANDFIELD - hashtable (5 ms)
[ok]: SADD a non-integer against a large intset (6 ms)
[ok]: SADD an integer larger than 64 bits (0 ms)
[ok]: HRANDFIELD with RESP3 (0 ms)
[ok]: HRANDFIELD count of 0 is handled correctly (0 ms)
[ok]: HRANDFIELD count overflow (0 ms)
[ok]: HRANDFIELD with <count> against non existing key (0 ms)
[ok]: HRANDFIELD count of 0 is handled correctly - emptyarray (0 ms)
[ok]: HRANDFIELD with <count> against non existing key - emptyarray (0 ms)
[ok]: ZRANGEBYSCORE/ZREVRANGEBYSCORE/ZCOUNT basics - listpack (3 ms)
[ok]: ZRANGEBYSCORE with WITHSCORES - listpack (0 ms)
[ok]: ZRANGEBYSCORE with LIMIT - listpack (1 ms)
[ok]: ZRANGEBYSCORE with LIMIT and WITHSCORES - listpack (1 ms)
[ok]: ZRANGEBYSCORE with non-value min or max - listpack (0 ms)
[ok]: ZRANGEBYLEX/ZREVRANGEBYLEX/ZLEXCOUNT basics - listpack (1 ms)
[ok]: SADD an integer larger than 64 bits to a large intset (6 ms)
[ok]: ZLEXCOUNT advanced - listpack (1 ms)
[ok]: ZRANGEBYSLEX with LIMIT - listpack (1 ms)
[ok]: ZRANGEBYLEX with invalid lex range specifiers - listpack (1 ms)
[ok]: ZREMRANGEBYSCORE basics - listpack (6 ms)
[ok]: ZREMRANGEBYSCORE with non-value min or max - listpack (1 ms)
[ok]: ZREMRANGEBYRANK basics - listpack (2 ms)
[ok]: ZREMRANGEBYLEX basics - listpack (6 ms)
[ok]: ZUNIONSTORE against non-existing key doesn't set destination - listpack (0 ms)
[ok]: ZUNION/ZINTER/ZINTERCARD/ZDIFF against non-existing key - listpack (1 ms)
[ok]: ZUNIONSTORE with empty set - listpack (0 ms)
[ok]: ZUNION/ZINTER/ZINTERCARD/ZDIFF with empty set - listpack (0 ms)
[ok]: ZUNIONSTORE basics - listpack (0 ms)
[ok]: ZUNION/ZINTER/ZINTERCARD/ZDIFF with integer members - listpack (1 ms)
[ok]: ZUNIONSTORE with weights - listpack (0 ms)
[ok]: ZUNION with weights - listpack (0 ms)
[ok]: ZUNIONSTORE with a regular set and weights - listpack (0 ms)
[ok]: SADD overflows the maximum allowed integers in an intset - single (20 ms)
[ok]: ZUNIONSTORE with AGGREGATE MIN - listpack (0 ms)
[ok]: ZUNION/ZINTER with AGGREGATE MIN - listpack (0 ms)
[ok]: ZUNIONSTORE with AGGREGATE MAX - listpack (0 ms)
[ok]: ZUNION/ZINTER with AGGREGATE MAX - listpack (0 ms)
[ok]: ZINTERSTORE basics - listpack (0 ms)
[ok]: ZINTER basics - listpack (0 ms)
[ok]: SCAN basic (47 ms)
[ok]: ZINTERCARD with illegal arguments (1 ms)
[ok]: ZINTERCARD basics - listpack (0 ms)
[ok]: ZINTER RESP3 - listpack (0 ms)
[ok]: ZINTERSTORE with weights - listpack (0 ms)
[ok]: ZINTER with weights - listpack (0 ms)
[ok]: ZINTERSTORE with a regular set and weights - listpack (1 ms)
[ok]: ZINTERSTORE with AGGREGATE MIN - listpack (0 ms)
[ok]: ZINTERSTORE with AGGREGATE MAX - listpack (0 ms)
[ok]: ZUNIONSTORE with +inf/-inf scores - listpack (1 ms)
[ok]: ZUNIONSTORE with NaN weights - listpack (0 ms)
[ok]: ZINTERSTORE with +inf/-inf scores - listpack (0 ms)
[ok]: ZINTERSTORE with NaN weights - listpack (1 ms)
[ok]: ZDIFFSTORE basics - listpack (0 ms)
[ok]: ZDIFF basics - listpack (0 ms)
[ok]: ZDIFFSTORE with a regular set - listpack (0 ms)
[ok]: ZDIFF subtracting set from itself - listpack (0 ms)
[ok]: ZDIFF algorithm 1 - listpack (1 ms)
[ok]: ZDIFF algorithm 2 - listpack (0 ms)
[ok]: SADD overflows the maximum allowed elements in a listpack - single (5 ms)
[ok]: Protocol desync regression test #1 (60 ms)
[ok]: Very big payload in GET/SET (71 ms)
[ok]: HRANDFIELD with <count> - hashtable (62 ms)
[ok]: RESTORE should not store key that are already expired, with REPLACE will propagate it as DEL or UNLINK (87 ms)
[ok]: DUMP of non existing key returns nil (0 ms)
[ok]: Protocol desync regression test #2 (38 ms)
[1/91 done]: unit/printver (0 seconds)
Testing unit/type/stream
[ok]: SADD overflows the maximum allowed integers in an intset - multiple (46 ms)
[ok]: SADD overflows the maximum allowed elements in a listpack - multiple (1 ms)
[2/91 done]: unit/info-command (0 seconds)
Testing unit/type/stream-cgroups
[ok]: SCAN COUNT (52 ms)
[3/91 done]: unit/type/incr (0 seconds)
Testing unit/sort
[ok]: latencystats: disable/enable (1 ms)
[ok]: Protocol desync regression test #3 (22 ms)
[ok]: raw protocol response (0 ms)
[ok]: raw protocol response - deferred (0 ms)
[ok]: raw protocol response - multiline (0 ms)
[ok]: RESP3 attributes (1 ms)
[ok]: RESP3 attributes readraw (0 ms)
[ok]: latencystats: configure percentiles (2 ms)
[ok]: RESP3 attributes on RESP2 (0 ms)
[ok]: test big number parsing (0 ms)
[ok]: test bool parsing (0 ms)
[ok]: test verbatim str parsing (1 ms)
[ok]: latencystats: bad configure percentiles (1 ms)
[ok]: latencystats: blocking commands (2 ms)
[ok]: latencystats: subcommands (1 ms)
[ok]: SCAN MATCH (31 ms)
[ok]: test large number of args (16 ms)
[ok]: test argument rewriting - issue 9598 (0 ms)
[ok]: Regression for quicklist #3343 bug (133 ms)
[ok]: SADD overflows the maximum allowed integers in an intset - single_multiple (42 ms)
[ok]: SADD overflows the maximum allowed elements in a listpack - single_multiple (1 ms)
[ok]: Variadic SADD (0 ms)
[ok]: HRANDFIELD with <count> - listpack (70 ms)
[ok]: SCAN TYPE (38 ms)
[ok]: latencystats: measure latency (51 ms)
[ok]: errorstats: failed call authentication error (1 ms)
[ok]: errorstats: failed call within MULTI/EXEC (2 ms)
[ok]: errorstats: failed call within LUA (2 ms)
[ok]: errorstats: failed call NOSCRIPT error (1 ms)
[ok]: errorstats: failed call NOGROUP error (1 ms)
[ok]: errorstats: rejected call unknown command (1 ms)
[ok]: errorstats: rejected call within MULTI/EXEC (2 ms)
[ok]: errorstats: rejected call due to wrong arity (1 ms)
[ok]: errorstats: rejected call by OOM error (1 ms)
[ok]: errorstats: rejected call by authorization error (1 ms)
[ok]: errorstats: blocking commands (2 ms)
[ok]: SCAN unknown type (29 ms)
[ok]: HSET/HLEN - Big hash creation (52 ms)
[ok]: Is the big hash encoded with an hash table? (1 ms)
[ok]: HGET against the small hash (0 ms)
[ok]: AUTH fails when a wrong password is given (0 ms)
[ok]: Arbitrary command gives an error when AUTH is required (0 ms)
[ok]: AUTH succeeds when the right password is given (0 ms)
[ok]: Once AUTH succeeded we can actually send commands to the server (1 ms)
[ok]: For unauthenticated clients multibulk and bulk length are limited (0 ms)
[ok]: XADD wrong number of args (0 ms)
[ok]: For unauthenticated clients output buffer is limited (0 ms)
[ok]: XADD can add entries into a stream that XRANGE can fetch (1 ms)
[ok]: For once authenticated clients output buffer is NOT limited (1 ms)
[ok]: XADD IDs are incremental (0 ms)
[ok]: XADD IDs are incremental when ms is the same as well (0 ms)
[ok]: XADD IDs correctly report an error when overflowing (0 ms)
[ok]: XADD auto-generated sequence is incremented for last ID (0 ms)
[ok]: XADD auto-generated sequence is zero for future timestamp ID (0 ms)
[ok]: XADD auto-generated sequence can't be smaller than last ID (0 ms)
[ok]: XADD auto-generated sequence can't overflow (0 ms)
[ok]: XGROUP CREATE: creation and duplicate group name detection (0 ms)
[ok]: XADD 0-* should succeed (0 ms)
[ok]: XGROUP CREATE: with ENTRIESREAD parameter (1 ms)
[ok]: XGROUP CREATE: automatic stream creation fails without MKSTREAM (0 ms)
[ok]: XGROUP CREATE: automatic stream creation works with MKSTREAM (0 ms)
[ok]: XREADGROUP will return only new elements (1 ms)
[ok]: XREADGROUP can read the history of the elements we own (1 ms)
[ok]: XPENDING is able to return pending items (0 ms)
[ok]: XPENDING can return single consumer items (0 ms)
[ok]: XPENDING only group (0 ms)
[ok]: Listpack: SORT BY key (0 ms)
[ok]: Listpack: SORT BY key with limit (0 ms)
[ok]: Listpack: SORT BY hash field (0 ms)
[ok]: Test LPUSH and LPOP on plain nodes (10 ms)
[ok]: Set encoding after DEBUG RELOAD (84 ms)
[ok]: Test LINDEX and LINSERT on plain nodes (1 ms)
[ok]: SREM basics - $type (1 ms)
[ok]: Test LTRIM on plain nodes (0 ms)
[ok]: Check compression with recompress (90 ms)
[ok]: SCAN with expired keys (30 ms)
[ok]: Test LREM on plain nodes (0 ms)
[ok]: Test LPOS on plain nodes (1 ms)
[ok]: Test LMOVE on plain nodes (0 ms)
[ok]: SREM basics - $type (7 ms)
[ok]: SREM basics - intset (1 ms)
[ok]: SREM with multiple arguments (0 ms)
[ok]: SREM variadic version with more args needed to destroy the key (0 ms)
[ok]: SINTERCARD with illegal arguments (1 ms)
[ok]: SINTERCARD against non-set should throw error (1 ms)
[ok]: SINTERCARD against non-existing key (0 ms)
[ok]: XPENDING with IDLE (21 ms)
[ok]: XPENDING with exclusive range intervals works as expected (0 ms)
[ok]: XACK is able to remove items from the consumer/group PEL (0 ms)
[ok]: XACK can't remove the same item multiple times (1 ms)
[ok]: XACK is able to accept multiple arguments (0 ms)
[ok]: XACK should fail if got at least one invalid ID (0 ms)
[ok]: PEL NACK reassignment after XGROUP SETID event (1 ms)
[ok]: XREADGROUP will not report data on empty history. Bug #5577 (1 ms)
[ok]: XREADGROUP history reporting of deleted entries. Bug #5570 (0 ms)
[ok]: Generated sets must be encoded correctly - regular (1 ms)
[ok]: SINTER with two sets - regular (0 ms)
[ok]: SINTERCARD with two sets - regular (0 ms)
[ok]: HGET against the big hash (54 ms)
[ok]: HGET against non existing key (0 ms)
[ok]: SINTERSTORE with two sets - regular (0 ms)
[ok]: HSET in update and insert mode (1 ms)
[ok]: HSETNX target key missing - small hash (0 ms)
[ok]: HSETNX target key exists - small hash (0 ms)
[ok]: HSETNX target key missing - big hash (0 ms)
[ok]: HSETNX target key exists - big hash (1 ms)
[ok]: HSET/HMSET wrong number of args (0 ms)
[ok]: HMSET - small hash (0 ms)
[ok]: SCAN with expired keys with TYPE filter (34 ms)
[ok]: Blocking XREADGROUP will not reply with an empty array (22 ms)
[ok]: SSCAN with encoding intset (1 ms)
[ok]: SINTERSTORE with two sets, after a DEBUG RELOAD - regular (4 ms)
[ok]: Blocking XREADGROUP: key deleted (1 ms)
[ok]: SSCAN with encoding listpack (1 ms)
[ok]: Blocking XREADGROUP: key type changed with SET (1 ms)
[ok]: Blocking XREADGROUP: key type changed with transaction (1 ms)
[ok]: Blocking XREADGROUP: flushed DB (1 ms)
[ok]: SSCAN with encoding hashtable (3 ms)
[ok]: SUNION with two sets - regular (4 ms)
[ok]: HSCAN with encoding listpack (1 ms)
[ok]: Blocking XREADGROUP: swapped DB, key doesn't exist (1 ms)
[ok]: Blocking XREADGROUP: swapped DB, key is not a stream (1 ms)
[ok]: XREAD and XREADGROUP against wrong parameter (0 ms)
[ok]: Blocking XREAD: key deleted (1 ms)
[ok]: Blocking XREAD: key type changed with SET (0 ms)
[ok]: SUNIONSTORE with two sets - regular (2 ms)
[ok]: SINTER against three sets - regular (0 ms)
[ok]: SINTERCARD against three sets - regular (0 ms)
[ok]: SINTERSTORE with three sets - regular (0 ms)
[ok]: SUNION with non existing keys - regular (3 ms)
[ok]: SDIFF with two sets - regular (0 ms)
[ok]: SDIFF with three sets - regular (0 ms)
[ok]: SDIFFSTORE with three sets - regular (0 ms)
[ok]: SINTER/SUNION/SDIFF with three same sets - regular (2 ms)
[ok]: XADD with MAXLEN option (63 ms)
[ok]: stats: eventloop metrics (111 ms)
[ok]: Generated sets must be encoded correctly - intset (1 ms)
[ok]: SINTER with two sets - intset (0 ms)
[ok]: SINTERCARD with two sets - intset (0 ms)
[ok]: SINTERSTORE with two sets - intset (0 ms)
[ok]: SINTERSTORE with two sets, after a DEBUG RELOAD - intset (3 ms)
[ok]: SUNION with two sets - intset (4 ms)
[ok]: HMSET - big hash (46 ms)
[ok]: HMGET against non existing key and fields (1 ms)
[ok]: Hash commands against wrong type (0 ms)
[ok]: HMGET - small hash (1 ms)
[ok]: Blocking XREADGROUP for stream that ran dry (issue #5299) (41 ms)
[ok]: SUNIONSTORE with two sets - intset (4 ms)
[ok]: SINTER against three sets - intset (0 ms)
[ok]: SINTERCARD against three sets - intset (0 ms)
[ok]: SINTERSTORE with three sets - intset (0 ms)
[ok]: MIGRATE is caching connections (221 ms)
[ok]: Blocking XREADGROUP will ignore BLOCK if ID is not > (2 ms)
[ok]: Regression for a crash with blocking ops and pipelining (1 ms)
[ok]: Blocking XREADGROUP for stream key that has clients blocked on list (3 ms)
[ok]: SUNION with non existing keys - intset (3 ms)
[ok]: SDIFF with two sets - intset (1 ms)
[ok]: SDIFF with three sets - intset (0 ms)
[ok]: SDIFFSTORE with three sets - intset (0 ms)
[ok]: Blocking XREADGROUP for stream key that has clients blocked on stream - avoid endless loop (1 ms)
[ok]: SINTER/SUNION/SDIFF with three same sets - intset (3 ms)
[ok]: SINTERSTORE with two listpack sets where result is intset (1 ms)
[ok]: HSCAN with encoding hashtable (55 ms)
[ok]: ZSCAN with encoding listpack (0 ms)
[ok]: SINTERSTORE with two hashtable sets where result is intset (11 ms)
[ok]: SUNION hashtable and listpack (1 ms)
[ok]: SDIFF with first set empty (0 ms)
[ok]: SDIFF with same set two times (0 ms)
[ok]: XADD with MAXLEN option and the '=' argument (61 ms)
[ok]: HMGET - big hash (48 ms)
[ok]: HKEYS - small hash (1 ms)
[ok]: Test LSET with packed / plain combinations (132 ms)
[ok]: Test LSET with packed is split in the middle (2 ms)
[ok]: Quicklist: SORT BY key (4 ms)
[ok]: HKEYS - big hash (4 ms)
[ok]: HVALS - small hash (0 ms)
[ok]: Quicklist: SORT BY key with limit (1 ms)
[ok]: HVALS - big hash (1 ms)
[ok]: HGETALL - small hash (0 ms)
[ok]: Quicklist: SORT BY hash field (4 ms)
[ok]: ZSCAN with encoding skiplist (57 ms)
[ok]: XADD with MAXLEN option and the '~' argument (43 ms)
[ok]: XADD with NOMKSTREAM option (1 ms)
[ok]: HGETALL - big hash (16 ms)
[ok]: HDEL and return value (0 ms)
[ok]: HDEL - more than a single value (1 ms)
[ok]: HDEL - hash becomes empty before deleting all specified fields (0 ms)
[ok]: HEXISTS (0 ms)
[ok]: Is a ziplist encoded Hash promoted on big payload? (1 ms)
[ok]: HINCRBY against non existing database key (0 ms)
[ok]: HINCRBY against non existing hash key (0 ms)
[ok]: HINCRBY against hash key created by hincrby itself (1 ms)
[ok]: HINCRBY against hash key originally set with HSET (0 ms)
[ok]: HINCRBY over 32bit value (0 ms)
[ok]: HINCRBY over 32bit value with over 32bit increment (1 ms)
[ok]: HINCRBY fails against hash value with spaces (left) (0 ms)
[ok]: HINCRBY fails against hash value with spaces (right) (0 ms)
[ok]: HINCRBY can detect overflows (0 ms)
[ok]: HINCRBYFLOAT against non existing database key (0 ms)
[ok]: SCAN guarantees check under write load (9 ms)
[ok]: HINCRBYFLOAT against non existing hash key (0 ms)
[ok]: SSCAN with integer encoded object (issue #1345) (0 ms)
[ok]: SSCAN with PATTERN (0 ms)
[ok]: HINCRBYFLOAT against hash key created by hincrby itself (0 ms)
[ok]: HSCAN with PATTERN (1 ms)
[ok]: HINCRBYFLOAT against hash key originally set with HSET (1 ms)
[ok]: ZSCAN with PATTERN (0 ms)
[ok]: HINCRBYFLOAT over 32bit value (0 ms)
[ok]: HINCRBYFLOAT over 32bit value with over 32bit increment (0 ms)
[ok]: HINCRBYFLOAT fails against hash value with spaces (left) (1 ms)
[ok]: HINCRBYFLOAT fails against hash value with spaces (right) (0 ms)
[ok]: HINCRBYFLOAT fails against hash value that contains a null-terminator in the middle (0 ms)
[ok]: HSTRLEN against the small hash (0 ms)
[4/91 done]: unit/protocol (0 seconds)
Testing unit/expire
[ok]: AUTH fails when binary password is wrong (0 ms)
[ok]: AUTH succeeds when binary password is correct (0 ms)
[ok]: ZSCAN scores: regression test for issue #2175 (37 ms)
[ok]: HSTRLEN against the big hash (42 ms)
[ok]: HSTRLEN against non existing field (1 ms)
[ok]: HSTRLEN corner cases (1 ms)
[ok]: XADD with MINID option (55 ms)
[ok]: XTRIM with MINID option (0 ms)
[ok]: HINCRBYFLOAT over hash-max-listpack-value encoded with a listpack (0 ms)
[ok]: Hash ziplist regression test for large keys (1 ms)
[ok]: XTRIM with MINID option, big delta from master record (1 ms)
[ok]: Hash fuzzing #1 - 10 fields (12 ms)
[ok]: Crash due to wrongly recompress after lrem (223 ms)
[ok]: Hash fuzzing #2 - 10 fields (10 ms)
[ok]: LINSERT correctly recompress full quicklistNode after inserting a element before it (47 ms)
[ok]: EXPIRE - set timeouts multiple times (1 ms)
[ok]: EXPIRE - It should be still possible to read 'x' (0 ms)
[ok]: Test LSET with packed consist only one item (175 ms)
[ok]: Crash due to delete entry from a compress quicklist node (1 ms)
[ok]: Crash due to split quicklist node wrongly (0 ms)
[ok]: LINSERT correctly recompress full quicklistNode after inserting a element after it (43 ms)
[ok]: LPOS basic usage - quicklist (43 ms)
[ok]: LPOS RANK (positive, negative and zero rank) option (1 ms)
[ok]: LPOS COUNT option (0 ms)
[ok]: LPOS COUNT + RANK option (1 ms)
[ok]: LPOS non existing key (0 ms)
[ok]: LPOS no match (0 ms)
[ok]: LPOS MAXLEN (0 ms)
[ok]: LPOS when RANK is greater than matches (1 ms)
[ok]: LPUSH, RPUSH, LLENGTH, LINDEX, LPOP - quicklist (84 ms)
[ok]: LPOP/RPOP with wrong number of arguments (0 ms)
[ok]: RPOP/LPOP with the optional count argument - quicklist (42 ms)
[ok]: LPOS basic usage - listpack (1 ms)
[ok]: LPOS RANK (positive, negative and zero rank) option (0 ms)
[ok]: LPOS COUNT option (0 ms)
[ok]: LPOS COUNT + RANK option (0 ms)
[ok]: LPOS non existing key (0 ms)
[ok]: LPOS no match (0 ms)
[ok]: LPOS MAXLEN (1 ms)
[ok]: LPOS when RANK is greater than matches (0 ms)
[ok]: LPUSH, RPUSH, LLENGTH, LINDEX, LPOP - listpack (1 ms)
[ok]: LPOP/RPOP with wrong number of arguments (0 ms)
[ok]: RPOP/LPOP with the optional count argument - listpack (0 ms)
[ok]: LPOP/RPOP with the count 0 returns an empty array in RESP3 (0 ms)
[ok]: LPOP/RPOP against non existing key in RESP3 (1 ms)
[ok]: LPOP/RPOP with <count> against non existing key in RESP3 (0 ms)
[ok]: LPOP/RPOP with the count 0 returns an empty array in RESP2 (0 ms)
[ok]: LPOP/RPOP against non existing key in RESP2 (0 ms)
[ok]: LPOP/RPOP with <count> against non existing key in RESP2 (0 ms)
[ok]: Variadic RPUSH/LPUSH (0 ms)
[ok]: DEL a list (0 ms)
[ok]: BLPOP: single existing list - quicklist (46 ms)
[ok]: BLPOP: multiple existing lists - quicklist (86 ms)
[ok]: BLPOP: second list has an entry - quicklist (46 ms)
[ok]: DEL against expired key (1101 ms)
[ok]: EXISTS (0 ms)
[ok]: Zero length value in key. SET/GET/EXISTS (1 ms)
[ok]: Commands pipelining (0 ms)
[ok]: Non existing command (0 ms)
[ok]: RENAME basic usage (0 ms)
[ok]: RENAME source key should no longer exist (0 ms)
[ok]: RENAME against already existing key (0 ms)
[ok]: RENAMENX basic usage (1 ms)
[ok]: RENAMENX against already existing key (0 ms)
[ok]: RENAMENX against already existing key (2) (0 ms)
[ok]: RENAME against non existing source key (0 ms)
[ok]: RENAME where source and dest key are the same (existing) (1 ms)
[ok]: RENAMENX where source and dest key are the same (existing) (0 ms)
[ok]: RENAME where source and dest key are the same (non existing) (0 ms)
[ok]: RENAME with volatile key, should move the TTL as well (0 ms)
[ok]: RENAME with volatile key, should not inherit TTL of target key (1 ms)
[ok]: DEL all keys again (DB 0) (0 ms)
[ok]: DEL all keys again (DB 1) (0 ms)
[ok]: COPY basic usage for string (1 ms)
[ok]: COPY for string does not replace an existing key without REPLACE option (0 ms)
[ok]: COPY for string can replace an existing key with REPLACE option (1 ms)
[ok]: COPY for string ensures that copied data is independent of copying data (0 ms)
[ok]: COPY for string does not copy data to no-integer DB (0 ms)
[ok]: COPY can copy key expire metadata as well (0 ms)
[ok]: COPY does not create an expire if it does not exist (1 ms)
[ok]: BLMPOP_LEFT: single existing list - quicklist (43 ms)
[ok]: COPY basic usage for list - quicklist (48 ms)
[ok]: COPY basic usage for list - listpack (1 ms)
[ok]: COPY basic usage for $type set (1 ms)
[ok]: COPY basic usage for $type set (0 ms)
[ok]: COPY basic usage for $type set (13 ms)
[ok]: COPY basic usage for listpack sorted set (1 ms)
[ok]: COPY basic usage for skiplist sorted set (9 ms)
[ok]: COPY basic usage for listpack hash (1 ms)
[ok]: Hash fuzzing #1 - 512 fields (732 ms)
[ok]: COPY basic usage for hashtable hash (8 ms)
[ok]: BLMPOP_LEFT: multiple existing lists - quicklist (90 ms)
[ok]: BLMPOP_LEFT: second list has an entry - quicklist (43 ms)
[ok]: COPY basic usage for stream (98 ms)
[ok]: COPY basic usage for stream-cgroups (3 ms)
[ok]: MOVE basic usage (0 ms)
[ok]: MOVE against key existing in the target DB (0 ms)
[ok]: MOVE against non-integer DB (#1428) (0 ms)
[ok]: MOVE can move key expire metadata as well (1 ms)
[ok]: MOVE does not create an expire if it does not exist (1 ms)
[ok]: SET/GET keys in different DBs (0 ms)
[ok]: RANDOMKEY (6 ms)
[ok]: RANDOMKEY against empty DB (0 ms)
[ok]: RANDOMKEY regression 1 (0 ms)
[ok]: KEYS * two times with long key, Github issue #1208 (1 ms)
[ok]: Regression for pattern matching long nested loops (0 ms)
[ok]: BRPOPLPUSH - quicklist (43 ms)
[ok]: Regression for pattern matching very long nested loops (44 ms)
[ok]: BLMOVE left left - quicklist (43 ms)
[ok]: BLMOVE left right - quicklist (43 ms)
[5/91 done]: unit/keyspace (1 seconds)
Testing unit/other
[ok]: Blocking XREADGROUP for stream key that has clients blocked on stream - reprocessing command (1095 ms)
[ok]: XGROUP DESTROY should unblock XREADGROUP with -NOGROUP (3 ms)
[ok]: RENAME can unblock XREADGROUP with data (1 ms)
[ok]: RENAME can unblock XREADGROUP with -NOGROUP (1 ms)
[ok]: BLMOVE right left - quicklist (43 ms)
[ok]: MASTERAUTH test with binary password (917 ms)
[ok]: BLMOVE right right - quicklist (44 ms)
[ok]: BLPOP: single existing list - listpack (1 ms)
[ok]: BLPOP: multiple existing lists - listpack (2 ms)
[ok]: BLPOP: second list has an entry - listpack (1 ms)
[ok]: BLMPOP_LEFT: single existing list - listpack (2 ms)
[ok]: BLMPOP_LEFT: multiple existing lists - listpack (1 ms)
[ok]: BLMPOP_LEFT: second list has an entry - listpack (2 ms)
[ok]: BRPOPLPUSH - listpack (1 ms)
[ok]: BLMOVE left left - listpack (1 ms)
[ok]: BLMOVE left right - listpack (2 ms)
[ok]: BLMOVE right left - listpack (1 ms)
[ok]: BLMOVE right right - listpack (1 ms)
[ok]: BLPOP, LPUSH + DEL should not awake blocked client (2 ms)
[ok]: BLPOP, LPUSH + DEL + SET should not awake blocked client (0 ms)
[ok]: BLMPOP_LEFT, LPUSH + DEL should not awake blocked client (1 ms)
[ok]: BLMPOP_LEFT, LPUSH + DEL + SET should not awake blocked client (1 ms)
[ok]: BLPOP with same key multiple times should work (issue #801) (1 ms)
[ok]: MULTI/EXEC is isolated from the point of view of BLPOP (2 ms)
[ok]: BLPOP with variadic LPUSH (1 ms)
[ok]: MULTI/EXEC is isolated from the point of view of BLMPOP_LEFT (1 ms)
[ok]: BLMPOP_LEFT with variadic LPUSH (1 ms)
[ok]: BRPOPLPUSH with zero timeout should block indefinitely (1 ms)
[ok]: BLMOVE left left with zero timeout should block indefinitely (1 ms)
[ok]: BLMOVE left right with zero timeout should block indefinitely (1 ms)
[ok]: BLMOVE right left with zero timeout should block indefinitely (1 ms)
[ok]: BLMOVE right right with zero timeout should block indefinitely (1 ms)
[ok]: Coverage: HELP commands (2 ms)
[ok]: Coverage: MEMORY MALLOC-STATS (1 ms)
[ok]: BLMOVE (left, left) with a client BLPOPing the target list (2 ms)
[ok]: Coverage: MEMORY PURGE (0 ms)
[ok]: BLMOVE (left, right) with a client BLPOPing the target list (1 ms)
[ok]: BLMOVE (right, left) with a client BLPOPing the target list (2 ms)
[ok]: BLMOVE (right, right) with a client BLPOPing the target list (1 ms)
[ok]: SAVE - make sure there are all the types as values (5 ms)
[ok]: BRPOPLPUSH with wrong source type (1 ms)
[ok]: BRPOPLPUSH with wrong destination type (2 ms)
[ok]: BRPOPLPUSH maintains order of elements after failure (1 ms)
[ok]: BRPOPLPUSH with multiple blocked clients (2 ms)
[ok]: BLMPOP with multiple blocked clients (3 ms)
[ok]: Linked LMOVEs (1 ms)
[ok]: Circular BRPOPLPUSH (2 ms)
[ok]: Self-referential BRPOPLPUSH (1 ms)
[ok]: BRPOPLPUSH inside a transaction (1 ms)
[ok]: PUSH resulting from BRPOPLPUSH affect WATCH (2 ms)
[ok]: BRPOPLPUSH does not affect WATCH while still blocked (1 ms)
[6/91 done]: unit/auth (1 seconds)
Testing unit/multi
[ok]: MULTI / EXEC basics (1 ms)
[ok]: DISCARD (0 ms)
[ok]: Nested MULTI are not allowed (0 ms)
[ok]: MULTI where commands alter argc/argv (0 ms)
[ok]: WATCH inside MULTI is not allowed (0 ms)
[ok]: EXEC fails if there are errors while queueing commands #1 (0 ms)
[ok]: EXEC fails if there are errors while queueing commands #2 (2 ms)
[ok]: If EXEC aborts, the client MULTI state is cleared (1 ms)
[ok]: EXEC works on WATCHed key not modified (0 ms)
[ok]: EXEC fail on WATCHed key modified (1 key of 1 watched) (1 ms)
[ok]: EXEC fail on WATCHed key modified (1 key of 5 watched) (0 ms)
[ok]: EXEC fail on WATCHed key modified by SORT with STORE even if the result is empty (1 ms)
[ok]: EXEC fail on lazy expired WATCHed key (103 ms)
[ok]: WATCH stale keys should not fail EXEC (3 ms)
[ok]: Delete WATCHed stale keys should not fail EXEC (3 ms)
[ok]: FLUSHDB while watching stale keys should not fail EXEC (3 ms)
[ok]: XADD mass insertion and XLEN (1435 ms)
[ok]: After successful EXEC key is no longer watched (1 ms)
[ok]: XADD with ID 0-0 (0 ms)
[ok]: XADD with LIMIT delete entries no more than limit (1 ms)
[ok]: After failed EXEC key is no longer watched (1 ms)
[ok]: XRANGE COUNT works as expected (0 ms)
[ok]: It is possible to UNWATCH (1 ms)
[ok]: UNWATCH when there is nothing watched works as expected (0 ms)
[ok]: XREVRANGE COUNT works as expected (1 ms)
[ok]: FLUSHALL is able to touch the watched keys (0 ms)
[ok]: FLUSHALL does not touch non affected keys (1 ms)
[ok]: FLUSHDB is able to touch the watched keys (0 ms)
[ok]: FLUSHDB does not touch non affected keys (0 ms)
[ok]: SWAPDB is able to touch the watched keys that exist (0 ms)
[ok]: SWAPDB is able to touch the watched keys that do not exist (0 ms)
[ok]: SWAPDB does not touch watched stale keys (3 ms)
[ok]: SWAPDB does not touch non-existing key replaced with stale key (3 ms)
[ok]: SWAPDB does not touch stale key replaced with another stale key (3 ms)
[ok]: WATCH is able to remember the DB a key belongs to (0 ms)
[ok]: WATCH will consider touched keys target of EXPIRE (0 ms)
[ok]: FUZZ stresser with data model binary (361 ms)
[ok]: stats: instantaneous metrics (1602 ms)
[ok]: Hash fuzzing #2 - 512 fields (710 ms)
[ok]: stats: debug metrics (112 ms)
[ok]: XCLAIM can claim PEL items from another consumer (604 ms)
[ok]: XRANGE can be used to iterate the whole stream (200 ms)
[ok]: Very big payload random access (2099 ms)
[7/91 done]: unit/info (2 seconds)
Testing unit/quit
[ok]: FUZZ stresser with data model alpha (369 ms)
[ok]: ZDIFF fuzzing - listpack (2213 ms)
[ok]: ZPOPMIN with the count 0 returns an empty array (0 ms)
[ok]: ZPOPMIN with negative count (1 ms)
[ok]: ZPOPMAX with the count 0 returns an empty array (0 ms)
[ok]: ZPOPMAX with negative count (1 ms)
[ok]: Basic ZPOPMIN/ZPOPMAX with a single key - listpack (1 ms)
[ok]: ZPOPMIN/ZPOPMAX with count - listpack (0 ms)
[ok]: Basic ZMPOP_MIN/ZMPOP_MAX with a single key - listpack (2 ms)
[ok]: ZMPOP_MIN/ZMPOP_MAX with count - listpack (1 ms)
[ok]: BZPOPMIN/BZPOPMAX with a single existing sorted set - listpack (2 ms)
[ok]: BZPOPMIN/BZPOPMAX with multiple existing sorted sets - listpack (2 ms)
[ok]: BZPOPMIN/BZPOPMAX second sorted set has members - listpack (1 ms)
[ok]: BZMPOP_MIN/BZMPOP_MAX with a single existing sorted set - listpack (1 ms)
[ok]: BZMPOP_MIN/BZMPOP_MAX with multiple existing sorted sets - listpack (2 ms)
[ok]: BZMPOP_MIN/BZMPOP_MAX second sorted set has members - listpack (1 ms)
[ok]: Basic ZPOPMIN/ZPOPMAX - listpack RESP3 (0 ms)
[ok]: ZPOPMIN/ZPOPMAX with count - listpack RESP3 (0 ms)
[ok]: Basic ZMPOP_MIN/ZMPOP_MAX - listpack RESP3 (0 ms)
[ok]: ZMPOP_MIN/ZMPOP_MAX with count - listpack RESP3 (1 ms)
[ok]: BZPOPMIN/BZPOPMAX - listpack RESP3 (1 ms)
[ok]: BZMPOP_MIN/BZMPOP_MAX - listpack RESP3 (2 ms)
[ok]: Check encoding - skiplist (0 ms)
[ok]: ZSET basic ZADD and score update - skiplist (1 ms)
[ok]: ZSET element can't be set to NaN with ZADD - skiplist (0 ms)
[ok]: ZSET element can't be set to NaN with ZINCRBY - skiplist (0 ms)
[ok]: ZADD with options syntax error with incomplete pair - skiplist (0 ms)
[ok]: ZADD XX option without key - skiplist (0 ms)
[ok]: ZADD XX existing key - skiplist (1 ms)
[ok]: ZADD XX returns the number of elements actually added - skiplist (0 ms)
[ok]: ZADD XX updates existing elements score - skiplist (1 ms)
[ok]: ZADD GT updates existing elements when new scores are greater - skiplist (1 ms)
[ok]: ZADD LT updates existing elements when new scores are lower - skiplist (0 ms)
[ok]: ZADD GT XX updates existing elements when new scores are greater and skips new elements - skiplist (1 ms)
[ok]: ZADD LT XX updates existing elements when new scores are lower and skips new elements - skiplist (1 ms)
[ok]: ZADD XX and NX are not compatible - skiplist (0 ms)
[ok]: ZADD NX with non existing key - skiplist (0 ms)
[ok]: ZADD NX only add new elements without updating old ones - skiplist (1 ms)
[ok]: ZADD GT and NX are not compatible - skiplist (0 ms)
[ok]: ZADD LT and NX are not compatible - skiplist (0 ms)
[ok]: ZADD LT and GT are not compatible - skiplist (1 ms)
[ok]: ZADD INCR LT/GT replies with nill if score not updated - skiplist (0 ms)
[ok]: ZADD INCR LT/GT with inf - skiplist (1 ms)
[ok]: ZADD INCR works like ZINCRBY - skiplist (1 ms)
[ok]: ZADD INCR works with a single score-elemenet pair - skiplist (0 ms)
[ok]: ZADD CH option changes return value to all changed elements - skiplist (0 ms)
[ok]: ZINCRBY calls leading to NaN result in error - skiplist (0 ms)
[ok]: ZADD - Variadic version base case - skiplist (1 ms)
[ok]: ZADD - Return value is the number of actually added items - skiplist (0 ms)
[ok]: ZADD - Variadic version does not add nothing on single parsing err - skiplist (0 ms)
[ok]: ZADD - Variadic version will raise error on missing arg - skiplist (1 ms)
[ok]: ZINCRBY does not work variadic even if shares ZADD implementation - skiplist (0 ms)
[ok]: ZCARD basics - skiplist (0 ms)
[ok]: ZREM removes key after last element is removed - skiplist (1 ms)
[ok]: ZREM variadic version - skiplist (1 ms)
[ok]: ZREM variadic version -- remove elements after key deletion - skiplist (0 ms)
[ok]: ZRANGE basics - skiplist (2 ms)
[ok]: ZREVRANGE basics - skiplist (1 ms)
[ok]: ZRANK/ZREVRANK basics - skiplist (2 ms)
[ok]: ZRANK - after deletion - skiplist (1 ms)
[ok]: ZINCRBY - can create a new sorted set - skiplist (0 ms)
[ok]: ZINCRBY - increment and decrement - skiplist (1 ms)
[ok]: ZINCRBY return value - skiplist (1 ms)
[ok]: ZRANGEBYSCORE/ZREVRANGEBYSCORE/ZCOUNT basics - skiplist (2 ms)
[ok]: ZRANGEBYSCORE with WITHSCORES - skiplist (1 ms)
[ok]: ZRANGEBYSCORE with LIMIT - skiplist (1 ms)
[ok]: ZRANGEBYSCORE with LIMIT and WITHSCORES - skiplist (1 ms)
[ok]: ZRANGEBYSCORE with non-value min or max - skiplist (0 ms)
[ok]: ZRANGEBYLEX/ZREVRANGEBYLEX/ZLEXCOUNT basics - skiplist (3 ms)
[ok]: ZLEXCOUNT advanced - skiplist (2 ms)
[ok]: ZRANGEBYSLEX with LIMIT - skiplist (1 ms)
[ok]: ZRANGEBYLEX with invalid lex range specifiers - skiplist (0 ms)
[ok]: ZREMRANGEBYSCORE basics - skiplist (5 ms)
[ok]: ZREMRANGEBYSCORE with non-value min or max - skiplist (0 ms)
[ok]: QUIT returns OK (0 ms)
[ok]: ZREMRANGEBYRANK basics - skiplist (4 ms)
[ok]: Pipelined commands after QUIT must not be executed (1 ms)
[ok]: Pipelined commands after QUIT that exceed read buffer size (0 ms)
[ok]: ZREMRANGEBYLEX basics - skiplist (12 ms)
[ok]: ZUNIONSTORE against non-existing key doesn't set destination - skiplist (0 ms)
[ok]: ZUNION/ZINTER/ZINTERCARD/ZDIFF against non-existing key - skiplist (0 ms)
[ok]: ZUNIONSTORE with empty set - skiplist (1 ms)
[ok]: ZUNION/ZINTER/ZINTERCARD/ZDIFF with empty set - skiplist (1 ms)
[ok]: ZUNIONSTORE basics - skiplist (1 ms)
[ok]: ZUNION/ZINTER/ZINTERCARD/ZDIFF with integer members - skiplist (1 ms)
[ok]: ZUNIONSTORE with weights - skiplist (0 ms)
[ok]: ZUNION with weights - skiplist (0 ms)
[ok]: ZUNIONSTORE with a regular set and weights - skiplist (0 ms)
[ok]: ZUNIONSTORE with AGGREGATE MIN - skiplist (0 ms)
[ok]: ZUNION/ZINTER with AGGREGATE MIN - skiplist (0 ms)
[ok]: ZUNIONSTORE with AGGREGATE MAX - skiplist (1 ms)
[ok]: ZUNION/ZINTER with AGGREGATE MAX - skiplist (0 ms)
[ok]: ZINTERSTORE basics - skiplist (0 ms)
[ok]: ZINTER basics - skiplist (0 ms)
[ok]: ZINTERCARD with illegal arguments (0 ms)
[ok]: ZINTERCARD basics - skiplist (1 ms)
[ok]: ZINTER RESP3 - skiplist (0 ms)
[ok]: ZINTERSTORE with weights - skiplist (1 ms)
[ok]: ZINTER with weights - skiplist (0 ms)
[ok]: ZINTERSTORE with a regular set and weights - skiplist (0 ms)
[ok]: ZINTERSTORE with AGGREGATE MIN - skiplist (0 ms)
[ok]: ZINTERSTORE with AGGREGATE MAX - skiplist (0 ms)
[ok]: ZUNIONSTORE with +inf/-inf scores - skiplist (2 ms)
[ok]: ZUNIONSTORE with NaN weights - skiplist (0 ms)
[ok]: ZINTERSTORE with +inf/-inf scores - skiplist (2 ms)
[ok]: ZINTERSTORE with NaN weights - skiplist (0 ms)
[ok]: ZDIFFSTORE basics - skiplist (0 ms)
[ok]: ZDIFF basics - skiplist (0 ms)
[ok]: ZDIFFSTORE with a regular set - skiplist (1 ms)
[ok]: ZDIFF subtracting set from itself - skiplist (0 ms)
[ok]: ZDIFF algorithm 1 - skiplist (1 ms)
[ok]: ZDIFF algorithm 2 - skiplist (1 ms)
[ok]: XCLAIM without JUSTID increments delivery count (401 ms)
[8/91 done]: unit/quit (0 seconds)
Testing unit/aofrw
[ok]: BRPOPLPUSH timeout (1020 ms)
[ok]: SWAPDB awakes blocked client (1 ms)
[ok]: FUZZ stresser with data model compr (346 ms)
[ok]: XCLAIM same consumer (201 ms)
[ok]: EXPIRE - After 2.1 seconds the key should no longer be here (2101 ms)
[ok]: EXPIRE - write on expire should work (1 ms)
[ok]: EXPIREAT - Check for EXPIRE alike behavior (0 ms)
[ok]: SETEX - Set + Expire combo operation. Check for TTL (1 ms)
[ok]: SETEX - Check value (0 ms)
[ok]: SETEX - Overwrite old key (0 ms)
[ok]: Big Quicklist: SORT BY key (546 ms)
[ok]: FLUSHALL should not reset the dirty counter if we disable save (1 ms)
[ok]: Big Quicklist: SORT BY key with limit (6 ms)
[ok]: FLUSHALL should reset the dirty counter to 0 if we enable save (5 ms)
[ok]: Stress test the hash ziplist -> hashtable encoding conversion (834 ms)
[ok]: Test HINCRBYFLOAT for correct float representation (issue #2846) (1 ms)
[ok]: SWAPDB wants to wake blocked client, but the key already expired (182 ms)
[ok]: SDIFF fuzzing (2493 ms)
[ok]: SDIFF against non-set should throw error (1 ms)
[ok]: SDIFF should handle non existing key as empty (1 ms)
[ok]: Hash ziplist of various encodings (90 ms)
[ok]: SDIFFSTORE against non-set should throw error (2 ms)
[ok]: SDIFFSTORE should handle non existing key as empty (2 ms)
[ok]: Hash ziplist of various encodings - sanitize dump (3 ms)
[ok]: HINCRBYFLOAT does not allow NaN or Infinity (1 ms)
[ok]: SINTER against non-set should throw error (1 ms)
[ok]: SINTER should handle non existing key as empty (1 ms)
[ok]: SINTER with same integer elements but different encoding (1 ms)
[ok]: SINTERSTORE against non-set should throw error (2 ms)
[ok]: SINTERSTORE against non existing keys should delete dstkey (1 ms)
[ok]: SUNION against non-set should throw error (1 ms)
[ok]: SUNION should handle non existing key as empty (1 ms)
[ok]: SUNIONSTORE against non-set should throw error (2 ms)
[ok]: SUNIONSTORE should handle non existing key as empty (2 ms)
[ok]: SUNIONSTORE against non existing keys should delete dstkey (1 ms)
[ok]: SPOP basics - listpack (1 ms)
[ok]: SPOP with <count>=1 - listpack (1 ms)
[ok]: SRANDMEMBER - listpack (5 ms)
[ok]: SPOP basics - intset (0 ms)
[ok]: SPOP with <count>=1 - intset (1 ms)
[ok]: SRANDMEMBER - intset (3 ms)
[ok]: SPOP integer from listpack set (1 ms)
[ok]: SPOP with <count> - listpack (2 ms)
[ok]: SPOP with <count> - intset (1 ms)
[ok]: SPOP with <count> - hashtable (1 ms)
[ok]: SPOP using integers, testing Knuth's and Floyd's algorithm (2 ms)
[ok]: SPOP using integers with Knuth's algorithm (0 ms)
[ok]: SPOP new implementation: code path #1 intset (1 ms)
[ok]: SPOP new implementation: code path #2 intset (1 ms)
[ok]: SPOP new implementation: code path #3 intset (1 ms)
[ok]: SPOP new implementation: code path #1 listpack (1 ms)
[ok]: SPOP new implementation: code path #2 listpack (1 ms)
[ok]: SPOP new implementation: code path #3 listpack (1 ms)
[ok]: SPOP new implementation: code path #1 propagate as DEL or UNLINK (31 ms)
[ok]: SRANDMEMBER count of 0 is handled correctly (0 ms)
[ok]: SRANDMEMBER with <count> against non existing key (1 ms)
[ok]: SRANDMEMBER count overflow (0 ms)
[ok]: SRANDMEMBER count of 0 is handled correctly - emptyarray (0 ms)
[ok]: SRANDMEMBER with <count> against non existing key - emptyarray (0 ms)
[ok]: SRANDMEMBER with <count> - listpack (11 ms)
[9/91 done]: unit/type/hash (3 seconds)
Testing unit/acl
[ok]: SRANDMEMBER with <count> - intset (12 ms)
[ok]: BGSAVE (108 ms)
[ok]: SRANDMEMBER with <count> - hashtable (11 ms)
[ok]: SELECT an out of range DB (0 ms)
[ok]: SRANDMEMBER histogram distribution - listpack (36 ms)
[ok]: WATCH will consider touched expired keys (1106 ms)
[ok]: DISCARD should clear the WATCH dirty flag on the client (1 ms)
[ok]: DISCARD should UNWATCH all the keys (0 ms)
[ok]: SRANDMEMBER histogram distribution - intset (51 ms)
[ok]: Connections start with the default user (0 ms)
[ok]: It is possible to create new users (0 ms)
[ok]: Coverage: ACL USERS (0 ms)
[ok]: Usernames can not contain spaces or null characters (1 ms)
[ok]: New users start disabled (0 ms)
[ok]: Enabling the user allows the login (0 ms)
[ok]: Only the set of correct passwords work (1 ms)
[ok]: It is possible to remove passwords from the set of valid ones (0 ms)
[ok]: Test password hashes can be added (0 ms)
[ok]: Test password hashes validate input (0 ms)
[ok]: ACL GETUSER returns the password hash instead of the actual password (1 ms)
[ok]: Test hashed passwords removal (0 ms)
[ok]: By default users are not able to access any command (0 ms)
[ok]: By default users are not able to access any key (1 ms)
[ok]: It's possible to allow the access of a subset of keys (0 ms)
[ok]: By default, only default user is able to publish to any channel (1 ms)
[ok]: By default, only default user is not able to publish to any shard channel (0 ms)
[ok]: By default, only default user is able to subscribe to any channel (1 ms)
[ok]: By default, only default user is able to subscribe to any shard channel (1 ms)
[ok]: By default, only default user is able to subscribe to any pattern (1 ms)
[ok]: It's possible to allow publishing to a subset of channels (1 ms)
[ok]: It's possible to allow publishing to a subset of shard channels (0 ms)
[ok]: Validate subset of channels is prefixed with resetchannels flag (1 ms)
[ok]: In transaction queue publish/subscribe/psubscribe to unauthorized channel will fail (1 ms)
[ok]: It's possible to allow subscribing to a subset of channels (1 ms)
[ok]: It's possible to allow subscribing to a subset of shard channels (0 ms)
[ok]: It's possible to allow subscribing to a subset of channel patterns (0 ms)
[ok]: Subscribers are killed when revoked of channel permission (1 ms)
[ok]: Subscribers are killed when revoked of channel permission (1 ms)
[ok]: MULTI / EXEC is not propagated (single write command) (54 ms)
[ok]: Subscribers are killed when revoked of pattern permission (1 ms)
[ok]: Subscribers are killed when revoked of allchannels permission (1 ms)
[ok]: Subscribers are pardoned if literal permissions are retained and/or gaining allchannels (1 ms)
[ok]: MULTI + LPUSH + EXPIRE + DEBUG SLEEP on blocked client, key already expired (303 ms)
[ok]: blocked command gets rejected when reprocessed after permission change (2 ms)
[ok]: Users can be configured to authenticate with any password (0 ms)
[ok]: ACLs can exclude single commands (0 ms)
[ok]: ACLs can include or exclude whole classes of commands (0 ms)
[ok]: ACLs can include single subcommands (1 ms)
[ok]: ACLs can exclude single subcommands, case 1 (1 ms)
[ok]: ACLs can exclude single subcommands, case 2 (1 ms)
[ok]: ACLs cannot include a subcommand with a specific arg (0 ms)
[ok]: ACLs cannot exclude or include a container commands with a specific arg (0 ms)
[ok]: ACLs cannot exclude or include a container command with two args (1 ms)
[ok]: ACLs including of a type includes also subcommands (0 ms)
[ok]: ACLs can block SELECT of all but a specific DB (1 ms)
[ok]: ACLs can block all DEBUG subcommands except one (2 ms)
[ok]: ACLs set can include subcommands, if already full command exists (1 ms)
[ok]: ACLs set can exclude subcommands, if already full command exists (3 ms)
[ok]: ACL SETUSER RESET reverting to default newly created user (1 ms)
[ok]: ACL GETUSER is able to translate back command permissions (1 ms)
[ok]: SRANDMEMBER histogram distribution - hashtable (51 ms)
[ok]: ACL GETUSER provides reasonable results (12 ms)
[ok]: ACL GETUSER provides correct results (4 ms)
[ok]: ACL CAT with illegal arguments (0 ms)
[ok]: ACL CAT without category - list all categories (1 ms)
[ok]: ACL CAT category - list all commands/subcommands that belong to category (1 ms)
[ok]: ACL requires explicit permission for scripting for EVAL_RO, EVALSHA_RO and FCALL_RO (0 ms)
[ok]: ACL #5998 regression: memory leaks adding / removing subcommands (0 ms)
[ok]: ACL LOG aggregates similar errors together and assigns unique entry-id to new errors (4 ms)
[ok]: ACL LOG shows failed command executions at toplevel (0 ms)
[ok]: ACL LOG shows failed subcommand executions at toplevel (1 ms)
[ok]: ACL LOG is able to test similar events (1 ms)
[ok]: ACL LOG is able to log keys access violations and key name (1 ms)
[ok]: ACL LOG is able to log channel access violations and channel name (1 ms)
[ok]: ACL LOG RESET is able to flush the entries in the log (0 ms)
[ok]: ACL LOG can distinguish the transaction context (1) (1 ms)
[ok]: ACL LOG can distinguish the transaction context (2) (1 ms)
[ok]: ACL can log errors in the context of Lua scripting (0 ms)
[ok]: ACL LOG can accept a numerical argument to show less entries (2 ms)
[ok]: ACL LOG can log failed auth attempts (1 ms)
[ok]: ACL LOG entries are limited to a maximum amount (2 ms)
[ok]: When default user is off, new connections are not authenticated (1 ms)
[ok]: When default user has no command permission, hello command still works for other users (1 ms)
[ok]: When an authentication chain is used in the HELLO cmd, the last auth cmd has precedence (1 ms)
[ok]: When a setname chain is used in the HELLO cmd, the last setname cmd has precedence (0 ms)
[ok]: When authentication fails in the HELLO cmd, the client setname should not be applied (0 ms)
[ok]: ACL HELP should not have unexpected options (0 ms)
[ok]: Delete a user that the client doesn't use (0 ms)
[ok]: Delete a user that the client is using (0 ms)
[ok]: ACL GENPASS command failed test (1 ms)
[ok]: Default user can not be removed (0 ms)
[ok]: ACL load non-existing configured ACL file (0 ms)
[ok]: ACL-Metrics user AUTH failure (5 ms)
[ok]: ACL-Metrics invalid command accesses (2 ms)
[ok]: ACL-Metrics invalid key accesses (3 ms)
[ok]: ACL-Metrics invalid channels accesses (3 ms)
[ok]: MULTI / EXEC is propagated correctly (multiple commands) (101 ms)
[ok]: XAUTOCLAIM can claim PEL items from another consumer (604 ms)
[ok]: MULTI / EXEC is propagated correctly (multiple commands with SELECT) (102 ms)
[ok]: Check consistency of different data types after a reload (353 ms)
[ok]: SET 10000 numeric keys and access all them in reverse order (1175 ms)
[ok]: DBSIZE should be 10000 now (0 ms)
[ok]: SETNX target key missing (0 ms)
[ok]: SETNX target key exists (0 ms)
[ok]: SETNX against not-expired volatile key (1 ms)
[ok]: MULTI / EXEC is propagated correctly (empty transaction) (98 ms)
[ok]: default: load from include file, can access any channels (1 ms)
[ok]: default: with config acl-pubsub-default allchannels after reset, can access any channels (0 ms)
[ok]: default: with config acl-pubsub-default resetchannels after reset, can not access any channels (1 ms)
[ok]: Alice: can execute all command (0 ms)
[ok]: Bob: just execute @set and acl command (1 ms)
[ok]: ACL load and save (3 ms)
[ok]: ACL load and save with restricted channels (3 ms)
[ok]: Big Quicklist: SORT BY hash field (701 ms)
[ok]: XAUTOCLAIM as an iterator (203 ms)
[ok]: Intset: SORT BY key (0 ms)
[ok]: Intset: SORT BY key with limit (1 ms)
[ok]: Intset: SORT BY hash field (0 ms)
[ok]: XAUTOCLAIM COUNT must be > 0 (4 ms)
[ok]: XCLAIM with XDEL (0 ms)
[ok]: XCLAIM with trimming (1 ms)
[ok]: XAUTOCLAIM with XDEL (0 ms)
[ok]: XAUTOCLAIM with XDEL and count (0 ms)
[ok]: XAUTOCLAIM with out of range count (0 ms)
[ok]: XCLAIM with trimming (1 ms)
[ok]: Same dataset digest if saving/reloading as AOF? (159 ms)
[ok]: XINFO FULL output (6 ms)
[ok]: MULTI / EXEC is propagated correctly (read-only commands) (101 ms)
[ok]: MULTI / EXEC is propagated correctly (write command, no effect) (101 ms)
[ok]: EXPIRES after a reload (snapshot + append only file rewrite) (109 ms)
[ok]: Default user has access to all channels irrespective of flag (0 ms)
[ok]: Update acl-pubsub-default, existing users shouldn't get affected (1 ms)
[ok]: Single channel is valid (1 ms)
[ok]: Single channel is not valid with allchannels (0 ms)
[ok]: Hash table: SORT BY key (6 ms)
[ok]: Hash table: SORT BY key with limit (2 ms)
[ok]: Hash table: SORT BY hash field (6 ms)
[ok]: Consumer seen-time and active-time (204 ms)
[ok]: XGROUP CREATECONSUMER: create consumer if does not exist (2 ms)
[ok]: XGROUP CREATECONSUMER: group must exist (0 ms)
[ok]: MULTI / EXEC with REPLICAOF (104 ms)
[ok]: DISCARD should not fail during OOM (1 ms)
[ok]: SETEX - Wait for the key to expire (1101 ms)
[ok]: SETEX - Wrong time parameter (1 ms)
[ok]: PERSIST can undo an EXPIRE (1 ms)
[ok]: PERSIST returns 0 against non existing or non volatile keys (0 ms)
[ok]: XREADGROUP with NOACK creates consumer (11 ms)
[ok]: Only default user has access to all channels irrespective of flag (1 ms)
[ok]: Consumer without PEL is present in AOF after AOFRW (114 ms)
[ok]: Consumer group read counter and lag in empty streams (2 ms)
[ok]: Consumer group read counter and lag sanity (6 ms)
[ok]: Consumer group lag with XDELs (6 ms)
[ok]: Consumer group lag with XTRIM (6 ms)
[ok]: Consumer group lag with XADD trimming (6 ms)
[ok]: Loading from legacy (Redis <= v6.2.x, rdb_ver < 10) persistence (1 ms)
[ok]: Loading from legacy (Redis <= v7.0.x, rdb_ver < 11) persistence (1 ms)
[ok]: default: load from config file, without channel permission default user can't access any channels (0 ms)
[ok]: BLPOP unblock but the key is expired and then block again - reprocessing command (1004 ms)
[ok]: BLPOP when new key is moved into place (1 ms)
[ok]: BLPOP when result key is created by SORT..STORE (1 ms)
[ok]: BLMPOP_LEFT when new key is moved into place (0 ms)
[ok]: BLMPOP_LEFT when result key is created by SORT..STORE (1 ms)
[ok]: BLPOP: timeout value out of range (0 ms)
[ok]: BLPOP: with single empty list argument (1 ms)
[ok]: BLPOP: with negative timeout (1 ms)
[ok]: BLPOP: with non-integer timeout (0 ms)
[ok]: BLPOP: with zero timeout should block indefinitely (1 ms)
[ok]: MULTI and script timeout (408 ms)
[ok]: BLPOP: with 0.001 timeout should not block indefinitely (21 ms)
[ok]: BLPOP: second argument is not a list (1 ms)
[ok]: Consumer group last ID propagation to slave (NOACK=0) (104 ms)
[ok]: default: load from config file with all channels permissions (0 ms)
[ok]: Consumer group last ID propagation to slave (NOACK=1) (105 ms)
[ok]: XREVRANGE returns the reverse of XRANGE (2324 ms)
[ok]: XRANGE exclusive ranges (3 ms)
[ok]: XREAD with non empty stream (1 ms)
[ok]: Non blocking XREAD with empty streams (0 ms)
[ok]: Test loading an ACL file with duplicate users (2 ms)
[ok]: Test loading an ACL file with duplicate default user (3 ms)
[ok]: EXEC and script timeout (408 ms)
[ok]: Test loading duplicate users in config on startup (12 ms)
[ok]: LTRIM stress testing - quicklist (4495 ms)
[ok]: Replication tests of XCLAIM with deleted entries (autclaim=0) (105 ms)
[ok]: Replication tests of XCLAIM with deleted entries (autclaim=1) (3 ms)
[ok]: EXPIRE precision is now the millisecond (1103 ms)
[ok]: MULTI-EXEC body and script timeout (404 ms)
[ok]: ACL from config file and config rewrite (203 ms)
[10/91 done]: unit/acl (2 seconds)
Testing unit/acl-v2
[ok]: PSETEX can set sub-second expires (102 ms)
[ok]: Empty stream with no lastid can be rewrite into AOF correctly (108 ms)
[ok]: Test basic multiple selectors (1 ms)
[ok]: Test ACL selectors by default have no permissions (0 ms)
[ok]: Test deleting selectors (1 ms)
[ok]: Test selector syntax error reports the error in the selector context (1 ms)
[ok]: Test flexible selector definition (2 ms)
[ok]: Test separate read permission (1 ms)
[ok]: Test separate write permission (1 ms)
[ok]: Test separate read and write permissions (0 ms)
[ok]: Validate read and write permissions format - empty permission (0 ms)
[ok]: Validate read and write permissions format - empty selector (0 ms)
[ok]: Validate read and write permissions format - empty pattern (0 ms)
[ok]: Validate read and write permissions format - no pattern (1 ms)
[ok]: Test separate read and write permissions on different selectors are not additive (1 ms)
[ok]: Test SET with separate read permission (1 ms)
[ok]: PEXPIRE can set sub-second expires (102 ms)
[ok]: Test SET with separate write permission (1 ms)
[ok]: Test SET with read and write permissions (1 ms)
[ok]: Test BITFIELD with separate read permission (1 ms)
[ok]: Test BITFIELD with separate write permission (1 ms)
[ok]: Test BITFIELD with read and write permissions (1 ms)
[ok]: Test ACL log correctly identifies the relevant item when selectors are used (1 ms)
[ok]: Test ACL GETUSER response information (0 ms)
[ok]: Test ACL list idempotency (1 ms)
[ok]: Test R+W is the same as all permissions (1 ms)
[ok]: Test basic dry run functionality (1 ms)
[ok]: Test various commands for command permissions (0 ms)
[ok]: Test various odd commands for key permissions (4 ms)
[ok]: Existence test commands are not marked as access (1 ms)
[ok]: Intersection cardinaltiy commands are access commands (1 ms)
[ok]: Test general keyspace commands require some type of permission to execute (1 ms)
[ok]: Cardinality commands require some type of permission to execute (2 ms)
[ok]: Test sharded channel permissions (1 ms)
[ok]: Test sort with ACL permissions (2 ms)
[ok]: Test DRYRUN with wrong number of arguments (0 ms)
[11/91 done]: unit/type/stream-cgroups (5 seconds)
Testing unit/latency-monitor
[ok]: BLPOP: timeout (1075 ms)
[ok]: BLPOP: arguments are empty (2 ms)
[ok]: BRPOP: with single empty list argument (1 ms)
[ok]: BRPOP: with negative timeout (0 ms)
[ok]: BRPOP: with non-integer timeout (1 ms)
[ok]: BRPOP: with zero timeout should block indefinitely (1 ms)
[ok]: BRPOP: with 0.001 timeout should not block indefinitely (21 ms)
[ok]: BRPOP: second argument is not a list (1 ms)
[ok]: PEXPIREAT can set sub-second expires (203 ms)
[ok]: TTL returns time to live in seconds (0 ms)
[ok]: PTTL returns time to live in milliseconds (0 ms)
[ok]: TTL / PTTL / EXPIRETIME / PEXPIRETIME return -1 if key has no expire (0 ms)
[ok]: TTL / PTTL / EXPIRETIME / PEXPIRETIME return -2 if key does not exit (1 ms)
[ok]: EXPIRETIME returns absolute expiration time in seconds (0 ms)
[ok]: PEXPIRETIME returns absolute expiration time in milliseconds (0 ms)
[ok]: Test behavior of loading ACLs (1 ms)
[ok]: LATENCY HISTOGRAM with empty histogram (0 ms)
[ok]: LATENCY HISTOGRAM all commands (1 ms)
[ok]: LATENCY HISTOGRAM sub commands (1 ms)
[ok]: LATENCY HISTOGRAM with a subset of commands (1 ms)
[ok]: LATENCY HISTOGRAM command (1 ms)
[ok]: LATENCY HISTOGRAM with wrong command name skips the invalid one (1 ms)
[ok]: just EXEC and script timeout (402 ms)
[ok]: exec with write commands and state change (1 ms)
[12/91 done]: unit/acl-v2 (0 seconds)
Testing integration/block-repl
[ok]: XREAD with non empty second stream (1235 ms)
[ok]: Blocking XREAD waiting new data (1 ms)
[ok]: Blocking XREAD waiting old data (1 ms)
[ok]: EXPIRES after AOF reload (without rewrite) (2106 ms)
[ok]: Blocking XREAD will not reply with an empty array (80 ms)
[ok]: ZDIFF fuzzing - skiplist (3391 ms)
[ok]: ZPOPMIN with the count 0 returns an empty array (1 ms)
[ok]: ZPOPMIN with negative count (0 ms)
[ok]: ZPOPMAX with the count 0 returns an empty array (0 ms)
[ok]: ZPOPMAX with negative count (1 ms)
[ok]: Basic ZPOPMIN/ZPOPMAX with a single key - skiplist (1 ms)
[ok]: ZPOPMIN/ZPOPMAX with count - skiplist (1 ms)
[ok]: Basic ZMPOP_MIN/ZMPOP_MAX with a single key - skiplist (1 ms)
[ok]: ZMPOP_MIN/ZMPOP_MAX with count - skiplist (1 ms)
[ok]: BZPOPMIN/BZPOPMAX with a single existing sorted set - skiplist (1 ms)
[ok]: BZPOPMIN/BZPOPMAX with multiple existing sorted sets - skiplist (2 ms)
[ok]: BZPOPMIN/BZPOPMAX second sorted set has members - skiplist (1 ms)
[ok]: BZMPOP_MIN/BZMPOP_MAX with a single existing sorted set - skiplist (1 ms)
[ok]: BZMPOP_MIN/BZMPOP_MAX with multiple existing sorted sets - skiplist (1 ms)
[ok]: BZMPOP_MIN/BZMPOP_MAX second sorted set has members - skiplist (1 ms)
[ok]: Basic ZPOPMIN/ZPOPMAX - skiplist RESP3 (1 ms)
[ok]: ZPOPMIN/ZPOPMAX with count - skiplist RESP3 (1 ms)
[ok]: Basic ZMPOP_MIN/ZMPOP_MAX - skiplist RESP3 (2 ms)
[ok]: ZMPOP_MIN/ZMPOP_MAX with count - skiplist RESP3 (1 ms)
[ok]: BZPOPMIN/BZPOPMAX - skiplist RESP3 (2 ms)
[ok]: BZMPOP_MIN/BZMPOP_MAX - skiplist RESP3 (1 ms)
[ok]: ZPOP/ZMPOP against wrong type (1 ms)
[ok]: ZMPOP with illegal argument (2 ms)
[ok]: ZMPOP propagate as pop with count command to replica (27 ms)
[ok]: ZPOPMIN/ZPOPMAX readraw in RESP3 (1 ms)
[ok]: Blocking XREAD for stream that ran dry (issue #5299) (102 ms)
[ok]: XREAD: XADD + DEL should not awake client (2 ms)
[ok]: XREAD: XADD + DEL + LPUSH should not awake client (1 ms)
[ok]: XREAD with same stream name multiple times should work (1 ms)
[ok]: XREAD + multiple XADD inside transaction (2 ms)
[ok]: XDEL basic test (1 ms)
[ok]: XDEL multiply id test (1 ms)
[ok]: Redis should actively expire keys incrementally (604 ms)
[ok]: SETNX against expired volatile key (2647 ms)
[ok]: GETEX EX option (0 ms)
[ok]: GETEX PX option (1 ms)
[ok]: GETEX EXAT option (0 ms)
[ok]: GETEX PXAT option (0 ms)
[ok]: GETEX PERSIST option (1 ms)
[ok]: GETEX no option (1 ms)
[ok]: GETEX syntax errors (0 ms)
[ok]: BZPOPMIN/BZPOPMAX readraw in RESP3 (198 ms)
[ok]: GETEX and GET expired key or not exist (2 ms)
[ok]: GETEX no arguments (0 ms)
[ok]: GETDEL command (1 ms)
[ok]: ZMPOP readraw in RESP3 (2 ms)
[ok]: GETDEL propagate as DEL command to replica (109 ms)
[ok]: BZMPOP readraw in RESP3 (199 ms)
[ok]: ZPOPMIN/ZPOPMAX readraw in RESP2 (1 ms)
[ok]: GETEX without argument does not propagate to replica (100 ms)
[ok]: MGET (6 ms)
[ok]: MGET against non existing key (1 ms)
[ok]: MGET against non-string key (0 ms)
[ok]: GETSET (set new value) (0 ms)
[ok]: GETSET (replace old value) (0 ms)
[ok]: MSET base case (0 ms)
[ok]: MSET/MSETNX wrong number of args (0 ms)
[ok]: MSET with already existing - same key twice (0 ms)
[ok]: MSETNX with already existent key (0 ms)
[ok]: MSETNX with not existing keys (0 ms)
[ok]: MSETNX with not existing keys - same key twice (0 ms)
[ok]: MSETNX with already existing keys - same key twice (0 ms)
[ok]: STRLEN against non-existing key (0 ms)
[ok]: STRLEN against integer-encoded value (0 ms)
[ok]: STRLEN against plain string (0 ms)
[ok]: SETBIT against non-existing key (1 ms)
[ok]: SETBIT against string-encoded key (0 ms)
[ok]: SETBIT against integer-encoded key (1 ms)
[ok]: SETBIT against key with wrong type (0 ms)
[ok]: SETBIT with out of range bit offset (1 ms)
[ok]: SETBIT with non-bit argument (0 ms)
[ok]: BRPOP: timeout (1076 ms)
[ok]: BRPOP: arguments are empty (1 ms)
[ok]: BLMPOP_LEFT: with single empty list argument (1 ms)
[ok]: BLMPOP_LEFT: with negative timeout (0 ms)
[ok]: BLMPOP_LEFT: with non-integer timeout (1 ms)
[ok]: BLMPOP_LEFT: with zero timeout should block indefinitely (1 ms)
[ok]: BLMPOP_LEFT: with 0.001 timeout should not block indefinitely (22 ms)
[ok]: BLMPOP_LEFT: second argument is not a list (1 ms)
[ok]: PIPELINING stresser (also a regression for the old epoll bug) (631 ms)
[ok]: APPEND basics (0 ms)
[ok]: APPEND basics, integer encoded values (1 ms)
[ok]: BZPOPMIN/BZPOPMAX readraw in RESP2 (199 ms)
[ok]: ZMPOP readraw in RESP2 (1 ms)
[ok]: Big Hash table: SORT BY key (546 ms)
[ok]: APPEND fuzzing (164 ms)
[ok]: Big Hash table: SORT BY key with limit (12 ms)
[ok]: FLUSHDB (38 ms)
[ok]: Perform a final SAVE to leave a clean DB on disk (4 ms)
[ok]: RESET clears client state (0 ms)
[ok]: RESET clears MONITOR state (1 ms)
[ok]: RESET clears and discards MULTI state (1 ms)
[ok]: RESET clears Pub/Sub state (0 ms)
[ok]: RESET clears authenticated state (1 ms)
[ok]: Subcommand syntax error crash (issue #10070) (0 ms)
[ok]: SETBIT fuzzing (345 ms)
[ok]: GETBIT against non-existing key (1 ms)
[ok]: GETBIT against string-encoded key (0 ms)
[ok]: GETBIT against integer-encoded key (1 ms)
[ok]: SETRANGE against non-existing key (1 ms)
[ok]: SETRANGE against string-encoded key (1 ms)
[ok]: SETRANGE against integer-encoded key (1 ms)
[ok]: SETRANGE against key with wrong type (1 ms)
[ok]: SETRANGE with out of range offset (0 ms)
[ok]: GETRANGE against non-existing key (0 ms)
[ok]: GETRANGE against wrong key type (1 ms)
[ok]: GETRANGE against string value (1 ms)
[ok]: GETRANGE against integer-encoded value (1 ms)
[ok]: First server should have role slave after SLAVEOF (1002 ms)
[ok]: BZMPOP readraw in RESP2 (200 ms)
[ok]: ZINTERSTORE regression with two sets, intset+hashtable (1 ms)
[ok]: ZUNIONSTORE regression, should not create NaN in scores (0 ms)
[ok]: ZINTERSTORE #516 regression, mixed sets and ziplist zsets (0 ms)
[ok]: ZUNIONSTORE result is sorted (114 ms)
[ok]: ZUNIONSTORE/ZINTERSTORE/ZDIFFSTORE error if using WITHSCORES  (1 ms)
[ok]: ZMSCORE retrieve (0 ms)
[ok]: ZMSCORE retrieve from empty set (1 ms)
[ok]: ZMSCORE retrieve with missing member (0 ms)
[ok]: ZMSCORE retrieve single member (0 ms)
[ok]: ZMSCORE retrieve requires one or more members (0 ms)
[ok]: ZSET commands don't accept the empty strings as valid score (0 ms)
[ok]: zunionInterDiffGenericCommand at least 1 input key (1 ms)
[ok]: ZSCORE - listpack (26 ms)
[ok]: ZMSCORE - listpack (19 ms)
[ok]: ZSCORE after a DEBUG RELOAD - listpack (26 ms)
[ok]: ZSET sorting stresser - listpack (29 ms)
[ok]: SCAN regression test for issue #4906 (6408 ms)
[ok]: Redis should lazy expire keys (1002 ms)
[13/91 done]: unit/scan (7 seconds)
Testing integration/replication
[ok]: Big Hash table: SORT BY hash field (539 ms)
[ok]: SORT GET # (0 ms)
[ok]: SORT GET <const> (1 ms)
[ok]: SORT_RO GET <const> (0 ms)
[ok]: SORT GET (key and hash) with sanity check (4 ms)
[ok]: SORT BY key STORE (0 ms)
[ok]: SORT BY hash field STORE (0 ms)
[ok]: SORT extracts STORE correctly (0 ms)
[ok]: SORT_RO get keys (0 ms)
[ok]: SORT extracts multiple STORE correctly (0 ms)
[ok]: SORT DESC (1 ms)
[ok]: SORT ALPHA against integer encoded strings (0 ms)
[ok]: SORT sorted set (1 ms)
[ok]: SORT sorted set BY nosort should retain ordering (1 ms)
[ok]: SORT sorted set BY nosort + LIMIT (1 ms)
[ok]: SORT sorted set BY nosort works as expected from scripts (1 ms)
[ok]: SORT sorted set: +inf and -inf handling (0 ms)
[ok]: SORT regression for issue #19, sorting floats (6 ms)
[ok]: SORT with STORE returns zero if result is empty (github issue 224) (0 ms)
[ok]: SORT with STORE does not create empty lists (github issue 224) (1 ms)
[ok]: SORT with STORE removes key if result is empty (github issue 227) (0 ms)
[ok]: SORT with BY <constant> and STORE should still order output (1 ms)
[ok]: SORT will complain with numerical sorting and bad doubles (1) (0 ms)
[ok]: SORT will complain with numerical sorting and bad doubles (2) (0 ms)
[ok]: SORT BY sub-sorts lexicographically if score is the same (1 ms)
[ok]: SORT GET with pattern ending with just -> does not get hash field (0 ms)
[ok]: SORT by nosort retains native order for lists (1 ms)
[ok]: SORT by nosort plus store retains native order for lists (0 ms)
[ok]: SORT by nosort with limit returns based on original list order (0 ms)
[ok]: SORT_RO - Successful case (1 ms)
[ok]: SORT_RO - Cannot run with STORE arg (0 ms)
[ok]: SORT speed, 100 element list BY key, 100 times (17 ms)
[ok]: SORT speed, 100 element list BY hash field, 100 times (19 ms)
[ok]: SORT speed, 100 element list directly, 100 times (13 ms)
[ok]: SORT speed, 100 element list BY <const>, 100 times (13 ms)
[ok]: SETRANGE with huge offset (2 ms)
[ok]: GETRANGE fuzzing (536 ms)
[ok]: Coverage: SUBSTR (0 ms)
[ok]: Extended SET can detect syntax errors (0 ms)
[ok]: Extended SET NX option (0 ms)
[ok]: Extended SET XX option (1 ms)
[ok]: Extended SET GET option (0 ms)
[ok]: Extended SET GET option with no previous value (0 ms)
[ok]: Extended SET GET option with XX (0 ms)
[ok]: Extended SET GET option with XX and no previous value (0 ms)
[ok]: Extended SET GET option with NX (0 ms)
[ok]: Extended SET GET option with NX and previous value (1 ms)
[ok]: Extended SET GET with incorrect type should result in wrong type error (0 ms)
[ok]: Extended SET EX option (1 ms)
[ok]: Extended SET PX option (0 ms)
[ok]: Extended SET EXAT option (0 ms)
[ok]: Extended SET PXAT option (0 ms)
[ok]: Extended SET using multiple options at once (1 ms)
[ok]: GETRANGE with huge ranges, Github issue #1844 (0 ms)
[ok]: LCS basic (1 ms)
[ok]: LCS len (0 ms)
[ok]: LCS indexes (1 ms)
[ok]: LCS indexes with match len (0 ms)
[ok]: LCS indexes with match len and minimum match len (1 ms)
[ok]: SETRANGE with huge offset (0 ms)
[ok]: APPEND modifies the encoding from int to raw (1 ms)
[14/91 done]: unit/sort (7 seconds)
Testing integration/replication-2
[ok]: Don't rehash if redis has child process (441 ms)
[ok]: Slave enters handshake (0 ms)
[ok]: Slave enters wait_bgsave (0 ms)
[ok]: XDEL fuzz test (1348 ms)
[15/91 done]: unit/type/string (7 seconds)
Testing integration/replication-3
[ok]: Process title set as expected (1 ms)
[ok]: BLMPOP_LEFT: timeout (1074 ms)
[ok]: BLMPOP_LEFT: arguments are empty (1 ms)
[ok]: BLMPOP_RIGHT: with single empty list argument (2 ms)
[ok]: BLMPOP_RIGHT: with negative timeout (0 ms)
[ok]: BLMPOP_RIGHT: with non-integer timeout (1 ms)
[ok]: BLMPOP_RIGHT: with zero timeout should block indefinitely (1 ms)
[ok]: BLMPOP_RIGHT: with 0.001 timeout should not block indefinitely (22 ms)
[ok]: BLMPOP_RIGHT: second argument is not a list (1 ms)
[16/91 done]: unit/other (6 seconds)
Testing integration/replication-4
[ok]: First server should have role slave after SLAVEOF (102 ms)
[ok]: If min-slaves-to-write is honored, write is accepted (1 ms)
[ok]: No write if min-slaves-to-write is < attached slaves (0 ms)
[ok]: If min-slaves-to-write is honored, write is accepted (again) (0 ms)
[ok]: First server should have role slave after SLAVEOF (101 ms)
[ok]: First server should have role slave after SLAVEOF (1 ms)
[ok]: EXPIRE should not resurrect keys (issue #1026) (1001 ms)
[ok]: 5 keys in, 5 keys out (1 ms)
[ok]: EXPIRE with empty string as TTL should report an error (1 ms)
[ok]: SET with EX with big integer should report an error (0 ms)
[ok]: SET with EX with smallest integer should report an error (0 ms)
[ok]: GETEX with big integer should report an error (1 ms)
[ok]: GETEX with smallest integer should report an error (0 ms)
[ok]: EXPIRE with big integer overflows when converted to milliseconds (1 ms)
[ok]: PEXPIRE with big integer overflow when basetime is added (0 ms)
[ok]: EXPIRE with big negative integer (0 ms)
[ok]: PEXPIREAT with big integer works (0 ms)
[ok]: PEXPIREAT with big negative integer works (1 ms)
[ok]: BLMPOP_RIGHT: timeout (1073 ms)
[ok]: BLMPOP_RIGHT: arguments are empty (2 ms)
[ok]: BLPOP inside a transaction (1 ms)
[ok]: BLMPOP_LEFT inside a transaction (0 ms)
[ok]: Test latency events logging (3401 ms)
[ok]: LATENCY HISTORY output is ok (1 ms)
[ok]: LATENCY LATEST output is ok (0 ms)
[ok]: LATENCY GRAPH can output the event graph (1 ms)
[ok]: BLMPOP propagate as pop with count command to replica (198 ms)
[ok]: LPUSHX, RPUSHX - generic (1 ms)
[ok]: LPUSHX, RPUSHX - quicklist (44 ms)
[ok]: LINSERT - quicklist (44 ms)
[ok]: LPUSHX, RPUSHX - listpack (1 ms)
[ok]: LINSERT - listpack (1 ms)
[ok]: LINSERT raise error on bad syntax (0 ms)
[ok]: LINSERT against non-list value error (0 ms)
[ok]: LINSERT against non existing key (0 ms)
[ok]: LINDEX consistency test - listpack (65 ms)
[ok]: LINDEX random access - listpack (46 ms)
[ok]: Check if list is still ok after a DEBUG RELOAD - listpack (100 ms)
[ok]: ZRANGEBYSCORE fuzzy test, 100 ranges in 128 element sorted set - listpack (2153 ms)
[ok]: LINDEX consistency test - listpack (120 ms)
[ok]: ZRANGEBYLEX fuzzy test, 100 ranges in 128 element sorted set - listpack (133 ms)
[ok]: Stress tester for #3343-alike bugs comp: 2 (8612 ms)
[ok]: LINDEX random access - listpack (83 ms)
[ok]: ZREMRANGEBYLEX fuzzy test, 100 ranges in 128 element sorted set - listpack (232 ms)
[ok]: Check if list is still ok after a DEBUG RELOAD - listpack (186 ms)
[ok]: ZSETs skiplist implementation backlink consistency test - listpack (30 ms)
[ok]: LINDEX consistency test - quicklist (60 ms)
[ok]: LINDEX random access - quicklist (46 ms)
[ok]: Check if list is still ok after a DEBUG RELOAD - quicklist (93 ms)
[ok]: LINDEX consistency test - quicklist (114 ms)
[ok]: LINDEX random access - quicklist (79 ms)
[ok]: LTRIM stress testing - listpack (5334 ms)
[17/91 done]: unit/type/list-2 (10 seconds)
Testing integration/replication-psync
[ok]: Check if list is still ok after a DEBUG RELOAD - quicklist (154 ms)
[ok]: LLEN against non-list value error (0 ms)
[ok]: LLEN against non existing key (0 ms)
[ok]: LINDEX against non-list value error (0 ms)
[ok]: LINDEX against non existing key (0 ms)
[ok]: LPUSH against non-list value error (0 ms)
[ok]: RPUSH against non-list value error (0 ms)
[ok]: RPOPLPUSH base case - quicklist (45 ms)
[ok]: LMOVE left left base case - quicklist (47 ms)
[ok]: All time-to-live(TTL) in commands are propagated as absolute timestamp in milliseconds in AOF (2052 ms)
[ok]: LMOVE left right base case - quicklist (43 ms)
[ok]: LMOVE right left base case - quicklist (43 ms)
[ok]: ZSETs ZRANK augmented skip list stress testing - listpack (751 ms)
[ok]: BZPOPMIN, ZADD + DEL should not awake blocked client (1 ms)
[ok]: BZPOPMIN, ZADD + DEL + SET should not awake blocked client (1 ms)
[ok]: BZMPOP_MIN, ZADD + DEL should not awake blocked client (1 ms)
[ok]: BZMPOP_MIN, ZADD + DEL + SET should not awake blocked client (1 ms)
[ok]: LMOVE right right base case - quicklist (43 ms)
[ok]: All TTL in commands are propagated as absolute timestamp in replication stream (54 ms)
[ok]: RPOPLPUSH with the same list as src and dst - quicklist (43 ms)
[ok]: LMOVE left left with the same list as src and dst - quicklist (44 ms)
[ok]: Slave should be able to synchronize with the master (101 ms)
[ok]: Detect write load to master (0 ms)
[ok]: Test replication partial resync: no reconnection, just sync (diskless: no, disabled, reconnect: 0) (12 ms)
[ok]: LMOVE left right with the same list as src and dst - quicklist (43 ms)
[ok]: First server should have role slave after REPLICAOF (1 ms)
[ok]: For all replicated TTL-related commands, absolute expire times are identical on primary and replica (6 ms)
[ok]: No write if min-slaves-max-lag is > of the slave lag (2819 ms)
[ok]: min-slaves-to-write is ignored by slaves (1 ms)
[ok]: LMOVE right left with the same list as src and dst - quicklist (43 ms)
[ok]: LMOVE right right with the same list as src and dst - quicklist (43 ms)
[ok]: RPOPLPUSH with quicklist source and existing target quicklist (86 ms)
[ok]: XRANGE fuzzing (3273 ms)
[ok]: XREVRANGE regression test for issue #5006 (1 ms)
[ok]: XREAD streamID edge (no-blocking) (0 ms)
[ok]: XREAD streamID edge (blocking) (1 ms)
[ok]: XADD streamID edge (1 ms)
[ok]: XTRIM with MAXLEN option basic test (69 ms)
[ok]: LMOVE left left with quicklist source and existing target quicklist (87 ms)
[ok]: XADD with LIMIT consecutive calls (8 ms)
[ok]: XTRIM with ~ is limited (8 ms)
[ok]: XTRIM without ~ is not limited (7 ms)
[ok]: XTRIM without ~ and with LIMIT (9 ms)
[ok]: XTRIM with LIMIT delete entries no more than limit (1 ms)
[ok]: expired key which is created in writeable replicas should be deleted by active expiry (296 ms)
[ok]: LMOVE left right with quicklist source and existing target quicklist (87 ms)
[ok]: SET command will remove expire (0 ms)
[ok]: SET - use KEEPTTL option, TTL should not be removed (1 ms)
[ok]: LMOVE right left with quicklist source and existing target quicklist (86 ms)
[ok]: Slave should be able to synchronize with the master (101 ms)
[ok]: Detect write load to master (1 ms)
[ok]: XADD with MAXLEN > xlen can propagate correctly (11 ms)
[ok]: LMOVE right right with quicklist source and existing target quicklist (87 ms)
[ok]: RPOPLPUSH with quicklist source and existing target listpack (43 ms)
[ok]: LMOVE left left with quicklist source and existing target listpack (43 ms)
[ok]: LMOVE left right with quicklist source and existing target listpack (43 ms)
[ok]: LMOVE right left with quicklist source and existing target listpack (43 ms)
[ok]: LMOVE right right with quicklist source and existing target listpack (44 ms)
[ok]: RPOPLPUSH base case - listpack (1 ms)
[ok]: LMOVE left left base case - listpack (1 ms)
[ok]: LMOVE left right base case - listpack (1 ms)
[ok]: LMOVE right left base case - listpack (1 ms)
[ok]: LMOVE right right base case - listpack (1 ms)
[ok]: RPOPLPUSH with the same list as src and dst - listpack (0 ms)
[ok]: LMOVE left left with the same list as src and dst - listpack (1 ms)
[ok]: LMOVE left right with the same list as src and dst - listpack (1 ms)
[ok]: LMOVE right left with the same list as src and dst - listpack (1 ms)
[ok]: LMOVE right right with the same list as src and dst - listpack (1 ms)
[ok]: XADD with MINID > lastid can propagate correctly (16 ms)
[ok]: RPOPLPUSH with listpack source and existing target quicklist (44 ms)
[ok]: LMOVE left left with listpack source and existing target quicklist (44 ms)
[ok]: BZPOPMIN unblock but the key is expired and then block again - reprocessing command (1004 ms)
[ok]: BZPOPMIN with same key multiple times should work (2 ms)
[ok]: MULTI/EXEC is isolated from the point of view of BZPOPMIN (2 ms)
[ok]: LMOVE left right with listpack source and existing target quicklist (43 ms)
[ok]: BZPOPMIN with variadic ZADD (1 ms)
[ok]: LMOVE right left with listpack source and existing target quicklist (43 ms)
[ok]: LMOVE right right with listpack source and existing target quicklist (44 ms)
[ok]: RPOPLPUSH with listpack source and existing target listpack (1 ms)
[ok]: LMOVE left left with listpack source and existing target listpack (1 ms)
[ok]: LMOVE left right with listpack source and existing target listpack (1 ms)
[ok]: LMOVE right left with listpack source and existing target listpack (1 ms)
[ok]: LMOVE right right with listpack source and existing target listpack (1 ms)
[ok]: RPOPLPUSH against non existing key (1 ms)
[ok]: RPOPLPUSH against non list src key (0 ms)
[ok]: MASTER and SLAVE consistency with expire (3680 ms)
[ok]: XADD with ~ MAXLEN can propagate correctly (17 ms)
[ok]: RPOPLPUSH against non list dst key - quicklist (42 ms)
[ok]: RPOPLPUSH against non list dst key - listpack (2 ms)
[ok]: RPOPLPUSH against non existing src key (0 ms)
[ok]: Master can replicate command longer than client-query-buffer-limit on replica (69 ms)
[ok]: SRANDMEMBER with a dict containing long chain (8294 ms)
[ok]: Basic LPOP/RPOP/LMPOP - quicklist (88 ms)
[ok]: Basic LPOP/RPOP/LMPOP - listpack (1 ms)
[ok]: LPOP/RPOP/LMPOP against empty list (1 ms)
[ok]: SMOVE basics - from regular set to intset (3 ms)
[ok]: LPOP/RPOP/LMPOP NON-BLOCK or BLOCK against non list value (1 ms)
[ok]: SMOVE basics - from intset to regular set (2 ms)
[ok]: SMOVE non existing key (1 ms)
[ok]: SMOVE non existing src set (1 ms)
[ok]: SMOVE from regular set to non existing destination set (1 ms)
[ok]: SMOVE from intset to non existing destination set (1 ms)
[ok]: SMOVE wrong src key type (1 ms)
[ok]: SMOVE wrong dst key type (0 ms)
[ok]: SMOVE with identical source and destination (0 ms)
[ok]: SMOVE only notify dstset when the addition is successful (1 ms)
[ok]: Mass RPOP/LPOP - listpack (42 ms)
[ok]: XADD with ~ MAXLEN and LIMIT can propagate correctly (16 ms)
[ok]: Mass RPOP/LPOP - listpack (80 ms)
[ok]: LMPOP with illegal argument (3 ms)
[ok]: LATENCY GRAPH can output the expire event graph (0 ms)
[ok]: LATENCY of expire events are correctly collected (2864 ms)
[ok]: LATENCY HISTORY / RESET with wrong event name is fine (0 ms)
[ok]: LATENCY DOCTOR produces some output (1 ms)
[ok]: LATENCY RESET is able to reset events (0 ms)
[ok]: LATENCY HELP should not have unexpected options (0 ms)
[ok]: LMPOP single existing list - quicklist (129 ms)
[18/91 done]: unit/latency-monitor (6 seconds)
Testing integration/replication-buffer
[ok]: XADD with ~ MINID can propagate correctly (15 ms)
[ok]: LMPOP multiple existing lists - quicklist (173 ms)
[ok]: LMPOP single existing list - listpack (2 ms)
[ok]: LMPOP multiple existing lists - listpack (3 ms)
[ok]: LMPOP propagate as pop with count command to replica (78 ms)
[ok]: LRANGE basics - quicklist (42 ms)
[ok]: XADD with ~ MINID and LIMIT can propagate correctly (15 ms)
[ok]: LRANGE inverted indexes - quicklist (43 ms)
[ok]: LRANGE out of range indexes including the full list - quicklist (43 ms)
[ok]: LRANGE out of range negative end index - quicklist (44 ms)
[ok]: LRANGE basics - listpack (1 ms)
[ok]: LRANGE inverted indexes - listpack (1 ms)
[ok]: LRANGE out of range indexes including the full list - listpack (0 ms)
[ok]: LRANGE out of range negative end index - listpack (1 ms)
[ok]: LRANGE against non existing key (0 ms)
[ok]: LRANGE with start > end yields an empty array for backward compatibility (1 ms)
[ok]: BZPOPMIN with zero timeout should block indefinitely (1003 ms)
[ok]: MULTI/EXEC is isolated from the point of view of BZMPOP_MIN (1 ms)
[ok]: BZMPOP_MIN with variadic ZADD (1 ms)
[ok]: XTRIM with ~ MAXLEN can propagate correctly (16 ms)
[ok]: XADD can CREATE an empty stream (0 ms)
[ok]: XSETID can set a specific ID (1 ms)
[ok]: XSETID cannot SETID with smaller ID (0 ms)
[ok]: XSETID cannot SETID on non-existent key (0 ms)
[ok]: XSETID cannot run with an offset but without a maximal tombstone (0 ms)
[ok]: XSETID cannot run with a maximal tombstone but without an offset (0 ms)
[ok]: XSETID errors on negstive offset (0 ms)
[ok]: XSETID cannot set the maximal tombstone with larger ID (1 ms)
[ok]: XSETID cannot set the offset to less than the length (0 ms)
[ok]: XSETID cannot set smaller ID than current MAXDELETEDID (1 ms)
[ok]: intsets implementation stress testing (1151 ms)
[19/91 done]: unit/type/set (12 seconds)
Testing integration/shutdown
[ok]: LTRIM basics - quicklist (518 ms)
[ok]: XADD advances the entries-added counter and sets the recorded-first-entry-id (1 ms)
[ok]: XDEL/TRIM are reflected by recorded first entry (1 ms)
[ok]: Maximum XDEL ID behaves correctly (1 ms)
[ok]: XADD with artial ID with maximal seq (0 ms)
[ok]: LTRIM out of range negative end index - quicklist (86 ms)
[ok]: SET - use KEEPTTL option, TTL should not be removed after loadaof (2007 ms)
[ok]: GETEX use of PERSIST option should remove TTL (0 ms)
[ok]: GETEX use of PERSIST option should remove TTL after loadaof (1 ms)
[ok]: LSET - quicklist (44 ms)
[ok]: LSET out of range index - quicklist (0 ms)
[ok]: LTRIM basics - listpack (6 ms)
[ok]: LTRIM out of range negative end index - listpack (1 ms)
[ok]: LSET - listpack (1 ms)
[ok]: LSET out of range index - listpack (0 ms)
[ok]: LSET against non existing key (0 ms)
[ok]: LSET against non list value (0 ms)
[ok]: GETEX propagate as to replica as PERSIST, DEL, or nothing (73 ms)
[ok]: EXPIRE with NX option on a key with ttl (1 ms)
[ok]: EXPIRE with NX option on a key without ttl (0 ms)
[ok]: EXPIRE with XX option on a key with ttl (0 ms)
[ok]: EXPIRE with XX option on a key without ttl (0 ms)
[ok]: EXPIRE with GT option on a key with lower ttl (0 ms)
[ok]: EXPIRE with GT option on a key with higher ttl (0 ms)
[ok]: EXPIRE with GT option on a key without ttl (0 ms)
[ok]: EXPIRE with LT option on a key with higher ttl (0 ms)
[ok]: EXPIRE with LT option on a key with lower ttl (1 ms)
[ok]: EXPIRE with LT option on a key without ttl (0 ms)
[ok]: EXPIRE with LT and XX option on a key with ttl (0 ms)
[ok]: EXPIRE with LT and XX option on a key without ttl (0 ms)
[ok]: EXPIRE with conflicting options: LT GT (0 ms)
[ok]: EXPIRE with conflicting options: NX GT (0 ms)
[ok]: EXPIRE with conflicting options: NX LT (1 ms)
[ok]: EXPIRE with conflicting options: NX XX (0 ms)
[ok]: EXPIRE with unsupported options (0 ms)
[ok]: EXPIRE with unsupported options (0 ms)
[ok]: EXPIRE with negative expiry (0 ms)
[ok]: EXPIRE with negative expiry on a non-valitale key (0 ms)
[ok]: EXPIRE with non-existed key (1 ms)
[ok]: LREM remove all the occurrences - quicklist (42 ms)
[ok]: LREM remove the first occurrence - quicklist (1 ms)
[ok]: LREM remove non existing element - quicklist (0 ms)
[ok]: LREM starting from tail with negative count - quicklist (43 ms)
[ok]: LREM starting from tail with negative count (2) - quicklist (0 ms)
[ok]: LREM deleting objects that may be int encoded - quicklist (46 ms)
[ok]: LREM remove all the occurrences - listpack (1 ms)
[ok]: LREM remove the first occurrence - listpack (0 ms)
[ok]: LREM remove non existing element - listpack (0 ms)
[ok]: LREM starting from tail with negative count - listpack (1 ms)
[ok]: LREM starting from tail with negative count (2) - listpack (0 ms)
[ok]: LREM deleting objects that may be int encoded - listpack (0 ms)
[ok]: Regression for bug 593 - chaining BRPOPLPUSH with other blocking cmds (1 ms)
[ok]: BLPOP/BLMOVE should increase dirty (2 ms)
[ok]: Redis should not propagate the read command on lazy expire (96 ms)
[ok]: client unblock tests (4 ms)
[ok]: client unblock tests (2 ms)
[ok]: List listpack -> quicklist encoding conversion (2 ms)
[ok]: Empty stream can be rewrite into AOF correctly (106 ms)
[ok]: SCAN: Lazy-expire should not be wrapped in MULTI/EXEC (101 ms)
[ok]: Stream can be rewrite into AOF correctly after XDEL lastid (105 ms)
[ok]: List listpack -> quicklist encoding conversion (174 ms)
[ok]: RANDOMKEY: Lazy-expire should not be wrapped in MULTI/EXEC (101 ms)
[ok]: Test replication with parallel clients writing in different DBs (5454 ms)
[ok]: BZMPOP_MIN with zero timeout should block indefinitely (1002 ms)
[ok]: ZSCORE - skiplist (13 ms)
[20/91 done]: unit/expire (13 seconds)
Testing integration/aof
[ok]: ZMSCORE - skiplist (13 ms)
[ok]: ZSCORE after a DEBUG RELOAD - skiplist (16 ms)
[ok]: ZSET sorting stresser - skiplist (21 ms)
[ok]: XGROUP HELP should not have unexpected options (0 ms)
[ok]: XINFO HELP should not have unexpected options (0 ms)
[ok]: List quicklist -> listpack encoding conversion (220 ms)
[ok]: List encoding conversion when RDB loading (10 ms)
[ok]: Unfinished MULTI: Server should start if load-truncated is yes (1 ms)
[ok]: List invalid list-max-listpack-size config (43 ms)
[21/91 done]: unit/type/stream (13 seconds)
Testing integration/aof-race
[ok]: Short read: Server should start if load-truncated is yes (0 ms)
[ok]: Truncated AOF loaded: we expect foo to be equal to 5 (1 ms)
[ok]: Append a new command after loading an incomplete AOF (0 ms)
[ok]: List of various encodings (90 ms)
[ok]: List of various encodings - sanitize dump (1 ms)
[ok]: Unblock fairness is kept while pipelining (1 ms)
[ok]: Unblock fairness is kept during nested unblock (2 ms)
[ok]: Blocking command accounted only once in commandstats (1 ms)
[ok]: Blocking command accounted only once in commandstats after timeout (1 ms)
[ok]: Command being unblocked cause another command to get unblocked execution order test (88 ms)
[ok]: Short read + command: Server should start (1 ms)
[ok]: Truncated AOF loaded: we expect foo to be equal to 6 now (0 ms)
[22/91 done]: unit/type/list (13 seconds)
Testing integration/aof-multi-part
[ok]: Bad format: Server should have logged an error (0 ms)
[ok]: First server should have role slave after SLAVEOF (100 ms)
[ok]: With min-slaves-to-write (1,3): master should be writable (0 ms)
[ok]: With min-slaves-to-write (2,3): master should not be writable (1 ms)
[ok]: With min-slaves-to-write function without no-write flag (0 ms)
[ok]: With not enough good slaves, read in Lua script is still accepted (1 ms)
[ok]: Multi Part AOF can't load data when some file missing (106 ms)
[ok]: Unfinished MULTI: Server should have logged an error (1 ms)
[ok]: Multi Part AOF can't load data when the sequence not increase monotonically (107 ms)
[ok]: Short read: Server should have logged an error (1 ms)
[ok]: Short read: Utility should confirm the AOF is not valid (3 ms)
[ok]: Short read: Utility should show the abnormal line num in AOF (5 ms)
[ok]: Short read: Utility should be able to fix the AOF (5 ms)
[ok]: Multi Part AOF can't load data when there are blank lines in the manifest file (108 ms)
[23/91 done]: integration/aof-race (1 seconds)
Testing integration/rdb
[ok]: Fixed AOF: Server should have been started (1 ms)
[ok]: Fixed AOF: Keyspace should contain values that were parseable (0 ms)
[ok]: Multi Part AOF can't load data when there is a duplicate base file (109 ms)
[ok]: All replicas share one global replication buffer (31 ms)
[ok]: Replication buffer will become smaller when no replica uses (2 ms)
[ok]: test old version rdb file (1 ms)
[ok]: AOF+SPOP: Server should have been started (0 ms)
[ok]: AOF+SPOP: Set should have 1 member (1 ms)
[ok]: Multi Part AOF can't load data when the manifest format is wrong (type unknown) (107 ms)
[ok]: AOF+SPOP: Server should have been started (1 ms)
[ok]: AOF+SPOP: Set should have 1 member (0 ms)
[ok]: Multi Part AOF can't load data when the manifest format is wrong (missing key) (107 ms)
[ok]: RDB encoding loading test (3 ms)
[ok]: AOF+EXPIRE: Server should have been started (0 ms)
[ok]: AOF+EXPIRE: List should be empty (1 ms)
[ok]: Shutting down master waits for replica to catch up (sigterm) (1796 ms)
[ok]: Multi Part AOF can't load data when the manifest format is wrong (line too short) (106 ms)
[ok]: Redis should not try to convert DEL into EXPIREAT for EXPIRE -1 (1 ms)
[ok]: Multi Part AOF can't load data when the manifest format is wrong (line too long) (108 ms)
[ok]: ZRANGEBYSCORE fuzzy test, 100 ranges in 100 element sorted set - skiplist (1267 ms)
[ok]: Server started empty with non-existing RDB file (0 ms)
[ok]: ZRANGEBYLEX fuzzy test, 100 ranges in 100 element sorted set - skiplist (78 ms)
[ok]: Multi Part AOF can't load data when the manifest format is wrong (odd parameter) (109 ms)
[ok]: ZREMRANGEBYLEX fuzzy test, 100 ranges in 100 element sorted set - skiplist (120 ms)
[ok]: Multi Part AOF can't load data when the manifest file is empty (109 ms)
[ok]: ZSETs skiplist implementation backlink consistency test - skiplist (15 ms)
[ok]: Server started empty with empty RDB file (0 ms)
[ok]: Multi Part AOF can start when no aof and no manifest (120 ms)
[ok]: Multi Part AOF can start when we have en empty AOF dir (130 ms)
[ok]: Test RDB stream encoding (74 ms)
[ok]: Test RDB stream encoding - sanitize dump (9 ms)
[ok]: Multi Part AOF can load data discontinuously increasing sequence (120 ms)
[ok]: MASTER and SLAVE dataset should be identical after complex ops (4765 ms)
[ok]: Server should not start if RDB file can't be open (0 ms)
[24/91 done]: integration/replication-2 (8 seconds)
Testing integration/corrupt-dump
[ok]: Multi Part AOF can load data when manifest add new k-v (123 ms)
[ok]: ZSETs ZRANK augmented skip list stress testing - skiplist (535 ms)
[ok]: Server should not start if RDB is corrupted (1 ms)
[ok]: BZPOPMIN, ZADD + DEL should not awake blocked client (0 ms)
[ok]: BZPOPMIN, ZADD + DEL + SET should not awake blocked client (1 ms)
[ok]: BZMPOP_MIN, ZADD + DEL should not awake blocked client (1 ms)
[ok]: BZMPOP_MIN, ZADD + DEL + SET should not awake blocked client (1 ms)
[ok]: Multi Part AOF can load data when some AOFs are empty (119 ms)
[ok]: exec with read commands and stale replica state change (10010 ms)
[ok]: EXEC with only read commands should not be rejected when OOM (0 ms)
[ok]: EXEC with at least one use-memory command should fail (1 ms)
[ok]: Blocking commands ignores the timeout (1 ms)
[ok]: MIGRATE cached connections are released after some time (15001 ms)
[ok]: MULTI propagation of PUBLISH (99 ms)
[ok]: corrupt payload: #7445 - with sanitize (224 ms)
[ok]: MULTI propagation of SCRIPT LOAD (100 ms)
[ok]: Multi Part AOF can load data from old version redis (rdb preamble no) (228 ms)
[ok]: MIGRATE is able to migrate a key between two instances (215 ms)
[ok]: Test FLUSHALL aborts bgsave (222 ms)
[ok]: MULTI propagation of EVAL (101 ms)
[ok]: corrupt payload: hash with valid zip list header, invalid entry len (213 ms)
[ok]: bgsave resets the change counter (101 ms)
[ok]: MULTI propagation of SCRIPT FLUSH (100 ms)
[ok]: MIGRATE is able to copy a key between two instances (215 ms)
[ok]: Multi Part AOF can load data from old version redis (rdb preamble yes) (228 ms)
[ok]: MULTI propagation of XREADGROUP (102 ms)
[ok]: MULTI with SAVE (0 ms)
[ok]: MULTI with SHUTDOWN (1 ms)
[ok]: corrupt payload: invalid zlbytes header (215 ms)
[ok]: Multi Part AOF can continue the upgrade from the interrupted upgrade state (123 ms)
[ok]: MIGRATE will not overwrite existing keys, unless REPLACE is used (215 ms)
[ok]: Multi Part AOF can be loaded correctly when both server dir and aof dir contain old AOF (124 ms)
[ok]: MULTI with BGREWRITEAOF (203 ms)
[ok]: Shutting down master waits for replica to catch up (shutdown) (1682 ms)
[ok]: corrupt payload: valid zipped hash header, dup records (215 ms)
[ok]: Multi Part AOF can't load data when the manifest contains the old AOF file name but the file does not exist in server dir and aof dir (111 ms)
[ok]: Replication backlog size can outgrow the backlog limit config (677 ms)
[ok]: MIGRATE propagates TTL correctly (213 ms)
[ok]: MULTI with config set appendonly (207 ms)
[ok]: MULTI with config error (1 ms)
[ok]: Flushall while watching several keys by one client (0 ms)
[ok]: BZPOPMIN unblock but the key is expired and then block again - reprocessing command (1002 ms)
[ok]: BZPOPMIN with same key multiple times should work (1 ms)
[ok]: MULTI/EXEC is isolated from the point of view of BZPOPMIN (1 ms)
[ok]: BZPOPMIN with variadic ZADD (1 ms)
[ok]: corrupt payload: quicklist big ziplist prev len (214 ms)
[ok]: With min-slaves-to-write: master not writable with lagged slave (2719 ms)
[ok]: MULTI with FLUSHALL and AOF (2 ms)
[ok]: Multi Part AOF can upgrade when when two redis share the same server dir (redis1) (107 ms)
[ok]: corrupt payload: quicklist small ziplist prev len (216 ms)
[25/91 done]: unit/multi (15 seconds)
Testing integration/corrupt-dump-fuzzer
[ok]: Multi Part AOF can upgrade when when two redis share the same server dir (redis2) (107 ms)
[ok]: client freed during loading (914 ms)
[ok]: corrupt payload: quicklist ziplist wrong count (217 ms)
[ok]: Multi Part AOF can upgrade when when two redis share the same server dir (645 ms)
[ok]: First server should have role slave after SLAVEOF (102 ms)
[ok]: corrupt payload: #3080 - quicklist (214 ms)
[ok]: Stress tester for #3343-alike bugs comp: 1 (7770 ms)
[ok]: Multi Part AOF can handle appendfilename contains whitespaces (329 ms)
[ok]: corrupt payload: quicklist with empty ziplist (224 ms)
[ok]: Slave is able to detect timeout during handshake (0 ms)
[ok]: Multi Part AOF can create BASE (RDB format) when redis starts from empty (122 ms)
[ok]: BZPOPMIN with zero timeout should block indefinitely (1002 ms)
[ok]: MULTI/EXEC is isolated from the point of view of BZMPOP_MIN (1 ms)
[ok]: BZMPOP_MIN with variadic ZADD (0 ms)
[ok]: Replica could use replication buffer (beyond backlog config) for partial resynchronization (1128 ms)
[ok]: Test RDB load info (523 ms)
[ok]: Slave is able to evict keys created in writable slaves (6002 ms)
[ok]: Multi Part AOF can create BASE (AOF format) when redis starts from empty (123 ms)
[ok]: corrupt payload: quicklist encoded_len is 0 (213 ms)
[ok]: Replication of an expired key does not delete the expired key (508 ms)
[ok]: Test replication partial resync: ok psync (diskless: no, disabled, reconnect: 1) (6631 ms)
[ok]: Writable replica doesn't return expired keys (102 ms)
[ok]: PFCOUNT updates cache on readonly replica (1 ms)
[ok]: Make sure aof manifest appendonly.aof.manifest not in aof directory (0 ms)
[ok]: PFCOUNT doesn't use expired key on readonly replica (101 ms)
[ok]: corrupt payload: quicklist listpack entry start with EOF (214 ms)
[ok]: Set instance A as slave of B (101 ms)
[ok]: INCRBYFLOAT replication, should not remove expire (2 ms)
[ok]: GETSET replication (1 ms)
[ok]: BRPOPLPUSH replication, when blocking against empty list (1 ms)
[ok]: Replication backlog memory will become smaller if disconnecting with replica (451 ms)
[ok]: corrupt payload: #3080 - ziplist (216 ms)
[ok]: Shutting down master waits for replica timeout (1756 ms)
[ok]: First server should have role slave after SLAVEOF (1 ms)
[ok]: corrupt payload: load corrupted rdb with no CRC - #3505 (108 ms)
[ok]: Slave should be able to synchronize with the master (101 ms)
[ok]: Detect write load to master (1 ms)
[ok]: corrupt payload: load corrupted rdb with empty keys (220 ms)
[ok]: BZMPOP_MIN with zero timeout should block indefinitely (1002 ms)
[ok]: BZPOP/BZMPOP against wrong type (1 ms)
[ok]: BZMPOP with illegal argument (1 ms)
[ok]: BZMPOP with multiple blocked clients (2 ms)
[ok]: corrupt payload: load corrupted rdb with empty keys (222 ms)
[ok]: AOF enable will create manifest file (882 ms)
[26/91 done]: integration/replication-3 (11 seconds)
Testing integration/convert-zipmap-hash-on-load
[ok]: BZMPOP propagate as pop with count command to replica (193 ms)
[ok]: BZMPOP should not blocks on non key arguments - #10762 (2 ms)
[ok]: RDB load zipmap hash: converts to listpack (1 ms)
[ok]: corrupt payload: listpack invalid size header (217 ms)
[ok]: corrupt payload: listpack too long entry len (125 ms)
[ok]: BRPOPLPUSH replication, list exists (1003 ms)
[ok]: BLMOVE (left, left) replication, when blocking against empty list (2 ms)
[ok]: RDB load zipmap hash: converts to hash table when hash-max-ziplist-entries is exceeded (0 ms)
[ok]: corrupt payload: listpack very long entry len (123 ms)
[ok]: RDB load zipmap hash: converts to hash table when hash-max-ziplist-value is exceeded (0 ms)
[ok]: corrupt payload: listpack too long entry prev len (217 ms)
[ok]: Shutting down master waits for replica then fails (1242 ms)
[27/91 done]: integration/convert-zipmap-hash-on-load (1 seconds)
Testing integration/convert-ziplist-hash-on-load
[ok]: RDB load ziplist hash: converts to listpack when RDB loading (1 ms)
[ok]: ZSET skiplist order consistency when elements are moved (728 ms)
[ok]: ZRANGESTORE basic (0 ms)
[ok]: ZRANGESTORE RESP3 (1 ms)
[ok]: ZRANGESTORE range (0 ms)
[ok]: ZRANGESTORE BYLEX (1 ms)
[ok]: ZRANGESTORE BYSCORE (0 ms)
[ok]: ZRANGESTORE BYSCORE LIMIT (0 ms)
[ok]: ZRANGESTORE BYSCORE REV LIMIT (1 ms)
[ok]: ZRANGE BYSCORE REV LIMIT (0 ms)
[ok]: ZRANGESTORE - src key missing (0 ms)
[ok]: ZRANGESTORE - src key wrong type (0 ms)
[ok]: ZRANGESTORE - empty range (0 ms)
[ok]: ZRANGESTORE BYLEX - empty range (1 ms)
[ok]: ZRANGESTORE BYSCORE - empty range (0 ms)
[ok]: ZRANGE BYLEX (0 ms)
[ok]: ZRANGESTORE invalid syntax (0 ms)
[ok]: ZRANGESTORE with zset-max-listpack-entries 0 #10767 case (1 ms)
[ok]: ZRANGESTORE with zset-max-listpack-entries 1 dst key should use skiplist encoding (0 ms)
[ok]: ZRANGE invalid syntax (1 ms)
[ok]: ZRANDMEMBER - listpack (6 ms)
[ok]: ZRANDMEMBER - skiplist (6 ms)
[ok]: ZRANDMEMBER with RESP3 (1 ms)
[ok]: ZRANDMEMBER count of 0 is handled correctly (0 ms)
[ok]: ZRANDMEMBER with <count> against non existing key (0 ms)
[ok]: ZRANDMEMBER count overflow (1 ms)
[ok]: ZRANDMEMBER count of 0 is handled correctly - emptyarray (0 ms)
[ok]: ZRANDMEMBER with <count> against non existing key - emptyarray (0 ms)
[ok]: corrupt payload: stream with duplicate consumers (217 ms)
[ok]: RDB load ziplist hash: converts to hash table when hash-max-ziplist-entries is exceeded (1 ms)
[ok]: ZRANDMEMBER with <count> - skiplist (201 ms)
[ok]: Test child sending info (1958 ms)
[ok]: corrupt payload: hash ziplist with duplicate records (218 ms)
[28/91 done]: integration/convert-ziplist-hash-on-load (0 seconds)
Testing integration/convert-ziplist-zset-on-load
[ok]: Shutting down master waits for replica then aborted (521 ms)
[ok]: script won't load anymore if it's in rdb (1 ms)
[ok]: ZRANDMEMBER with <count> - listpack (200 ms)
[ok]: zset score double range (1 ms)
[ok]: RDB load ziplist zset: converts to listpack when RDB loading (1 ms)
[ok]: zunionInterDiffGenericCommand acts on SET and ZSET (11 ms)
[ok]: ZADD overflows the maximum allowed elements in a listpack - single (5 ms)
[ok]: ZADD overflows the maximum allowed elements in a listpack - multiple (1 ms)
[ok]: ZADD overflows the maximum allowed elements in a listpack - single_multiple (1 ms)
[29/91 done]: unit/type/zset (19 seconds)
Testing integration/logging
[ok]: corrupt payload: hash listpack with duplicate records (216 ms)
[ok]: BLMOVE (left, left) replication, list exists (1002 ms)
[ok]: BLMOVE (left, right) replication, when blocking against empty list (1 ms)
[ok]: Crash report generated on SIGABRT (2 ms)
[ok]: corrupt payload: hash listpack with duplicate records - convert (121 ms)
[ok]: RDB load ziplist zset: converts to skiplist when zset-max-ziplist-entries is exceeded (1 ms)
[ok]: Crash report generated on DEBUG SEGFAULT (2 ms)
[30/91 done]: integration/logging (1 seconds)
Testing integration/psync2
[31/91 done]: integration/convert-ziplist-zset-on-load (1 seconds)
Testing integration/psync2-reg
[ok]: AOF fsync always barrier issue (5256 ms)
[ok]: corrupt payload: hash ziplist uneven record count (218 ms)
[ok]: failed bgsave prevents writes (245 ms)
[ok]: Shutting down primary wait for replica after previous block (522 ms)
[32/91 done]: integration/shutdown (8 seconds)
Testing integration/psync2-pingoff
[33/91 done]: integration/rdb (6 seconds)
Testing integration/psync2-master-restart
[ok]: GETEX should not append to AOF (1 ms)
[ok]: corrupt payload: hash duplicate records (215 ms)
[ok]: Unknown command: Server should have logged an error (1 ms)
[ok]: corrupt payload: hash empty zipmap (217 ms)
[ok]: PSYNC2: --- CYCLE 1 --- (0 ms)
[ok]: PSYNC2: [NEW LAYOUT] Set #1 as master (1 ms)
[ok]: PSYNC2: Set #0 to replicate from #4 (0 ms)
[ok]: corrupt payload: fuzzer findings - NPD in streamIteratorGetID (122 ms)
[ok]: AOF+LMPOP/BLMPOP: pop elements from the list (102 ms)
[ok]: corrupt payload: fuzzer findings - listpack NPD on invalid stream (121 ms)
[ok]: AOF+LMPOP/BLMPOP: after pop elements from the list (0 ms)
[ok]: BLMOVE (left, right) replication, list exists (1003 ms)
[ok]: BLMOVE (right, left) replication, when blocking against empty list (1 ms)
[ok]: corrupt payload: fuzzer findings - NPD in quicklistIndex (216 ms)
[ok]: AOF+ZMPOP/BZMPOP: pop elements from the zset (102 ms)
[ok]: Partial resynchronization is successful even client-output-buffer-limit is less than repl-backlog-size (3134 ms)
[ok]: corrupt payload: fuzzer findings - encoded entry header reach outside the allocation (225 ms)
[ok]: AOF+ZMPOP/BZMPOP: after pop elements from the zset (0 ms)
[ok]: PSYNC2 #3899 regression: setup (1004 ms)
[ok]: PSYNC2: Partial resync after Master restart using RDB aux fields when offset is 0 (115 ms)
[ok]: PSYNC2 pingoff: setup (1003 ms)
[ok]: PSYNC2 pingoff: write and wait replication (0 ms)
[ok]: corrupt payload: fuzzer findings - invalid ziplist encoding (216 ms)
[ok]: AOF multiple rewrite failures will open multiple INCR AOFs (3066 ms)
[ok]: Generate timestamp annotations in AOF (325 ms)
[ok]: PSYNC2: Set #4 to replicate from #1 (0 ms)
[ok]: The update of replBufBlock's repl_offset is ok - Regression test for #11666 (2 ms)
[ok]: corrupt payload: fuzzer findings - hash crash (218 ms)
[ok]: PSYNC2 #3899 regression: kill chained replica (0 ms)
[ok]: Successfully load AOF which has timestamp annotations inside (1 ms)
[ok]: BLMOVE (right, left) replication, list exists (1003 ms)
[ok]: BLMOVE (right, right) replication, when blocking against empty list (2 ms)
[ok]: corrupt payload: fuzzer findings - uneven entry count in hash (217 ms)
[ok]: corrupt payload: fuzzer findings - invalid read in lzf_decompress (219 ms)
[ok]: Truncate AOF to specific timestamp (405 ms)
[ok]: MIGRATE can correctly transfer large values (5940 ms)
[ok]: Replica client-output-buffer size is limited to backlog_limit/16 when no replication data is pending (1123 ms)
[34/91 done]: integration/replication-buffer (11 seconds)
Testing integration/failover
[ok]: PSYNC2 #3899 regression: kill chained replica (0 ms)
[ok]: corrupt payload: fuzzer findings - leak in rdbloading due to dup entry in set (220 ms)
[ok]: MIGRATE can correctly transfer hashes (218 ms)
[ok]: AOF rewrite doesn't open new aof when AOF turn off (957 ms)
[ok]: PSYNC2 #3899 regression: kill chained replica (0 ms)
[ok]: corrupt payload: fuzzer findings - empty intset (218 ms)
[ok]: failover command fails without connected replica (0 ms)
[ok]: PSYNC2: Set #2 to replicate from #0 (1 ms)
[ok]: AOF enable/disable auto gc (213 ms)
[ok]: setup replication for following tests (102 ms)
[ok]: failover command fails with invalid host (0 ms)
[ok]: failover command fails with invalid port (1 ms)
[ok]: failover command fails with just force and timeout (0 ms)
[ok]: failover command fails when sent to a replica (1 ms)
[ok]: failover command fails with force without timeout (0 ms)
[ok]: corrupt payload: fuzzer findings - zset ziplist entry lensize is 0 (218 ms)
[ok]: AOF can produce consecutive sequence number after reload (101 ms)
[ok]: BLMOVE (right, right) replication, list exists (1003 ms)
[ok]: corrupt payload: fuzzer findings - valgrind ziplist prevlen reaches outside the ziplist (218 ms)
[ok]: BLPOP followed by role change, issue #2473 (204 ms)
[ok]: EVAL timeout with slow verbatim Lua script from AOF (918 ms)
[ok]: PSYNC2: Partial resync after Master restart using RDB aux fields with data (1122 ms)
[ok]: MIGRATE timeout actually works (634 ms)
[ok]: AOF enable during BGSAVE will not write data util AOFRW finish (366 ms)
[ok]: corrupt payload: fuzzer findings - valgrind - bad rdbLoadDoubleValue (218 ms)
[ok]: EVAL can process writes from AOF in read-only replicas (222 ms)
[ok]: Test valkey-check-aof for old style resp AOF (7 ms)
[ok]: Test valkey-check-aof for old style resp AOF - has data in the same format as manifest (5 ms)
[ok]: Test valkey-check-aof for old style rdb-preamble AOF (5 ms)
[ok]: Test valkey-check-aof for Multi Part AOF with resp AOF base (5 ms)
[ok]: MIGRATE can migrate multiple keys at once (219 ms)
[ok]: MIGRATE with multiple keys must have empty key arg (0 ms)
[ok]: Test valkey-check-aof for Multi Part AOF with rdb-preamble AOF base (5 ms)
[ok]: Test valkey-check-aof for Multi Part AOF contains a format error (4 ms)
[ok]: Test valkey-check-aof only truncates the last file for Multi Part AOF in fix mode (11 ms)
[ok]: Test valkey-check-aof only truncates the last file for Multi Part AOF in truncate-to-timestamp mode (5 ms)
[ok]: corrupt payload: fuzzer findings - valgrind ziplist prev too big (218 ms)
[ok]: Second server should have role master at first (1 ms)
[ok]: SLAVEOF should start with link status "down" (1 ms)
[ok]: The role should immediately be changed to "replica" (0 ms)
[ok]: FLUSHDB / FLUSHALL should persist in AOF (20 ms)
[ok]: MIGRATE with multiple keys migrate just existing ones (218 ms)
[ok]: failover command to specific replica works (832 ms)
[35/91 done]: integration/aof (10 seconds)
Testing integration/valkey-cli
[ok]: Sync should have transferred keys from master (0 ms)
[ok]: The link status should be up (1 ms)
[ok]: SET on the master should immediately propagate (0 ms)
[ok]: PSYNC2: Set #3 to replicate from #0 (1 ms)
[ok]: corrupt payload: fuzzer findings - lzf decompression fails, avoid valgrind invalid read (216 ms)
[ok]: FLUSHDB / FLUSHALL should replicate (93 ms)
[ok]: ROLE in master reports master with a slave (1 ms)
[ok]: ROLE in slave reports slave in connected state (0 ms)
[ok]: AOF will trigger limit when AOFRW fails many times (563 ms)
[ok]: Interactive CLI: INFO response should be printed raw (61 ms)
[ok]: MIGRATE with multiple keys: stress command rewriting (216 ms)
[ok]: Interactive CLI: Status reply (61 ms)
[ok]: corrupt payload: fuzzer findings - stream bad lp_count (216 ms)
[ok]: Interactive CLI: Integer reply (61 ms)
[ok]: Interactive CLI: Bulk reply (62 ms)
[ok]: MIGRATE with multiple keys: delete just ack keys (219 ms)
[ok]: corrupt payload: fuzzer findings - stream bad lp_count - unsanitized (125 ms)
[ok]: Interactive CLI: Multi-bulk reply (61 ms)
[ok]: MIGRATE AUTH: correct and wrong password cases (220 ms)
[ok]: corrupt payload: fuzzer findings - stream integrity check issue (216 ms)
[36/91 done]: unit/dump (24 seconds)
Testing integration/valkey-benchmark
[ok]: corrupt payload: fuzzer findings - infinite loop (125 ms)
[ok]: Interactive CLI: Parsing quotes (427 ms)
[ok]: failover command to any replica works (932 ms)
[ok]: benchmark: set,get (5 ms)
[ok]: corrupt payload: fuzzer findings - hash ziplist too long entry len (223 ms)
[ok]: benchmark: connecting using URI set,get (7 ms)
[ok]: benchmark: connecting using URI with authentication set,get (9 ms)
[ok]: PSYNC2: cluster is consistent after failover (1 ms)
[ok]: PSYNC2: Partial resync after Master restart using RDB aux fields with expire (1566 ms)
[ok]: PSYNC2 #3899 regression: kill first replica (0 ms)
[ok]: benchmark: full test suite (157 ms)
[ok]: corrupt payload: OOM in rdbGenericLoadStringObject (240 ms)
[ok]: failover to a replica with force works (445 ms)
[ok]: corrupt payload: fuzzer findings - OOM in dictExpand (233 ms)
[ok]: Interactive CLI: Subscribed mode (605 ms)
[ok]: corrupt payload: fuzzer findings - zset ziplist invalid tail offset (137 ms)
[ok]: benchmark: multi-thread set,get (518 ms)
[ok]: corrupt payload: fuzzer findings - negative reply length (131 ms)
[ok]: PSYNC2 #3899 regression: kill chained replica (0 ms)
[ok]: Stress tester for #3343-alike bugs comp: 0 (8273 ms)
[ok]: benchmark: pipelined full set,get (183 ms)
[ok]: benchmark: arbitrary command (14 ms)
[ok]: Interactive non-TTY CLI: Subscribed mode (415 ms)
[ok]: Non-interactive TTY CLI: Status reply (2 ms)
[ok]: Non-interactive TTY CLI: Integer reply (3 ms)
[ok]: Non-interactive TTY CLI: Bulk reply (7 ms)
[ok]: Non-interactive TTY CLI: Multi-bulk reply (4 ms)
[ok]: benchmark: keyspace length (39 ms)
[ok]: Non-interactive TTY CLI: Read last argument from pipe (9 ms)
[ok]: benchmark: clients idle mode should return error when reached maxclients limit (6 ms)
[ok]: Non-interactive TTY CLI: Read last argument from file (4 ms)
[ok]: Non-interactive TTY CLI: Escape character in JSON mode (23 ms)
[ok]: failover with timeout aborts if replica never catches up (580 ms)
[ok]: Non-interactive non-TTY CLI: Status reply (2 ms)
[ok]: Non-interactive non-TTY CLI: Integer reply (2 ms)
[ok]: Non-interactive non-TTY CLI: Bulk reply (3 ms)
[ok]: Non-interactive non-TTY CLI: Multi-bulk reply (3 ms)
[ok]: corrupt payload: fuzzer findings - valgrind negative malloc (230 ms)
[ok]: failovers can be aborted (40 ms)
[ok]: Non-interactive non-TTY CLI: ASK redirect test (56 ms)
[ok]: Non-interactive non-TTY CLI: Quoted input arguments (3 ms)
[ok]: Non-interactive non-TTY CLI: No accidental unquoting of input arguments (4 ms)
[ok]: Non-interactive non-TTY CLI: Invalid quoted input arguments (5 ms)
[ok]: Non-interactive non-TTY CLI: Read last argument from pipe (7 ms)
[ok]: Non-interactive non-TTY CLI: Read last argument from file (4 ms)
[ok]: Non-interactive non-TTY CLI: Test command-line hinting - latest server (10 ms)
[ok]: Non-interactive non-TTY CLI: Test command-line hinting - no server (4 ms)
[ok]: Non-interactive non-TTY CLI: Test command-line hinting - old server (10 ms)
[37/91 done]: integration/valkey-benchmark (1 seconds)
Testing integration/dismiss-mem
[ok]: corrupt payload: fuzzer findings - valgrind invalid read (233 ms)
[ok]: Replication: commands with many arguments (issue #1221) (7996 ms)
[ok]: corrupt payload: fuzzer findings - empty hash ziplist (223 ms)
[ok]: Fuzzer corrupt restore payloads - sanitize_dump: no (9297 ms)
[ok]: failover aborts if target rejects sync request (439 ms)
[ok]: spopwithcount rewrite srem command (66 ms)
[ok]: corrupt payload: fuzzer findings - stream with no records (133 ms)
[ok]: Test replication partial resync: no backlog (diskless: no, disabled, reconnect: 1) (8082 ms)
[ok]: corrupt payload: fuzzer findings - quicklist ziplist tail followed by extra data which start with 0xff (222 ms)
[ok]: PSYNC2 pingoff: pause replica and promote it (5002 ms)
[ok]: corrupt payload: fuzzer findings - dict init to huge size (225 ms)
[ok]: PSYNC2: Full resync after Master restart when too many key expired (1929 ms)
[ok]: Slave should be able to synchronize with the master (101 ms)
[ok]: corrupt payload: fuzzer findings - huge string (219 ms)
[ok]: dismiss all data types memory (1125 ms)
[38/91 done]: integration/psync2-master-restart (6 seconds)
Testing unit/pubsub
[ok]: corrupt payload: fuzzer findings - stream PEL without consumer (222 ms)
[ok]: Pub/Sub PING on RESP2 (0 ms)
[ok]: Pub/Sub PING on RESP3 (1 ms)
[ok]: PUBLISH/SUBSCRIBE basics (5 ms)
[ok]: PUBLISH/SUBSCRIBE with two clients (1 ms)
[ok]: PUBLISH/SUBSCRIBE after UNSUBSCRIBE without arguments (4 ms)
[ok]: SUBSCRIBE to one channel more than once (1 ms)
[ok]: UNSUBSCRIBE from non-subscribed channels (1 ms)
[ok]: PUBLISH/PSUBSCRIBE basics (8 ms)
[ok]: PUBLISH/PSUBSCRIBE with two clients (2 ms)
[ok]: PUBLISH/PSUBSCRIBE after PUNSUBSCRIBE without arguments (1 ms)
[39/91 done]: integration/failover (5 seconds)
Testing unit/pubsubshard
[ok]: PubSub messages with CLIENT REPLY OFF (91 ms)
[ok]: PUNSUBSCRIBE from non-subscribed channels (1 ms)
[ok]: NUMSUB returns numbers, not strings (#1561) (1 ms)
[ok]: NUMPATs returns the number of unique patterns (1 ms)
[ok]: Mix SUBSCRIBE and PSUBSCRIBE (1 ms)
[ok]: PUNSUBSCRIBE and UNSUBSCRIBE should always reply (0 ms)
[ok]: corrupt payload: fuzzer findings - stream listpack valgrind issue (143 ms)
[ok]: Keyspace notifications: we receive keyspace notifications (42 ms)
[ok]: Keyspace notifications: we receive keyevent notifications (43 ms)
[ok]: Keyspace notifications: we can receive both kind of events (3 ms)
[ok]: Keyspace notifications: we are able to mask events (4 ms)
[ok]: SPUBLISH/SSUBSCRIBE basics (3 ms)
[ok]: Keyspace notifications: general events test (3 ms)
[ok]: SPUBLISH/SSUBSCRIBE with two clients (2 ms)
[ok]: SPUBLISH/SSUBSCRIBE after UNSUBSCRIBE without arguments (2 ms)
[ok]: SSUBSCRIBE to one channel more than once (1 ms)
[ok]: Keyspace notifications: list events test (5 ms)
[ok]: SUNSUBSCRIBE from non-subscribed channels (1 ms)
[ok]: PUBSUB command basics (1 ms)
[ok]: SPUBLISH/SSUBSCRIBE with two clients (1 ms)
[ok]: SPUBLISH/SSUBSCRIBE with PUBLISH/SUBSCRIBE (1 ms)
[ok]: Keyspace notifications: set events test (5 ms)
[ok]: Keyspace notifications: zset events test (3 ms)
[ok]: Keyspace notifications: hash events test (3 ms)
[ok]: Keyspace notifications: stream events test (5 ms)
[ok]: PubSubShard with CLIENT REPLY OFF (90 ms)
[ok]: Replication of SPOP command -- alsoPropagate() API (1350 ms)
[ok]: corrupt payload: fuzzer findings - stream with bad lpFirst (231 ms)
[ok]: Make the old master a replica of the new one and check conditions (1004 ms)
[ok]: Keyspace notifications: expired events (triggered expire) (204 ms)
[ok]: corrupt payload: fuzzer findings - stream listpack lpPrev valgrind issue (131 ms)
[ok]: Keyspace notifications: expired events (background expire) (153 ms)
[ok]: Keyspace notifications: evicted events (2 ms)
[ok]: Keyspace notifications: test CONFIG GET/SET of event flags (1 ms)
[ok]: Keyspace notifications: new key test (1 ms)
[ok]: publish to self inside multi (1 ms)
[ok]: publish to self inside script (0 ms)
[ok]: unsubscribe inside multi, and publish to self (1 ms)
[ok]: Detect write load to master (1001 ms)
[40/91 done]: unit/pubsub (1 seconds)
Testing unit/slowlog
[ok]: corrupt payload: fuzzer findings - stream with non-integer entry id (237 ms)
[ok]: setup replication for following tests (102 ms)
[ok]: publish message to master and receive on replica (2 ms)
[ok]: Dumping an RDB - functions only: no (2184 ms)
[ok]: PSYNC2 #3899 regression: kill first replica (0 ms)
[ok]: SLOWLOG - check that it starts with an empty log (1 ms)
[ok]: First server should have role slave after SLAVEOF (104 ms)
[ok]: Data divergence can happen under default conditions (4 ms)
[ok]: Data divergence is allowed on writable replicas (3 ms)
[ok]: corrupt payload: fuzzer findings - empty quicklist (230 ms)
[ok]: SLOWLOG - only logs commands taking more time than specified (201 ms)
[ok]: SLOWLOG - max entries is correctly handled (7 ms)
[ok]: SLOWLOG - GET optional argument to limit output len works (2 ms)
[ok]: SLOWLOG - RESET subcommand works (0 ms)
[41/91 done]: integration/replication-4 (21 seconds)
Testing unit/scripting
[ok]: corrupt payload: fuzzer findings - empty zset (222 ms)
[ok]: EVAL - Does Lua interpreter replies to our requests? (1 ms)
[ok]: EVAL - Return _G (1 ms)
[ok]: EVAL - Return table with a metatable that raise error (1 ms)
[ok]: SLOWLOG - logged entry sanity check (201 ms)
[ok]: EVAL - Return table with a metatable that call redis (0 ms)
[ok]: SLOWLOG - Certain commands are omitted that contain sensitive information (2 ms)
[ok]: EVAL - Lua integer -> Redis protocol type conversion (1 ms)
[ok]: EVAL - Lua string -> Redis protocol type conversion (1 ms)
[ok]: SLOWLOG - Some commands can redact sensitive fields (1 ms)
[ok]: EVAL - Lua true boolean -> Redis protocol type conversion (0 ms)
[ok]: EVAL - Lua false boolean -> Redis protocol type conversion (0 ms)
[ok]: EVAL - Lua status code reply -> Redis protocol type conversion (1 ms)
[ok]: EVAL - Lua error reply -> Redis protocol type conversion (1 ms)
[ok]: SLOWLOG - Rewritten commands are logged as their original command (3 ms)
[ok]: EVAL - Lua table -> Redis protocol type conversion (1 ms)
[ok]: SLOWLOG - commands with too many arguments are trimmed (1 ms)
[ok]: SLOWLOG - too long arguments are trimmed (0 ms)
[ok]: EVAL - Are the KEYS and ARGV arrays populated correctly? (1 ms)
[ok]: EVAL - is Lua able to call Redis API? (1 ms)
[ok]: EVAL - Redis integer -> Lua type conversion (2 ms)
[ok]: EVAL - Lua number -> Redis integer conversion (1 ms)
[ok]: EVAL - Redis bulk -> Lua type conversion (2 ms)
[ok]: EVAL - Redis multi bulk -> Lua type conversion (0 ms)
[ok]: EVAL - Redis status reply -> Lua type conversion (1 ms)
[ok]: EVAL - Redis error reply -> Lua type conversion (0 ms)
[ok]: EVAL - Redis nil bulk reply -> Lua type conversion (1 ms)
[ok]: EVAL - Is the Lua client using the currently selected DB? (1 ms)
[ok]: EVAL - SELECT inside Lua should not affect the caller (0 ms)
[ok]: EVAL - Scripts do not block on blpop command (1 ms)
[ok]: EVAL - Scripts do not block on brpop command (0 ms)
[ok]: EVAL - Scripts do not block on brpoplpush command (1 ms)
[ok]: EVAL - Scripts do not block on blmove command (0 ms)
[ok]: EVAL - Scripts do not block on bzpopmin command (1 ms)
[ok]: EVAL - Scripts do not block on bzpopmax command (1 ms)
[ok]: EVAL - Scripts do not block on wait (0 ms)
[ok]: EVAL - Scripts can't run XREAD and XREADGROUP with BLOCK option (3 ms)
[ok]: EVAL - Scripts can run non-deterministic commands (1 ms)
[ok]: EVAL - No arguments to redis.call/pcall is considered an error (0 ms)
[ok]: EVAL - redis.call variant raises a Lua error on Redis cmd error (1) (1 ms)
[ok]: EVAL - redis.call variant raises a Lua error on Redis cmd error (1) (0 ms)
[ok]: EVAL - redis.call variant raises a Lua error on Redis cmd error (1) (1 ms)
[ignore]: EVAL - JSON string encoding a string larger than 2GB: large memory flag not provided
[ok]: EVAL - JSON numeric decoding (1 ms)
[ok]: EVAL - JSON string decoding (1 ms)
[ok]: EVAL - JSON smoke test (1 ms)
[ok]: EVAL - cmsgpack can pack double? (1 ms)
[ok]: EVAL - cmsgpack can pack negative int64? (0 ms)
[ok]: dismiss client output buffer (1499 ms)
[ok]: corrupt payload: fuzzer findings - hash with len of 0 (223 ms)
[ok]: SLOWLOG - EXEC is not logged, just executed commands (202 ms)
[ok]: EVAL - cmsgpack pack/unpack smoke test (228 ms)
[ok]: EVAL - cmsgpack can pack and unpack circular references? (0 ms)
[ok]: EVAL - Numerical sanity check from bitop (0 ms)
[ok]: EVAL - Verify minimal bitop functionality (1 ms)
[ok]: EVAL - Able to parse trailing comments (0 ms)
[ok]: EVAL_RO - Successful case (0 ms)
[ok]: EVAL_RO - Cannot run write commands (1 ms)
[ok]: redis.sha1hex() implementation (1 ms)
[ok]: Globals protection reading an undeclared global variable (0 ms)
[ok]: Globals protection setting an undeclared global* (0 ms)
[ok]: lua bit.tohex bug (1 ms)
[ok]: Test an example script DECR_IF_GT (1 ms)
[ok]: dismiss client query buffer (205 ms)
[42/91 done]: unit/pubsubshard (1 seconds)
Testing unit/functions
[ok]: AOF will open a temporary INCR AOF to accumulate data until the first AOFRW success when AOF is dynamically enabled (4739 ms)
[ok]: corrupt payload: fuzzer findings - hash listpack first element too long entry len (224 ms)
[ok]: SLOWLOG - can clean older entries (203 ms)
[ok]: FUNCTION - Basic usage (2 ms)
[ok]: FUNCTION - Load with unknown argument (0 ms)
[ok]: FUNCTION - Create an already exiting library raise error (1 ms)
[ok]: FUNCTION - Create an already exiting library raise error (case insensitive) (1 ms)
[ok]: FUNCTION - Create a library with wrong name format (1 ms)
[ok]: FUNCTION - Create library with unexisting engine (1 ms)
[ok]: FUNCTION - Test uncompiled script (1 ms)
[ok]: FUNCTION - test replace argument (1 ms)
[ok]: FUNCTION - test function case insensitive (0 ms)
[ok]: FUNCTION - test replace argument with failure keeps old libraries (1 ms)
[ok]: FUNCTION - test function delete (1 ms)
[ok]: FUNCTION - test fcall bad arguments (0 ms)
[ok]: FUNCTION - test fcall bad number of keys arguments (1 ms)
[ok]: FUNCTION - test fcall negative number of keys (0 ms)
[ok]: FUNCTION - test delete on not exiting library (0 ms)
[ok]: FUNCTION - test function kill when function is not running (1 ms)
[ok]: FUNCTION - test wrong subcommand (0 ms)
[ok]: FUNCTION - test loading from rdb (4 ms)
[ok]: FUNCTION - test debug reload different options (6 ms)
[ok]: FUNCTION - test debug reload with nosave and noflush (7 ms)
[ok]: FUNCTION - test flushall and flushdb do not clean functions (1 ms)
[ok]: FUNCTION - test function dump and restore (2 ms)
[ok]: FUNCTION - test function dump and restore with flush argument (1 ms)
[ok]: FUNCTION - test function dump and restore with append argument (2 ms)
[ok]: FUNCTION - test function dump and restore with replace argument (2 ms)
[43/91 done]: integration/aof-multi-part (15 seconds)
Testing unit/maxmemory
[ok]: FUNCTION - test function restore with bad payload do not drop existing functions (1 ms)
[ok]: FUNCTION - test function restore with wrong number of arguments (1 ms)
[ok]: FUNCTION - test fcall_ro with write command (1 ms)
[ok]: FUNCTION - test fcall_ro with read only commands (1 ms)
[ok]: FUNCTION - test keys and argv (1 ms)
[ok]: FUNCTION - test command get keys on fcall (0 ms)
[ok]: FUNCTION - test command get keys on fcall_ro (1 ms)
[ok]: corrupt payload: fuzzer findings - stream double free listpack when insert dup node to rax returns 0 (227 ms)
[ok]: Dumping an RDB - functions only: yes (1149 ms)
[ok]: eviction due to output buffers of many MGET clients, client eviction: false (87 ms)
[ok]: EVAL does not leak in the Lua stack (469 ms)
[ok]: Call Redis command with many args from Lua (issue #1764) (1 ms)
[ok]: Number conversion precision test (issue #1118) (1 ms)
[ok]: String containing number precision test (regression of issue #1118) (0 ms)
[ok]: Verify negative arg count is error instead of crash (issue #1842) (0 ms)
[ok]: Scripts can handle commands with incorrect arity (1 ms)
[ok]: Correct handling of reused argv (issue #1939) (0 ms)
[ok]: Functions in the Redis namespace are able to report errors (0 ms)
[ok]: CLUSTER RESET can not be invoke from within a script (1 ms)
[ok]: Script with RESP3 map (1 ms)
[ok]: Scan mode (72 ms)
[ok]: PSYNC2 #3899 regression: kill chained replica (1 ms)
[ok]: Script return recursive object (65 ms)
[ok]: SLOWLOG - can be disabled (403 ms)
[ok]: SLOWLOG - count must be >= -1 (0 ms)
[ok]: SLOWLOG - get all slow logs (1 ms)
[ok]: SLOWLOG - blocking command is reported only after unblocked (2 ms)
[ok]: Script check unpack with massive arguments (25 ms)
[ok]: Script read key with expiration set (1 ms)
[ok]: Script del key with expiration set (0 ms)
[ok]: Script ACL check (1 ms)
[ok]: Binary code loading failed (1 ms)
[ok]: Try trick global protection 1 (0 ms)
[ok]: Try trick global protection 2 (0 ms)
[ok]: Try trick global protection 3 (0 ms)
[ok]: Try trick global protection 4 (0 ms)
[ok]: corrupt payload: fuzzer findings - LCS OOM (225 ms)
[ok]: Try trick readonly table on redis table (0 ms)
[ok]: Try trick readonly table on json table (1 ms)
[ok]: Try trick readonly table on cmsgpack table (0 ms)
[ok]: Try trick readonly table on bit table (1 ms)
[ok]: Test loadfile are not available (0 ms)
[ok]: Test dofile are not available (1 ms)
[ok]: Test print are not available (0 ms)
[ok]: FUNCTION - test function kill (407 ms)
[44/91 done]: unit/slowlog (2 seconds)
Testing unit/introspection
[ok]: corrupt payload: fuzzer findings - gcc asan reports false leak on assert (124 ms)
[ok]: eviction due to input buffer of a dead client, client eviction: false (324 ms)
[ok]: PING (0 ms)
[ok]: CLIENT LIST (0 ms)
[ok]: CLIENT LIST with IDs (1 ms)
[ok]: CLIENT INFO (0 ms)
[ok]: CLIENT KILL with illegal arguments (0 ms)
[ok]: CLIENT KILL SKIPME YES/NO will kill all clients (3 ms)
[ok]: PSYNC2 #3899 regression: kill chained replica (1 ms)
[ok]: corrupt payload: fuzzer findings - lpFind invalid access (123 ms)
[ok]: CLIENT KILL close the client connection during bgsave (89 ms)
[ok]: CLIENT REPLY OFF/ON: disable all commands reply (43 ms)
[ok]: CLIENT REPLY SKIP: skip the next command reply (43 ms)
[ok]: CLIENT REPLY ON: unset SKIP flag (44 ms)
[ok]: MONITOR can log executed commands (1 ms)
[ok]: MONITOR can log commands issued by the scripting engine (1 ms)
[ok]: MONITOR can log commands issued by functions (1 ms)
[ok]: MONITOR supports redacting command arguments (2 ms)
[ok]: MONITOR correctly handles multi-exec cases (2 ms)
[ok]: MONITOR log blocked command only once (5 ms)
[ok]: CLIENT GETNAME should return NIL if name is not assigned (0 ms)
[ok]: CLIENT LIST shows empty fields for unassigned names (1 ms)
[ok]: CLIENT SETNAME does not accept spaces (0 ms)
[ok]: CLIENT SETNAME can assign a name to this connection (0 ms)
[ok]: CLIENT SETNAME can change the name of an existing connection (0 ms)
[ok]: After CLIENT SETNAME, connection can still be closed (0 ms)
[ok]: CLIENT SETINFO can set a library name to this connection (1 ms)
[ok]: CLIENT SETINFO invalid args (1 ms)
[ok]: RESET does NOT clean library name (1 ms)
[ok]: CLIENT SETINFO can clear library name (0 ms)
[ok]: corrupt payload: fuzzer findings - invalid access in ziplist tail prevlen decoding (218 ms)
[ok]: FUNCTION - test script kill not working on function (411 ms)
[ok]: AOF rewrite during write load: RDB preamble=yes (26811 ms)
[ok]: Timedout read-only scripts can be killed by SCRIPT KILL (403 ms)
[ok]: PSYNC2: generate load while killing replication links (5002 ms)
[ok]: PSYNC2: cluster is consistent after load (x = 31073) (0 ms)
[ok]: PSYNC2: total sum of full synchronizations is exactly 4 (3 ms)
[ok]: PSYNC2: --- CYCLE 2 --- (0 ms)
[ok]: PSYNC2: [NEW LAYOUT] Set #1 as master (0 ms)
[ok]: PSYNC2: Set #0 to replicate from #3 (0 ms)
[ok]: PSYNC2: Set #4 to replicate from #2 (0 ms)
[ok]: PSYNC2: Set #2 to replicate from #1 (0 ms)
[ok]: PSYNC2: Set #3 to replicate from #1 (0 ms)
[ok]: PSYNC2: cluster is consistent after failover (1 ms)
[ok]: Timedout read-only scripts can be killed by SCRIPT KILL even when use pcall (133 ms)
[ok]: corrupt payload: fuzzer findings - zset zslInsert with a NAN score (229 ms)
[ok]: dismiss replication backlog (1238 ms)
[ok]: Timedout script does not cause a false dead client (83 ms)
[45/91 done]: integration/dismiss-mem (4 seconds)
Testing unit/introspection-2
[ok]: Timedout script link is still usable after Lua returns (76 ms)
[ok]: FUNCTION - test function kill not working on eval (407 ms)
[ok]: FUNCTION - test function flush (2 ms)
[ok]: FUNCTION - test function wrong argument (0 ms)
[ok]: The microsecond part of the TIME command will not overflow (1 ms)
[ok]: corrupt payload: fuzzer findings - streamLastValidID panic (239 ms)
[ok]: eviction due to output buffers of pubsub, client eviction: false (817 ms)
[ok]: eviction due to output buffers of many MGET clients, client eviction: true (83 ms)
[ok]: corrupt payload: fuzzer findings - valgrind fishy value warning (238 ms)
[ok]: Timedout scripts and unblocked command (348 ms)
[ok]: Connect a replica to the master instance (101 ms)
[ok]: FUNCTION - creation is replicated to replica (2 ms)
[ok]: FUNCTION - call on replica (0 ms)
[ok]: CONFIG save params special case handled properly (945 ms)
[ok]: Timedout scripts that modified data can't be killed by SCRIPT KILL (203 ms)
[ok]: SHUTDOWN NOSAVE can kill a timedout script anyway (7 ms)
[ok]: corrupt payload: fuzzer findings - empty set listpack (236 ms)
[ok]: CONFIG sanity (23 ms)
[ok]: eviction due to input buffer of a dead client, client eviction: true (323 ms)
[ok]: FUNCTION - restore is replicated to replica (203 ms)
[ok]: FUNCTION - delete is replicated to replica (3 ms)
[ok]: FUNCTION - flush is replicated to replica (0 ms)
[ok]: PSYNC2 #3899 regression: kill first replica (1 ms)
[ok]: corrupt payload: fuzzer findings - set with duplicate elements causes sdiff to hang (241 ms)
[46/91 done]: integration/corrupt-dump (15 seconds)
Testing unit/limits
[ok]: Disconnecting the replica from master instance (102 ms)
[ok]: FUNCTION - test replication to replica on rdb phase (0 ms)
[ok]: FUNCTION - test replication to replica on rdb phase info command (0 ms)
[ok]: FUNCTION - create on read only replica (6 ms)
[ok]: FUNCTION - delete on read only replica (0 ms)
[ok]: FUNCTION - function effect is replicated to replica (3 ms)
[ok]: CONFIG REWRITE sanity (263 ms)
[ok]: FUNCTION - modify key space of read only replica (1 ms)
[ok]: Before the replica connects we issue two EVAL commands (1 ms)
[ok]: PSYNC2 #3899 regression: kill first replica (1 ms)
[ok]: Connect a replica to the master instance (103 ms)
[ok]: Replication of script multiple pushes to list with BLPOP (3 ms)
[ok]: Lua scripts using SELECT are replicated correctly (2 ms)
[ok]: eviction due to output buffers of pubsub, client eviction: true (392 ms)
[ok]: PSYNC2 #3899 regression: kill chained replica (2 ms)
[ok]: Without maxmemory small integers are shared (1 ms)
[ok]: With maxmemory and non-LRU policy integers are still shared (0 ms)
[ok]: With maxmemory and LRU policy integers are not shared (1 ms)
[ok]: Connecting as a replica (2130 ms)
[ok]: maxmemory - is the memory limit honoured? (policy allkeys-random) (307 ms)
[ok]: FUNCTION can processes create, delete and flush commands in AOF when doing "debug loadaof" in read-only slaves (346 ms)
[ok]: CONFIG REWRITE handles save and shutdown properly (792 ms)
[ok]: CONFIG SET with multiple args (3 ms)
[ok]: CONFIG SET rollback on set error (6 ms)
[ok]: CONFIG SET rollback on apply error (5 ms)
[ok]: CONFIG SET duplicate configs (1 ms)
[ok]: CONFIG SET set immutable (0 ms)
[ok]: CONFIG GET hidden configs (5 ms)
[ok]: CONFIG GET multiple args (0 ms)
[ok]: valkey-server command line arguments - error cases (93 ms)
[ok]: LIBRARIES - test shared function can access default globals (1 ms)
[ok]: LIBRARIES - usage and code sharing (2 ms)
[ok]: LIBRARIES - test registration failure revert the entire load (1 ms)
[ok]: LIBRARIES - test registration function name collision (0 ms)
[ok]: LIBRARIES - test registration function name collision on same library (0 ms)
[ok]: LIBRARIES - test registration with no argument (0 ms)
[ok]: LIBRARIES - test registration with only name (1 ms)
[ok]: LIBRARIES - test registration with to many arguments (0 ms)
[ok]: LIBRARIES - test registration with no string name (1 ms)
[ok]: LIBRARIES - test registration with wrong name format (0 ms)
[ok]: LIBRARIES - test registration with empty name (0 ms)
[ok]: LIBRARIES - math.random from function load (0 ms)
[ok]: LIBRARIES - redis.call from function load (1 ms)
[ok]: LIBRARIES - redis.setresp from function load (0 ms)
[ok]: LIBRARIES - redis.set_repl from function load (0 ms)
[ok]: LIBRARIES - redis.acl_check_cmd from function load (0 ms)
[ok]: LIBRARIES - malicious access test (0 ms)
[ok]: LIBRARIES - delete removed all functions on library (1 ms)
[ok]: LIBRARIES - register function inside a function (0 ms)
[ok]: LIBRARIES - register library with no functions (0 ms)
[ok]: test various edge cases of repl topology changes with missing pings at the end (3536 ms)
[ok]: Test replication with blocking lists and sorted sets operations (25004 ms)
[ok]: maxmemory - is the memory limit honoured? (policy allkeys-lru) (304 ms)
[ok]: Check if maxclients works refusing connections (921 ms)
[47/91 done]: integration/block-repl (26 seconds)
Testing unit/obuf-limits
[48/91 done]: unit/limits (1 seconds)
Testing unit/bitops
[ok]: valkey-server command line arguments - allow passing option name and option value in the same arg (227 ms)
[ok]: Connect a replica to the master instance (102 ms)
[ok]: Redis.replicate_commands() can be issued anywhere now (0 ms)
[ok]: Redis.set_repl() can be issued before replicate_commands() now (0 ms)
[ok]: Redis.set_repl() don't accept invalid values (2 ms)
[ok]: Test selective replication of certain Redis commands from Lua (3 ms)
[ok]: PRNG is seeded randomly for command replication (0 ms)
[ok]: Using side effects is not a problem with command replication (2 ms)
[ok]: CONFIG SET client-output-buffer-limit (2 ms)
[ok]: BITCOUNT returns 0 against non existing key (1 ms)
[ok]: BITCOUNT returns 0 with out of range indexes (0 ms)
[ok]: BITCOUNT returns 0 with negative indexes where start > end (0 ms)
[ok]: BITCOUNT against test vector #1 (1 ms)
[ok]: BITCOUNT against test vector #2 (1 ms)
[ok]: BITCOUNT against test vector #3 (1 ms)
[ok]: BITCOUNT against test vector #4 (1 ms)
[ok]: BITCOUNT against test vector #5 (1 ms)
[ok]: PSYNC2 #3899 regression: kill first replica (5 ms)
[ok]: maxmemory - is the memory limit honoured? (policy allkeys-lfu) (316 ms)
[ok]: valkey-server command line arguments - wrong usage that we support anyway (238 ms)
[ok]: LIBRARIES - load timeout (502 ms)
[ok]: LIBRARIES - verify global protection on the load run (0 ms)
[ok]: LIBRARIES - named arguments (1 ms)
[ok]: LIBRARIES - named arguments, bad function name (0 ms)
[ok]: LIBRARIES - named arguments, bad callback type (0 ms)
[ok]: LIBRARIES - named arguments, bad description (1 ms)
[ok]: LIBRARIES - named arguments, unknown argument (0 ms)
[ok]: LIBRARIES - named arguments, missing function name (0 ms)
[ok]: LIBRARIES - named arguments, missing callback (0 ms)
[ok]: FUNCTION - test function restore with function name collision (2 ms)
[ok]: FUNCTION - test function list with code (0 ms)
[ok]: FUNCTION - test function list with pattern (0 ms)
[ok]: FUNCTION - test function list wrong argument (0 ms)
[ok]: FUNCTION - test function list with bad argument to library name (0 ms)
[ok]: FUNCTION - test function list withcode multiple times (0 ms)
[ok]: FUNCTION - test function list libraryname multiple times (0 ms)
[ok]: FUNCTION - verify OOM on function load and function restore (0 ms)
[ok]: FUNCTION - verify allow-omm allows running any command (1 ms)
[ok]: BITCOUNT fuzzing without start/end (293 ms)
[ok]: PSYNC2 #3899 regression: kill first replica (0 ms)
[ok]: valkey-server command line arguments - allow option value to use the `--` prefix (239 ms)
[ok]: maxmemory - is the memory limit honoured? (policy volatile-lru) (333 ms)
[ok]: FUNCTION - wrong flags type named arguments (1 ms)
[ok]: FUNCTION - wrong flag type (0 ms)
[ok]: FUNCTION - unknown flag (1 ms)
[ok]: FUNCTION - write script on fcall_ro (0 ms)
[ok]: FUNCTION - write script with no-writes flag (1 ms)
[ok]: FUNCTION - deny oom (0 ms)
[ok]: FUNCTION - deny oom on no-writes function (0 ms)
[ok]: FUNCTION - allow stale (1 ms)
[ok]: FUNCTION - redis version api (1 ms)
[ok]: FUNCTION - function stats (0 ms)
[ok]: FUNCTION - function stats reloaded correctly from rdb (8 ms)
[ok]: FUNCTION - function stats delete library (0 ms)
[ok]: FUNCTION - test function stats on loading failure (1 ms)
[ok]: FUNCTION - function stats cleaned after flush (0 ms)
[ok]: FUNCTION - function test empty engine (0 ms)
[ok]: FUNCTION - function test unknown metadata value (0 ms)
[ok]: FUNCTION - function test no name (0 ms)
[ok]: FUNCTION - function test multiple names (0 ms)
[ok]: FUNCTION - function test name with quotes (1 ms)
[ok]: FUNCTION - trick global protection 1 (0 ms)
[ok]: FUNCTION - test getmetatable on script load (0 ms)
[ok]: Piping raw protocol (1361 ms)
[ok]: Options -X with illegal argument (11 ms)
[49/91 done]: unit/functions (4 seconds)
Testing unit/bitfield
[ok]: DUMP RESTORE with -x option (17 ms)
[ok]: DUMP RESTORE with -X option (16 ms)
[50/91 done]: integration/valkey-cli (9 seconds)
Testing unit/geo
[ok]: valkey-server command line arguments - option name and option value in the same arg and `--` prefix (233 ms)
[ok]: PSYNC2 #3899 regression: kill chained replica (1 ms)
[ok]: BITCOUNT fuzzing with start/end (332 ms)
[ok]: BITCOUNT with start, end (1 ms)
[ok]: BITCOUNT syntax error #1 (0 ms)
[ok]: BITCOUNT syntax error #2 (0 ms)
[ok]: BITCOUNT regression test for github issue #582 (0 ms)
[ok]: BITCOUNT misaligned prefix (1 ms)
[ok]: BITCOUNT misaligned prefix + full words + remainder (0 ms)
[ok]: BITOP NOT (empty string) (0 ms)
[ok]: BITOP NOT (known string) (0 ms)
[ok]: BITOP where dest and target are the same key (0 ms)
[ok]: BITOP AND|OR|XOR don't change the string with single input key (0 ms)
[ok]: BITOP missing key is considered a stream of zero (1 ms)
[ok]: BITOP shorter keys are zero-padded to the key with max length (0 ms)
[ok]: BITFIELD signed SET and GET basics (0 ms)
[ok]: BITFIELD unsigned SET and GET basics (1 ms)
[ok]: BITFIELD signed SET and GET together (0 ms)
[ok]: BITFIELD unsigned with SET, GET and INCRBY arguments (0 ms)
[ok]: BITFIELD with only key as argument (0 ms)
[ok]: BITFIELD #<idx> form (0 ms)
[ok]: BITFIELD basic INCRBY form (0 ms)
[ok]: BITFIELD chaining of multiple commands (1 ms)
[ok]: BITFIELD unsigned overflow wrap (0 ms)
[ok]: BITFIELD unsigned overflow sat (1 ms)
[ok]: BITFIELD signed overflow wrap (4 ms)
[ok]: BITFIELD signed overflow sat (0 ms)
[ok]: maxmemory - is the memory limit honoured? (policy volatile-lfu) (305 ms)
[ok]: GEO with wrong type src key (5 ms)
[ok]: GEO with non existing src key (1 ms)
[ok]: GEO BYLONLAT with empty search (2 ms)
[ok]: GEO BYMEMBER with non existing member (1 ms)
[ok]: GEOADD create (1 ms)
[ok]: GEOADD update (0 ms)
[ok]: GEOADD update with CH option (1 ms)
[ok]: GEOADD update with NX option (1 ms)
[ok]: GEOADD update with XX option (1 ms)
[ok]: GEOADD update with CH NX option (0 ms)
[ok]: GEOADD update with CH XX option (0 ms)
[ok]: GEOADD update with XX NX option will return syntax error (1 ms)
[ok]: GEOADD update with invalid option (0 ms)
[ok]: GEOADD invalid coordinates (1 ms)
[ok]: GEOADD multi add (0 ms)
[ok]: Check geoset values (1 ms)
[ok]: GEORADIUS simple (sorted) (0 ms)
[ok]: GEORADIUS_RO simple (sorted) (0 ms)
[ok]: GEOSEARCH simple (sorted) (0 ms)
[ok]: GEOSEARCH FROMLONLAT and FROMMEMBER cannot exist at the same time (1 ms)
[ok]: GEOSEARCH FROMLONLAT and FROMMEMBER one must exist (0 ms)
[ok]: GEOSEARCH BYRADIUS and BYBOX cannot exist at the same time (1 ms)
[ok]: GEOSEARCH BYRADIUS and BYBOX one must exist (0 ms)
[ok]: GEOSEARCH with STOREDIST option (1 ms)
[ok]: GEORADIUS withdist (sorted) (0 ms)
[ok]: GEOSEARCH withdist (sorted) (1 ms)
[ok]: GEORADIUS with COUNT (0 ms)
[ok]: GEORADIUS with multiple WITH* tokens (1 ms)
[ok]: GEORADIUS with ANY not sorted by default (0 ms)
[ok]: GEORADIUS with ANY sorted by ASC (0 ms)
[ok]: GEORADIUS with ANY but no COUNT (0 ms)
[ok]: GEORADIUS with COUNT but missing integer argument (0 ms)
[ok]: GEORADIUS with COUNT DESC (1 ms)
[ok]: GEORADIUS HUGE, issue #2767 (0 ms)
[ok]: GEORADIUSBYMEMBER simple (sorted) (0 ms)
[ok]: GEORADIUSBYMEMBER_RO simple (sorted) (1 ms)
[ok]: GEORADIUSBYMEMBER search areas contain satisfied points in oblique direction (2 ms)
[ok]: GEORADIUSBYMEMBER crossing pole search (1 ms)
[ok]: GEOSEARCH FROMMEMBER simple (sorted) (0 ms)
[ok]: GEOSEARCH vs GEORADIUS (2 ms)
[ok]: GEOSEARCH non square, long and narrow (1 ms)
[ok]: GEOSEARCH corner point test (1 ms)
[ok]: GEORADIUSBYMEMBER withdist (sorted) (0 ms)
[ok]: GEOHASH is able to return geohash strings (1 ms)
[ok]: GEOHASH with only key as argument (1 ms)
[ok]: GEOPOS simple (1 ms)
[ok]: GEOPOS missing element (1 ms)
[ok]: GEOPOS with only key as argument (1 ms)
[ok]: GEODIST simple & unit (1 ms)
[ok]: GEODIST missing elements (1 ms)
[ok]: GEORADIUS STORE option: syntax error (1 ms)
[ok]: GEOSEARCHSTORE STORE option: syntax error (1 ms)
[ok]: GEORANGE STORE option: incompatible options (1 ms)
[ok]: GEORANGE STORE option: plain usage (1 ms)
[ok]: GEORADIUSBYMEMBER STORE/STOREDIST option: plain usage (2 ms)
[ok]: GEOSEARCHSTORE STORE option: plain usage (1 ms)
[ok]: GEORANGE STOREDIST option: plain usage (1 ms)
[ok]: GEOSEARCHSTORE STOREDIST option: plain usage (1 ms)
[ok]: GEORANGE STOREDIST option: COUNT ASC and DESC (1 ms)
[ok]: GEOSEARCH the box spans -180° or 180° (2 ms)
[ok]: GEOSEARCH with small distance (0 ms)
[ok]: BITOP and fuzzing (179 ms)
[ok]: PSYNC2 #3899 regression: kill first replica (0 ms)
[ok]: PSYNC2 #3899 regression: kill chained replica (1 ms)
[ok]: test RESP2/2 big number protocol parsing (0 ms)
[ok]: test RESP2/2 malformed big number protocol parsing (0 ms)
[ok]: test RESP2/2 map protocol parsing (1 ms)
[ok]: test RESP2/2 set protocol parsing (1 ms)
[ok]: test RESP2/2 double protocol parsing (1 ms)
[ok]: test RESP2/2 null protocol parsing (0 ms)
[ok]: test RESP2/2 verbatim protocol parsing (1 ms)
[ok]: test RESP2/2 true protocol parsing (0 ms)
[ok]: test RESP2/2 false protocol parsing (0 ms)
[ok]: test RESP2/3 big number protocol parsing (0 ms)
[ok]: test RESP2/3 malformed big number protocol parsing (0 ms)
[ok]: test RESP2/3 map protocol parsing (1 ms)
[ok]: test RESP2/3 set protocol parsing (1 ms)
[ok]: test RESP2/3 double protocol parsing (0 ms)
[ok]: test RESP2/3 null protocol parsing (0 ms)
[ok]: test RESP2/3 verbatim protocol parsing (0 ms)
[ok]: test RESP2/3 true protocol parsing (1 ms)
[ok]: test RESP2/3 false protocol parsing (1 ms)
[ok]: test RESP3/2 big number protocol parsing (1 ms)
[ok]: test RESP3/2 malformed big number protocol parsing (1 ms)
[ok]: test RESP3/2 map protocol parsing (0 ms)
[ok]: test RESP3/2 set protocol parsing (0 ms)
[ok]: test RESP3/2 double protocol parsing (0 ms)
[ok]: test RESP3/2 null protocol parsing (0 ms)
[ok]: test RESP3/2 verbatim protocol parsing (1 ms)
[ok]: test RESP3/2 true protocol parsing (1 ms)
[ok]: test RESP3/2 false protocol parsing (0 ms)
[ok]: test RESP3/3 big number protocol parsing (1 ms)
[ok]: test RESP3/3 malformed big number protocol parsing (0 ms)
[ok]: test RESP3/3 map protocol parsing (1 ms)
[ok]: test RESP3/3 set protocol parsing (0 ms)
[ok]: test RESP3/3 double protocol parsing (0 ms)
[ok]: test RESP3/3 null protocol parsing (0 ms)
[ok]: test RESP3/3 verbatim protocol parsing (0 ms)
[ok]: test RESP3/3 true protocol parsing (1 ms)
[ok]: test RESP3/3 false protocol parsing (0 ms)
[ok]: test resp3 attribute protocol parsing (0 ms)
[ok]: Script block the time during execution (11 ms)
[ok]: Script delete the expired key (4 ms)
[ok]: TIME command using cached time (10 ms)
[ok]: TTL, TYPE and EXISTS do not alter the last access time of a key (3003 ms)
[ok]: maxmemory - is the memory limit honoured? (policy volatile-random) (326 ms)
[ok]: Script block the time in some expiration related commands (89 ms)
[ok]: RESTORE expired keys with expiration time (11 ms)
[ok]: BITFIELD overflow detection fuzzing (432 ms)
[ok]: BITOP or fuzzing (288 ms)
[ok]: PSYNC2 #3899 regression: kill chained replica (0 ms)
[ok]: BITOP xor fuzzing (154 ms)
[ok]: BITOP NOT fuzzing (24 ms)
[ok]: BITOP with integer encoded source objects (0 ms)
[ok]: BITOP with non string source key (1 ms)
[ok]: BITOP with empty string after non empty string (issue #529) (0 ms)
[ok]: BITPOS bit=0 with empty key returns 0 (0 ms)
[ok]: BITPOS bit=1 with empty key returns -1 (1 ms)
[ok]: BITPOS bit=0 with string less than 1 word works (0 ms)
[ok]: BITPOS bit=1 with string less than 1 word works (0 ms)
[ok]: BITPOS bit=0 starting at unaligned address (1 ms)
[ok]: BITPOS bit=1 starting at unaligned address (0 ms)
[ok]: BITPOS bit=0 unaligned+full word+reminder (1 ms)
[ok]: BITPOS bit=1 unaligned+full word+reminder (2 ms)
[ok]: EVAL - Does Lua interpreter replies to our requests? (0 ms)
[ok]: EVAL - Return _G (1 ms)
[ok]: EVAL - Return table with a metatable that raise error (0 ms)
[ok]: BITPOS bit=1 returns -1 if string is all 0 bits (4 ms)
[ok]: EVAL - Return table with a metatable that call redis (0 ms)
[ok]: BITPOS bit=0 works with intervals (1 ms)
[ok]: EVAL - Lua integer -> Redis protocol type conversion (1 ms)
[ok]: BITPOS bit=1 works with intervals (1 ms)
[ok]: EVAL - Lua string -> Redis protocol type conversion (0 ms)
[ok]: BITPOS bit=0 changes behavior if end is given (0 ms)
[ok]: EVAL - Lua true boolean -> Redis protocol type conversion (2 ms)
[ok]: EVAL - Lua false boolean -> Redis protocol type conversion (1 ms)
[ok]: EVAL - Lua status code reply -> Redis protocol type conversion (0 ms)
[ok]: EVAL - Lua error reply -> Redis protocol type conversion (1 ms)
[ok]: SETBIT/BITFIELD only increase dirty when the value changed (5 ms)
[ok]: EVAL - Lua table -> Redis protocol type conversion (5 ms)
[ok]: EVAL - Are the KEYS and ARGV arrays populated correctly? (1 ms)
[ok]: EVAL - is Lua able to call Redis API? (0 ms)
[ok]: EVAL - Redis integer -> Lua type conversion (1 ms)
[ok]: EVAL - Lua number -> Redis integer conversion (0 ms)
[ok]: EVAL - Redis bulk -> Lua type conversion (1 ms)
[ok]: EVAL - Redis multi bulk -> Lua type conversion (1 ms)
[ok]: EVAL - Redis status reply -> Lua type conversion (0 ms)
[ok]: EVAL - Redis error reply -> Lua type conversion (1 ms)
[ok]: EVAL - Redis nil bulk reply -> Lua type conversion (0 ms)
[ok]: EVAL - Is the Lua client using the currently selected DB? (4 ms)
[ok]: EVAL - SELECT inside Lua should not affect the caller (1 ms)
[ok]: EVAL - Scripts do not block on blpop command (0 ms)
[ok]: EVAL - Scripts do not block on brpop command (0 ms)
[ok]: EVAL - Scripts do not block on brpoplpush command (1 ms)
[ok]: EVAL - Scripts do not block on blmove command (0 ms)
[ok]: EVAL - Scripts do not block on bzpopmin command (1 ms)
[ok]: EVAL - Scripts do not block on bzpopmax command (1 ms)
[ok]: EVAL - Scripts do not block on wait (0 ms)
[ok]: EVAL - Scripts can't run XREAD and XREADGROUP with BLOCK option (6 ms)
[ok]: EVAL - Scripts can run non-deterministic commands (1 ms)
[ok]: EVAL - No arguments to redis.call/pcall is considered an error (0 ms)
[ok]: EVAL - redis.call variant raises a Lua error on Redis cmd error (1) (0 ms)
[ok]: EVAL - redis.call variant raises a Lua error on Redis cmd error (1) (1 ms)
[ok]: EVAL - redis.call variant raises a Lua error on Redis cmd error (1) (0 ms)
[ignore]: EVAL - JSON string encoding a string larger than 2GB: large memory flag not provided
[ok]: EVAL - JSON numeric decoding (0 ms)
[ok]: EVAL - JSON string decoding (0 ms)
[ok]: EVAL - JSON smoke test (1 ms)
[ok]: EVAL - cmsgpack can pack double? (0 ms)
[ok]: EVAL - cmsgpack can pack negative int64? (0 ms)
[ok]: BITPOS bit=1 fuzzy testing using SETBIT (147 ms)
[ok]: maxmemory - is the memory limit honoured? (policy volatile-ttl) (552 ms)
[ok]: BITFIELD overflow wrap fuzzing (489 ms)
[ok]: BITFIELD regression for #3221 (1 ms)
[ok]: BITFIELD regression for #3564 (2 ms)
[ok]: BITFIELD_RO with only key as argument (0 ms)
[ok]: BITFIELD_RO fails when write option is used (1 ms)
[ok]: BITPOS bit=0 fuzzy testing using SETBIT (214 ms)
[ok]: valkey-server command line arguments - save with empty input (1234 ms)
[ok]: BITPOS/BITCOUNT fuzzy testing using SETBIT (173 ms)
[ok]: EVAL - cmsgpack pack/unpack smoke test (593 ms)
[ok]: EVAL - cmsgpack can pack and unpack circular references? (2 ms)
[ok]: EVAL - Numerical sanity check from bitop (1 ms)
[ok]: EVAL - Verify minimal bitop functionality (0 ms)
[51/91 done]: unit/bitops (3 seconds)
Testing unit/memefficiency
[ok]: EVAL - Able to parse trailing comments (1 ms)
[ok]: EVAL_RO - Successful case (1 ms)
[ok]: EVAL_RO - Cannot run write commands (4 ms)
[ok]: redis.sha1hex() implementation (2 ms)
[ok]: Globals protection reading an undeclared global variable (1 ms)
[ok]: Globals protection setting an undeclared global* (1 ms)
[ok]: lua bit.tohex bug (1 ms)
[ok]: Test an example script DECR_IF_GT (4 ms)
[ok]: BITFIELD: setup slave (102 ms)
[ok]: BITFIELD: write on master, read on slave (1 ms)
[ok]: BITFIELD_RO with only key as argument on read-only replica (1 ms)
[ok]: BITFIELD_RO fails when write option is used on read-only replica (0 ms)
[ok]: maxmemory - only allkeys-* should remove non-volatile keys (allkeys-random) (462 ms)
[ok]: valkey-server command line arguments - take one bulk string with spaces for MULTI_ARG configs parsing (252 ms)
[ok]: PSYNC2 #3899 regression: kill first replica (1 ms)
[52/91 done]: unit/bitfield (2 seconds)
Testing unit/hyperloglog
[ok]: cannot modify protected configuration - no (0 ms)
[ok]: Memory efficiency with values in range 32 (358 ms)
[ok]: maxmemory - only allkeys-* should remove non-volatile keys (allkeys-lru) (432 ms)
[ok]: cannot modify protected configuration - local (17 ms)
[ok]: PSYNC2: generate load while killing replication links (5000 ms)
[ok]: PSYNC2: cluster is consistent after load (x = 56741) (0 ms)
[ok]: PSYNC2: total sum of full synchronizations is exactly 4 (1 ms)
[ok]: PSYNC2: --- CYCLE 3 --- (0 ms)
[ok]: PSYNC2: [NEW LAYOUT] Set #0 as master (0 ms)
[ok]: HyperLogLog self test passes (366 ms)
[ok]: PFADD without arguments creates an HLL value (0 ms)
[ok]: Approximated cardinality after creation is zero (0 ms)
[ok]: PFADD returns 1 when at least 1 reg was modified (0 ms)
[ok]: PFADD returns 0 when no reg was modified (0 ms)
[ok]: PFADD works with empty string (regression) (0 ms)
[ok]: PFCOUNT returns approximated cardinality of set (1 ms)
[ok]: PSYNC2: Set #4 to replicate from #0 (1 ms)
[ok]: Memory efficiency with values in range 64 (307 ms)
[ok]: PSYNC2 #3899 regression: kill chained replica (1 ms)
[ok]: maxmemory - only allkeys-* should remove non-volatile keys (volatile-lru) (447 ms)
[ok]: HyperLogLogs are promote from sparse to dense (239 ms)
[ok]: Change hll-sparse-max-bytes (0 ms)
[ok]: Hyperloglog promote to dense well in different hll-sparse-max-bytes (27 ms)
[ok]: Memory efficiency with values in range 128 (300 ms)
[ok]: ziplist implementation: value encoding and backlink (9813 ms)
[ok]: EVAL does not leak in the Lua stack (1344 ms)
[ok]: Call Redis command with many args from Lua (issue #1764) (1 ms)
[ok]: Number conversion precision test (issue #1118) (0 ms)
[ok]: String containing number precision test (regression of issue #1118) (1 ms)
[ok]: Verify negative arg count is error instead of crash (issue #1842) (0 ms)
[ok]: Scripts can handle commands with incorrect arity (1 ms)
[ok]: Correct handling of reused argv (issue #1939) (1 ms)
[ok]: Functions in the Redis namespace are able to report errors (0 ms)
[ok]: CLUSTER RESET can not be invoke from within a script (1 ms)
[ok]: Script with RESP3 map (2 ms)
[ok]: maxmemory - only allkeys-* should remove non-volatile keys (volatile-random) (444 ms)
[ok]: Memory efficiency with values in range 1024 (335 ms)
[ok]: Script return recursive object (101 ms)
[ok]: Chained replicas disconnect when replica re-connect with the same master (2931 ms)
[ok]: Script check unpack with massive arguments (27 ms)
[ok]: Script read key with expiration set (0 ms)
[ok]: Script del key with expiration set (1 ms)
[ok]: Script ACL check (1 ms)
[ok]: Binary code loading failed (1 ms)
[ok]: Try trick global protection 1 (0 ms)
[ok]: Try trick global protection 2 (0 ms)
[ok]: Try trick global protection 3 (0 ms)
[ok]: Try trick global protection 4 (0 ms)
[ok]: Try trick readonly table on redis table (1 ms)
[ok]: Try trick readonly table on json table (0 ms)
[ok]: Try trick readonly table on cmsgpack table (0 ms)
[ok]: Try trick readonly table on bit table (1 ms)
[ok]: Test loadfile are not available (0 ms)
[ok]: Test dofile are not available (1 ms)
[ok]: Test print are not available (0 ms)
[ok]: HyperLogLog sparse encoding stress test (660 ms)
[ok]: Corrupted sparse HyperLogLogs are detected: Additional at tail (0 ms)
[ok]: Corrupted sparse HyperLogLogs are detected: Broken magic (1 ms)
[ok]: Corrupted sparse HyperLogLogs are detected: Invalid encoding (0 ms)
[ok]: Corrupted dense HyperLogLogs are detected: Wrong length (0 ms)
[ok]: PSYNC2: Set #1 to replicate from #2 (0 ms)
[ok]: maxmemory - only allkeys-* should remove non-volatile keys (volatile-ttl) (450 ms)
[ok]: Client output buffer hard limit is enforced (3826 ms)
[ok]: config during loading (1125 ms)
[ok]: PSYNC2 #3899 regression: kill chained replica (0 ms)
[ok]: TOUCH alters the last access time of a key (3003 ms)
[ok]: Timedout read-only scripts can be killed by SCRIPT KILL (403 ms)
[ok]: Fuzzer corrupt restore payloads - sanitize_dump: yes (10055 ms)
[53/91 done]: integration/corrupt-dump-fuzzer (20 seconds)
Testing unit/lazyfree
[ok]: Timedout read-only scripts can be killed by SCRIPT KILL even when use pcall (115 ms)
[ok]: maxmemory - policy volatile-lru should only remove volatile keys. (345 ms)
[ok]: CONFIG REWRITE handles rename-command properly (342 ms)
[ok]: PSYNC2 #3899 regression: kill chained replica (1 ms)
[ok]: Timedout script does not cause a false dead client (222 ms)
[ok]: Timedout script link is still usable after Lua returns (62 ms)
[ok]: UNLINK can reclaim memory in background (271 ms)
[54/91 done]: integration/psync2-pingoff (16 seconds)
Testing unit/wait
[ok]: Memory efficiency with values in range 16384 (1130 ms)
[ok]: maxmemory - policy volatile-lfu should only remove volatile keys. (357 ms)
[55/91 done]: unit/memefficiency (2 seconds)
Testing unit/pause
[ok]: FLUSHDB ASYNC can reclaim memory in background (231 ms)
[ok]: lazy free a stream with all types of metadata (59 ms)
[ok]: lazy free a stream with deleted cgroup (2 ms)
[ok]: PSYNC2: Set #2 to replicate from #4 (0 ms)
[ok]: Test read commands are not blocked by client pause (2 ms)
[56/91 done]: unit/lazyfree (0 seconds)
Testing unit/querybuf
[ok]: Timedout scripts and unblocked command (369 ms)
[ok]: Setup slave (101 ms)
[ok]: WAIT out of range timeout (milliseconds) (0 ms)
[ok]: WAIT should acknowledge 1 additional copy of the data (1 ms)
[ok]: maxmemory - policy volatile-random should only remove volatile keys. (402 ms)
[ok]: CONFIG REWRITE handles alias config properly (785 ms)
[57/91 done]: unit/introspection (8 seconds)
Testing unit/tls
[ok]: Timedout scripts that modified data can't be killed by SCRIPT KILL (203 ms)
[ok]: SHUTDOWN NOSAVE can kill a timedout script anyway (2 ms)
[ok]: Test old pause-all takes precedence over new pause-write (less restrictive) (343 ms)
[ok]: Test replication partial resync: ok after delay (diskless: no, disabled, reconnect: 1) (9420 ms)
[58/91 done]: unit/tls (0 seconds)
Testing unit/tracking
[ok]: Test new pause time is smaller than old one, then old time preserved (101 ms)
[ok]: Test write commands are paused by RO (1 ms)
[ok]: Test special commands are paused by RO (1 ms)
[ok]: Test read/admin multi-execs are not blocked by pause RO (1 ms)
[ok]: Test write multi-execs are blocked by pause RO (1 ms)
[ok]: Test scripts are blocked by pause RO (0 ms)
[ok]: Test RO scripts are not blocked by pause RO (1 ms)
[ok]: Test read-only scripts in multi-exec are not blocked by pause RO (1 ms)
[ok]: Test write scripts in multi-exec are blocked by pause RO (1 ms)
[ok]: Test may-replicate commands are rejected in RO scripts (0 ms)
[ok]: Test multiple clients can be queued up and unblocked (1 ms)
[ok]: Test clients with syntax errors will get responses immediately (1 ms)
[ok]: Before the replica connects we issue two EVAL commands (0 ms)
[ok]: Test both active and passive expires are skipped during client pause (102 ms)
[ok]: Clients are able to enable tracking and redirect it (0 ms)
[ok]: Test that client pause starts at the end of a transaction (1 ms)
[ok]: The other connection is able to get invalidations (1 ms)
[ok]: maxmemory - policy volatile-ttl should only remove volatile keys. (368 ms)
[ok]: The client is now able to disable tracking (0 ms)
[ok]: Clients can enable the BCAST mode with the empty prefix (0 ms)
[ok]: The connection gets invalidation messages about all the keys (0 ms)
[ok]: Clients can enable the BCAST mode with prefixes (2 ms)
[ok]: Adding prefixes to BCAST mode works (0 ms)
[ok]: Tracking NOLOOP mode in standard mode works (0 ms)
[ok]: Tracking NOLOOP mode in BCAST mode works (1 ms)
[ok]: Connect a replica to the master instance (101 ms)
[ok]: Replication of script multiple pushes to list with BLPOP (1 ms)
[ok]: Lua scripts using SELECT are replicated correctly (1 ms)
[ok]: Test when replica paused, offset would not grow (2 ms)
[ok]: Test replica offset would grow after unpause (1 ms)
[ok]: Test the randomkey command will not cause the server to get into an infinite loop during the client pause write (6 ms)
[59/91 done]: unit/pause (1 seconds)
Testing unit/oom-score-adj
[ok]: Slave should be able to synchronize with the master (101 ms)
[ok]: Detect write load to master (0 ms)
[ok]: PSYNC2: Set #3 to replicate from #0 (1 ms)
[ok]: CONFIG SET oom-score-adj works as expected (8 ms)
[ok]: CONFIG SET oom-score-adj handles configuration failures (1 ms)
[ok]: CONFIG SET oom-score-adj-values doesn't touch proc when disabled (1 ms)
[ok]: CONFIG SET oom score restored on disable (0 ms)
[ok]: CONFIG SET oom score relative and absolute (1 ms)
[ok]: CONFIG SET out-of-range oom score (0 ms)
[60/91 done]: unit/oom-score-adj (0 seconds)
Testing unit/shutdown
[ok]: WAIT should not acknowledge 2 additional copies of the data (1081 ms)
[ok]: Temp rdb will be deleted if we use bg_unlink when shutdown (114 ms)
[ok]: SHUTDOWN ABORT can cancel SIGTERM (12 ms)
[ok]: Tracking gets notification of expired keys (1001 ms)
[ok]: Temp rdb will be deleted in signal handle (85 ms)
[ok]: Tracking gets notification of lazy expired keys (101 ms)
[ok]: HELLO 3 reply is correct (0 ms)
[ok]: HELLO without protover (1 ms)
[ok]: RESP3 based basic invalidation (0 ms)
[ok]: RESP3 tracking redirection (1 ms)
[ok]: Invalidations of previous keys can be redirected after switching to RESP3 (0 ms)
[ok]: Invalidations of new keys can be redirected after switching to RESP3 (1 ms)
[ok]: Invalid keys should not be tracked for scripts in NOLOOP mode (0 ms)
[ok]: Tracking only occurs for scripts when a command calls a read-only command (2 ms)
[ok]: RESP3 Client gets tracking-redir-broken push message after cached key changed when rediretion client is terminated (1 ms)
[ok]: Different clients can redirect to the same connection (0 ms)
[ok]: Different clients using different protocols can track the same key (1 ms)
[ok]: No invalidation message when using OPTIN option (1 ms)
[ok]: Invalidation message sent when using OPTIN option with CLIENT CACHING yes (0 ms)
[ok]: Invalidation message sent when using OPTOUT option (1 ms)
[ok]: No invalidation message when using OPTOUT option with CLIENT CACHING no (0 ms)
[ok]: Able to redirect to a RESP3 client (1 ms)
[ok]: After switching from normal tracking to BCAST mode, no invalidation message is produced for pre-BCAST keys (1 ms)
[ok]: BCAST with prefix collisions throw errors (1 ms)
[ok]: hdel deliver invalidate message after response in the same connection (1 ms)
[ok]: RDB save will be failed in shutdown (2 ms)
[ok]: Connect a replica to the master instance (102 ms)
[ok]: Redis.replicate_commands() can be issued anywhere now (0 ms)
[ok]: Redis.set_repl() can be issued before replicate_commands() now (0 ms)
[ok]: Redis.set_repl() don't accept invalid values (0 ms)
[ok]: Test selective replication of certain Redis commands from Lua (2 ms)
[ok]: PRNG is seeded randomly for command replication (0 ms)
[ok]: Using side effects is not a problem with command replication (0 ms)
[ok]: Tracking invalidation message is not interleaved with multiple keys response (111 ms)
[ok]: Tracking invalidation message is not interleaved with transaction response (1 ms)
[ok]: Tracking invalidation message of eviction keys should be before response (4 ms)
[ok]: Unblocked BLMOVE gets notification after response (1 ms)
[ok]: SHUTDOWN will abort if rdb save failed on signal (109 ms)
[ok]: SHUTDOWN will abort if rdb save failed on shutdown command (2 ms)
[ok]: SHUTDOWN can proceed if shutdown command was with nosave (2 ms)
[ok]: Clean up rdb same named folder (0 ms)
[ok]: Tracking gets notification on tracking table key eviction (70 ms)
[ok]: Invalidation message received for flushall (2 ms)
[ok]: Invalidation message received for flushdb (2 ms)
[ok]: Test ASYNC flushall (3 ms)
[ok]: flushdb tracking invalidation message is not interleaved with transaction response (2 ms)
[ok]: PSYNC2: cluster is consistent after failover (1 ms)
[ok]: SHUTDOWN SIGTERM will abort if there's an initial AOFRW - default (100 ms)
[ok]: Server is able to evacuate enough keys when num of keys surpasses limit by more than defined initial effort (195 ms)
[ok]: Tracking info is correct (2 ms)
[ok]: CLIENT GETREDIR provides correct client id (0 ms)
[ok]: CLIENT TRACKINGINFO provides reasonable results when tracking off (0 ms)
[ok]: CLIENT TRACKINGINFO provides reasonable results when tracking on (1 ms)
[ok]: CLIENT TRACKINGINFO provides reasonable results when tracking on with options (0 ms)
[ok]: CLIENT TRACKINGINFO provides reasonable results when tracking optin (0 ms)
[ok]: CLIENT TRACKINGINFO provides reasonable results when tracking optout (1 ms)
[ok]: CLIENT TRACKINGINFO provides reasonable results when tracking bcast mode (1 ms)
[ok]: CLIENT TRACKINGINFO provides reasonable results when tracking redir broken (3 ms)
[ok]: Regression test for #11715 (2 ms)
[ok]: RESP3 based basic invalidation with client reply off (2 ms)
[ok]: RESP2 based basic invalidation with client reply off (45 ms)
[ok]: RESP3 based basic redirect invalidation with client reply off (1 ms)
[ok]: RESP3 based basic tracking-redir-broken with client reply off (2 ms)
[ok]: PSYNC2 #3899 regression: kill chained replica (1 ms)
[61/91 done]: unit/shutdown (1 seconds)
Testing unit/networking
[ok]: query buffer resized correctly (2055 ms)
[ok]: query buffer resized correctly when not idle (33 ms)
[ok]: WAIT should not acknowledge 1 additional copy if slave is blocked (1105 ms)
[ok]: TOUCH alters the last access time of a key in no-touch mode (3006 ms)
[ok]: Coverage: Basic CLIENT CACHING (1 ms)
[ok]: Coverage: Basic CLIENT REPLY (0 ms)
[ok]: Coverage: Basic CLIENT TRACKINGINFO (0 ms)
[ok]: Coverage: Basic CLIENT GETREDIR (0 ms)
[ok]: CONFIG SET port number (222 ms)
[62/91 done]: unit/tracking (2 seconds)
Testing unit/client-eviction
[ok]: client evicted due to large argv (83 ms)
[ok]: client evicted due to large query buf (24 ms)
[ok]: test RESP2/2 big number protocol parsing (1 ms)
[ok]: test RESP2/2 malformed big number protocol parsing (1 ms)
[ok]: test RESP2/2 map protocol parsing (0 ms)
[ok]: test RESP2/2 set protocol parsing (1 ms)
[ok]: test RESP2/2 double protocol parsing (0 ms)
[ok]: test RESP2/2 null protocol parsing (1 ms)
[ok]: client evicted due to percentage of maxmemory (7 ms)
[ok]: test RESP2/2 verbatim protocol parsing (1 ms)
[ok]: test RESP2/2 true protocol parsing (1 ms)
[ok]: test RESP2/2 false protocol parsing (1 ms)
[ok]: test RESP2/3 big number protocol parsing (1 ms)
[ok]: test RESP2/3 malformed big number protocol parsing (1 ms)
[ok]: test RESP2/3 map protocol parsing (1 ms)
[ok]: test RESP2/3 set protocol parsing (1 ms)
[ok]: test RESP2/3 double protocol parsing (1 ms)
[ok]: test RESP2/3 null protocol parsing (1 ms)
[ok]: test RESP2/3 verbatim protocol parsing (0 ms)
[ok]: test RESP2/3 true protocol parsing (0 ms)
[ok]: test RESP2/3 false protocol parsing (1 ms)
[ok]: test RESP3/2 big number protocol parsing (1 ms)
[ok]: test RESP3/2 malformed big number protocol parsing (1 ms)
[ok]: test RESP3/2 map protocol parsing (0 ms)
[ok]: test RESP3/2 set protocol parsing (1 ms)
[ok]: test RESP3/2 double protocol parsing (0 ms)
[ok]: test RESP3/2 null protocol parsing (0 ms)
[ok]: test RESP3/2 verbatim protocol parsing (1 ms)
[ok]: test RESP3/2 true protocol parsing (0 ms)
[ok]: test RESP3/2 false protocol parsing (0 ms)
[ok]: test RESP3/3 big number protocol parsing (1 ms)
[ok]: test RESP3/3 malformed big number protocol parsing (0 ms)
[ok]: test RESP3/3 map protocol parsing (1 ms)
[ok]: test RESP3/3 set protocol parsing (1 ms)
[ok]: test RESP3/3 double protocol parsing (0 ms)
[ok]: test RESP3/3 null protocol parsing (1 ms)
[ok]: test RESP3/3 verbatim protocol parsing (0 ms)
[ok]: test RESP3/3 true protocol parsing (1 ms)
[ok]: test RESP3/3 false protocol parsing (0 ms)
[ok]: test resp3 attribute protocol parsing (1 ms)
[ok]: Script block the time during execution (11 ms)
[ok]: Script delete the expired key (3 ms)
[ok]: TIME command using cached time (11 ms)
[ok]: Script block the time in some expiration related commands (85 ms)
[ok]: RESTORE expired keys with expiration time (10 ms)
[ok]: client evicted due to large multi buf (207 ms)
[ok]: EVAL - Does Lua interpreter replies to our requests? (0 ms)
[ok]: EVAL - Return _G (0 ms)
[ok]: EVAL - Return table with a metatable that raise error (1 ms)
[ok]: client evicted due to watched key list (164 ms)
[ok]: EVAL - Return table with a metatable that call redis (0 ms)
[ok]: EVAL - Lua integer -> Redis protocol type conversion (0 ms)
[ok]: EVAL - Lua string -> Redis protocol type conversion (0 ms)
[ok]: EVAL - Lua true boolean -> Redis protocol type conversion (0 ms)
[ok]: EVAL - Lua false boolean -> Redis protocol type conversion (0 ms)
[ok]: EVAL - Lua status code reply -> Redis protocol type conversion (0 ms)
[ok]: EVAL - Lua error reply -> Redis protocol type conversion (1 ms)
[ok]: EVAL - Lua table -> Redis protocol type conversion (1 ms)
[ok]: EVAL - Are the KEYS and ARGV arrays populated correctly? (0 ms)
[ok]: EVAL - is Lua able to call Redis API? (1 ms)
[ok]: EVAL - Redis integer -> Lua type conversion (1 ms)
[ok]: EVAL - Lua number -> Redis integer conversion (1 ms)
[ok]: EVAL - Redis bulk -> Lua type conversion (0 ms)
[ok]: EVAL - Redis multi bulk -> Lua type conversion (1 ms)
[ok]: EVAL - Redis status reply -> Lua type conversion (1 ms)
[ok]: EVAL - Redis error reply -> Lua type conversion (0 ms)
[ok]: EVAL - Redis nil bulk reply -> Lua type conversion (1 ms)
[ok]: EVAL - Is the Lua client using the currently selected DB? (1 ms)
[ok]: EVAL - SELECT inside Lua should not affect the caller (0 ms)
[ok]: EVAL - Scripts do not block on blpop command (1 ms)
[ok]: EVAL - Scripts do not block on brpop command (1 ms)
[ok]: EVAL - Scripts do not block on brpoplpush command (1 ms)
[ok]: EVAL - Scripts do not block on blmove command (0 ms)
[ok]: EVAL - Scripts do not block on bzpopmin command (1 ms)
[ok]: EVAL - Scripts do not block on bzpopmax command (1 ms)
[ok]: EVAL - Scripts do not block on wait (0 ms)
[ok]: EVAL - Scripts can't run XREAD and XREADGROUP with BLOCK option (1 ms)
[ok]: EVAL - Scripts can run non-deterministic commands (0 ms)
[ok]: EVAL - No arguments to redis.call/pcall is considered an error (0 ms)
[ok]: EVAL - redis.call variant raises a Lua error on Redis cmd error (1) (0 ms)
[ok]: EVAL - redis.call variant raises a Lua error on Redis cmd error (1) (0 ms)
[ok]: EVAL - redis.call variant raises a Lua error on Redis cmd error (1) (0 ms)
[ignore]: EVAL - JSON string encoding a string larger than 2GB: large memory flag not provided
[ok]: EVAL - JSON numeric decoding (0 ms)
[ok]: EVAL - JSON string decoding (1 ms)
[ok]: EVAL - JSON smoke test (0 ms)
[ok]: EVAL - cmsgpack can pack double? (1 ms)
[ok]: EVAL - cmsgpack can pack negative int64? (0 ms)
[ok]: Client output buffer soft limit is enforced if time is overreached (4193 ms)
[ok]: EVAL - cmsgpack pack/unpack smoke test (273 ms)
[ok]: EVAL - cmsgpack can pack and unpack circular references? (1 ms)
[ok]: EVAL - Numerical sanity check from bitop (0 ms)
[ok]: EVAL - Verify minimal bitop functionality (0 ms)
[ok]: EVAL - Able to parse trailing comments (0 ms)
[ok]: EVAL_RO - Successful case (0 ms)
[ok]: EVAL_RO - Cannot run write commands (1 ms)
[ok]: redis.sha1hex() implementation (0 ms)
[ok]: Globals protection reading an undeclared global variable (0 ms)
[ok]: Globals protection setting an undeclared global* (1 ms)
[ok]: lua bit.tohex bug (0 ms)
[ok]: Test an example script DECR_IF_GT (1 ms)
[ok]: WAIT implicitly blocks on client pause since ACKs aren't sent (1105 ms)
[ok]: Operations in no-touch mode do not alter the last access time of a key (1102 ms)
[ok]: TOUCH returns the number of existing keys specified (1 ms)
[ok]: command stats for GEOADD (2 ms)
[ok]: errors stats for GEOADD (1 ms)
[ok]: command stats for EXPIRE (2 ms)
[ok]: command stats for BRPOP (3 ms)
[ok]: command stats for MULTI (3 ms)
[ok]: command stats for scripts (1 ms)
[ok]: WAIT replica multiple clients unblock - reuse last result (17 ms)
[ok]: COMMAND COUNT get total number of Redis commands (0 ms)
[ok]: COMMAND GETKEYS GET (0 ms)
[ok]: COMMAND GETKEYSANDFLAGS (1 ms)
[ok]: COMMAND GETKEYS MEMORY USAGE (0 ms)
[ok]: COMMAND GETKEYS XGROUP (0 ms)
[ok]: COMMAND GETKEYS EVAL with keys (0 ms)
[ok]: COMMAND GETKEYS EVAL without keys (0 ms)
[ok]: COMMAND GETKEYS LCS (0 ms)
[ok]: COMMAND GETKEYS MORE THAN 256 KEYS (2 ms)
[ok]: COMMAND LIST syntax error (1 ms)
[ok]: COMMAND LIST WITHOUT FILTERBY (3 ms)
[ok]: COMMAND LIST FILTERBY ACLCAT against non existing category (0 ms)
[ok]: COMMAND LIST FILTERBY ACLCAT - list all commands/subcommands (1 ms)
[ok]: COMMAND LIST FILTERBY PATTERN - list all commands/subcommands (2 ms)
[ok]: COMMAND LIST FILTERBY MODULE against non existing module (0 ms)
[ok]: COMMAND INFO of invalid subcommands (1 ms)
[ok]: SET command will not be marked with movablekeys (1 ms)
[ok]: GET command will not be marked with movablekeys (0 ms)
[ok]: MSET command will not be marked with movablekeys (1 ms)
[ok]: BITFIELD command will not be marked with movablekeys (0 ms)
[ok]: LMOVE command will not be marked with movablekeys (1 ms)
[ok]: LPOP command will not be marked with movablekeys (1 ms)
[ok]: BLPOP command will not be marked with movablekeys (0 ms)
[ok]: PING command will not be marked with movablekeys (1 ms)
[ok]: MEMORY command will not be marked with movablekeys (0 ms)
[ok]: MEMORY|USAGE command will not be marked with movablekeys (1 ms)
[ok]: RENAME command will not be marked with movablekeys (0 ms)
[ok]: GEORADIUS_RO command will not be marked with movablekeys (1 ms)
[ok]: ZUNIONSTORE command is marked with movablekeys (1 ms)
[ok]: XREAD command is marked with movablekeys (0 ms)
[ok]: EVAL command is marked with movablekeys (1 ms)
[ok]: SORT command is marked with movablekeys (1 ms)
[ok]: SORT_RO command is marked with movablekeys (1 ms)
[ok]: MIGRATE command is marked with movablekeys (0 ms)
[ok]: GEORADIUS command is marked with movablekeys (1 ms)
[63/91 done]: unit/introspection-2 (11 seconds)
Testing unit/violations
[ok]: client evicted due to pubsub subscriptions (503 ms)
[ok]: client evicted due to tracking redirection (31 ms)
[ok]: SORT adds integer field to list (0 ms)
[64/91 done]: unit/violations (0 seconds)
Testing unit/replybufsize
[ok]: WAITAOF local copy before fsync (102 ms)
[ok]: EVAL does not leak in the Lua stack (537 ms)
[ok]: Call Redis command with many args from Lua (issue #1764) (1 ms)
[ok]: Number conversion precision test (issue #1118) (0 ms)
[ok]: String containing number precision test (regression of issue #1118) (0 ms)
[ok]: Verify negative arg count is error instead of crash (issue #1842) (0 ms)
[ok]: Scripts can handle commands with incorrect arity (1 ms)
[ok]: Correct handling of reused argv (issue #1939) (0 ms)
[ok]: Functions in the Redis namespace are able to report errors (1 ms)
[ok]: CLUSTER RESET can not be invoke from within a script (0 ms)
[ok]: Script with RESP3 map (1 ms)
[ok]: Script return recursive object (70 ms)
[ok]: Script check unpack with massive arguments (20 ms)
[ok]: Script read key with expiration set (1 ms)
[ok]: Script del key with expiration set (0 ms)
[ok]: Script ACL check (0 ms)
[ok]: Binary code loading failed (1 ms)
[ok]: Try trick global protection 1 (0 ms)
[ok]: Try trick global protection 2 (0 ms)
[ok]: Try trick global protection 3 (0 ms)
[ok]: Try trick global protection 4 (0 ms)
[ok]: Try trick readonly table on redis table (0 ms)
[ok]: Try trick readonly table on json table (0 ms)
[ok]: Try trick readonly table on cmsgpack table (0 ms)
[ok]: Try trick readonly table on bit table (0 ms)
[ok]: Test loadfile are not available (0 ms)
[ok]: Test dofile are not available (0 ms)
[ok]: Test print are not available (0 ms)
[ok]: ziplist implementation: encoding stress testing (5549 ms)
[65/91 done]: unit/type/list-3 (40 seconds)
Testing unit/cluster/announced-endpoints
[ok]: WAITAOF local copy everysec (603 ms)
[ok]: WAITAOF local copy with appendfsync always (2 ms)
[ok]: WAITAOF local wait and then stop aof (4 ms)
[ok]: WAITAOF local on server with aof disabled (0 ms)
[ok]: verify reply buffer limits (652 ms)
[ok]: Timedout read-only scripts can be killed by SCRIPT KILL (406 ms)
[66/91 done]: unit/replybufsize (1 seconds)
Testing unit/cluster/misc
[ok]: Timedout read-only scripts can be killed by SCRIPT KILL even when use pcall (26 ms)
[ok]: Timedout script does not cause a false dead client (52 ms)
[ok]: Timedout script link is still usable after Lua returns (64 ms)
[ok]: WAITAOF local if AOFRW was postponed (303 ms)
[ok]: PSYNC2 #3899 regression: verify consistency (36 ms)
[ok]: WAITAOF on demoted master gets unblocked with an error (2 ms)
[ok]: WAITAOF replica copy before fsync (69 ms)
[ok]: Timedout scripts and unblocked command (372 ms)
[ok]: query buffer resized correctly with fat argv (2957 ms)
[67/91 done]: unit/querybuf (6 seconds)
Testing unit/cluster/cli
[ok]: client evicted due to client tracking prefixes (1714 ms)
[ok]: Timedout scripts that modified data can't be killed by SCRIPT KILL (202 ms)
[ok]: SHUTDOWN NOSAVE can kill a timedout script anyway (1 ms)
[ok]: client evicted due to output buf (12 ms)
[ok]: client no-evict on (22 ms)
[ok]: client no-evict off (24 ms)
[ok]: Before the replica connects we issue two EVAL commands (1 ms)
[ok]: avoid client eviction when client is freed by output buffer limit (116 ms)
[ok]: Connect a replica to the master instance (102 ms)
[ok]: Replication of script multiple pushes to list with BLPOP (1 ms)
[ok]: Lua scripts using SELECT are replicated correctly (1 ms)
[68/91 done]: integration/psync2-reg (22 seconds)
Testing unit/cluster/scripting
[ok]: WAITAOF replica copy everysec (733 ms)
[ok]: decrease maxmemory-clients causes client eviction (401 ms)
[ok]: Test change cluster-announce-port and cluster-announce-tls-port at runtime (103 ms)
[ok]: evict clients only until below limit (148 ms)
[ok]: Test change cluster-announce-bus-port at runtime (102 ms)
[ok]: Connect a replica to the master instance (102 ms)
[ok]: Redis.replicate_commands() can be issued anywhere now (0 ms)
[ok]: Redis.set_repl() can be issued before replicate_commands() now (0 ms)
[ok]: Redis.set_repl() don't accept invalid values (1 ms)
[ok]: Test selective replication of certain Redis commands from Lua (1 ms)
[ok]: PRNG is seeded randomly for command replication (0 ms)
[ok]: Using side effects is not a problem with command replication (1 ms)
[ok]: WAITAOF replica copy everysec with AOFRW (1009 ms)
[ok]: evict clients in right order (large to small) (146 ms)
[ok]: Key lazy expires during key migration (13 ms)
[69/91 done]: unit/cluster/announced-endpoints (3 seconds)
Testing unit/cluster/hostnames
[ok]: Coverage: Basic cluster commands (6 ms)
[ok]: PSYNC2: generate load while killing replication links (5000 ms)
[ok]: PSYNC2: cluster is consistent after load (x = 94214) (0 ms)
[ok]: PSYNC2: total sum of full synchronizations is exactly 4 (1 ms)
[ok]: PSYNC2: --- CYCLE 4 --- (0 ms)
[ok]: PSYNC2: [NEW LAYOUT] Set #4 as master (0 ms)
[ok]: PSYNC2: Set #0 to replicate from #4 (0 ms)
[ok]: client total memory grows during client no-evict (128 ms)
[ok]: client total memory grows during maxmemory-clients disabled (126 ms)
[70/91 done]: unit/client-eviction (5 seconds)
Testing unit/cluster/human-announced-nodename
[ok]: Create 3 node cluster (2017 ms)
[ok]: Run blocking command on cluster node3 (0 ms)
[ok]: Perform a Resharding (15 ms)
[ok]: CONFIG SET bind address (5231 ms)
[ok]: test RESP2/2 big number protocol parsing (0 ms)
[ok]: test RESP2/2 malformed big number protocol parsing (0 ms)
[ok]: test RESP2/2 map protocol parsing (1 ms)
[ok]: test RESP2/2 set protocol parsing (0 ms)
[ok]: test RESP2/2 double protocol parsing (0 ms)
[ok]: test RESP2/2 null protocol parsing (0 ms)
[ok]: test RESP2/2 verbatim protocol parsing (0 ms)
[ok]: test RESP2/2 true protocol parsing (0 ms)
[ok]: test RESP2/2 false protocol parsing (1 ms)
[ok]: test RESP2/3 big number protocol parsing (0 ms)
[ok]: test RESP2/3 malformed big number protocol parsing (0 ms)
[ok]: test RESP2/3 map protocol parsing (0 ms)
[ok]: test RESP2/3 set protocol parsing (0 ms)
[ok]: test RESP2/3 double protocol parsing (1 ms)
[ok]: test RESP2/3 null protocol parsing (0 ms)
[ok]: test RESP2/3 verbatim protocol parsing (0 ms)
[ok]: test RESP2/3 true protocol parsing (0 ms)
[ok]: test RESP2/3 false protocol parsing (0 ms)
[ok]: test RESP3/2 big number protocol parsing (0 ms)
[ok]: test RESP3/2 malformed big number protocol parsing (0 ms)
[ok]: test RESP3/2 map protocol parsing (1 ms)
[ok]: test RESP3/2 set protocol parsing (0 ms)
[ok]: test RESP3/2 double protocol parsing (0 ms)
[ok]: test RESP3/2 null protocol parsing (0 ms)
[ok]: test RESP3/2 verbatim protocol parsing (0 ms)
[ok]: test RESP3/2 true protocol parsing (0 ms)
[ok]: test RESP3/2 false protocol parsing (0 ms)
[ok]: test RESP3/3 big number protocol parsing (0 ms)
[ok]: test RESP3/3 malformed big number protocol parsing (0 ms)
[ok]: test RESP3/3 map protocol parsing (0 ms)
[ok]: test RESP3/3 set protocol parsing (0 ms)
[ok]: test RESP3/3 double protocol parsing (0 ms)
[ok]: test RESP3/3 null protocol parsing (0 ms)
[ok]: test RESP3/3 verbatim protocol parsing (0 ms)
[ok]: test RESP3/3 true protocol parsing (0 ms)
[ok]: test RESP3/3 false protocol parsing (0 ms)
[ok]: test resp3 attribute protocol parsing (0 ms)
[ok]: Script block the time during execution (11 ms)
[ok]: Verify command got unblocked after resharding (40 ms)
[ok]: Script delete the expired key (2 ms)
[ok]: Wait for cluster to be stable (9 ms)
[ok]: TIME command using cached time (11 ms)
[ok]: use previous hostip in "cluster-preferred-endpoint-type unknown-endpoint" mode (3 ms)
[ok]: Sanity test push cmd after resharding (0 ms)
[ok]: Run blocking command again on cluster node1 (0 ms)
[ok]: Script block the time in some expiration related commands (82 ms)
[ok]: RESTORE expired keys with expiration time (10 ms)
[ok]: Eval scripts with shebangs and functions default to no cross slots (1 ms)
[ok]: Cross slot commands are allowed by default for eval scripts and with allow-cross-slot-keys flag (1 ms)
[ok]: Cross slot commands are also blocked if they disagree with pre-declared keys (0 ms)
[ok]: Function no-cluster flag (0 ms)
[ok]: Script no-cluster flag (0 ms)
[71/91 done]: unit/cluster/scripting (2 seconds)
Testing unit/cluster/multi-slot-operations
[ok]: Script - disallow write on OOM (0 ms)
[ok]: EVAL - Does Lua interpreter replies to our requests? (0 ms)
[ok]: EVAL - Return _G (0 ms)
[ok]: EVAL - Return table with a metatable that raise error (0 ms)
[ok]: EVAL - Return table with a metatable that call redis (1 ms)
[ok]: EVAL - Lua integer -> Redis protocol type conversion (0 ms)
[ok]: EVAL - Lua string -> Redis protocol type conversion (0 ms)
[ok]: EVAL - Lua true boolean -> Redis protocol type conversion (0 ms)
[ok]: EVAL - Lua false boolean -> Redis protocol type conversion (0 ms)
[ok]: EVAL - Lua status code reply -> Redis protocol type conversion (0 ms)
[ok]: EVAL - Lua error reply -> Redis protocol type conversion (1 ms)
[ok]: EVAL - Lua table -> Redis protocol type conversion (0 ms)
[ok]: EVAL - Are the KEYS and ARGV arrays populated correctly? (0 ms)
[ok]: EVAL - is Lua able to call Redis API? (0 ms)
[ok]: EVALSHA - Can we call a SHA1 if already defined? (0 ms)
[ok]: EVALSHA_RO - Can we call a SHA1 if already defined? (0 ms)
[ok]: EVALSHA - Can we call a SHA1 in uppercase? (0 ms)
[ok]: EVALSHA - Do we get an error on invalid SHA1? (0 ms)
[ok]: EVALSHA - Do we get an error on non defined SHA1? (1 ms)
[ok]: EVAL - Redis integer -> Lua type conversion (0 ms)
[ok]: EVAL - Lua number -> Redis integer conversion (0 ms)
[ok]: EVAL - Redis bulk -> Lua type conversion (0 ms)
[ok]: EVAL - Redis multi bulk -> Lua type conversion (0 ms)
[ok]: EVAL - Redis status reply -> Lua type conversion (0 ms)
[ok]: EVAL - Redis error reply -> Lua type conversion (1 ms)
[ok]: EVAL - Redis nil bulk reply -> Lua type conversion (0 ms)
[ok]: EVAL - Is the Lua client using the currently selected DB? (0 ms)
[ok]: EVAL - SELECT inside Lua should not affect the caller (0 ms)
[ok]: EVAL - Scripts do not block on blpop command (0 ms)
[ok]: EVAL - Scripts do not block on brpop command (1 ms)
[ok]: EVAL - Scripts do not block on brpoplpush command (0 ms)
[ok]: EVAL - Scripts do not block on blmove command (0 ms)
[ok]: EVAL - Scripts do not block on bzpopmin command (0 ms)
[ok]: EVAL - Scripts do not block on bzpopmax command (0 ms)
[ok]: EVAL - Scripts do not block on wait (0 ms)
[ok]: EVAL - Scripts can't run XREAD and XREADGROUP with BLOCK option (1 ms)
[ok]: EVAL - Scripts can run non-deterministic commands (0 ms)
[ok]: EVAL - No arguments to redis.call/pcall is considered an error (1 ms)
[ok]: EVAL - redis.call variant raises a Lua error on Redis cmd error (1) (0 ms)
[ok]: EVAL - redis.call variant raises a Lua error on Redis cmd error (1) (0 ms)
[ok]: EVAL - redis.call variant raises a Lua error on Redis cmd error (1) (0 ms)
[ignore]: EVAL - JSON string encoding a string larger than 2GB: large memory flag not provided
[ok]: EVAL - JSON numeric decoding (1 ms)
[ok]: EVAL - JSON string decoding (0 ms)
[ok]: EVAL - JSON smoke test (0 ms)
[ok]: EVAL - cmsgpack can pack double? (1 ms)
[ok]: EVAL - cmsgpack can pack negative int64? (0 ms)
[ok]: PSYNC2: Set #1 to replicate from #3 (1 ms)
[ok]: EVAL - cmsgpack pack/unpack smoke test (169 ms)
[ok]: EVAL - cmsgpack can pack and unpack circular references? (0 ms)
[ok]: EVAL - Numerical sanity check from bitop (0 ms)
[ok]: EVAL - Verify minimal bitop functionality (1 ms)
[ok]: CONFIG SET bind-source-addr (527 ms)
[ok]: EVAL - Able to parse trailing comments (0 ms)
[ok]: EVAL_RO - Successful case (0 ms)
[ok]: EVAL_RO - Cannot run write commands (0 ms)
[ok]: SCRIPTING FLUSH - is able to clear the scripts cache? (10 ms)
[ok]: SCRIPTING FLUSH ASYNC (9 ms)
[ok]: SCRIPT EXISTS - can detect already defined scripts? (1 ms)
[ok]: SCRIPT LOAD - is able to register scripts in the scripting cache (0 ms)
[ok]: SORT is normally not alpha re-ordered for the scripting engine (1 ms)
[ok]: SORT BY <constant> output gets ordered for scripting (0 ms)
[ok]: SORT BY <constant> with GET gets ordered for scripting (1 ms)
[ok]: redis.sha1hex() implementation (0 ms)
[ok]: Globals protection reading an undeclared global variable (1 ms)
[ok]: Globals protection setting an undeclared global* (0 ms)
[ok]: lua bit.tohex bug (0 ms)
[ok]: Test an example script DECR_IF_GT (1 ms)
[ok]: random numbers are random now (0 ms)
[ok]: Scripting engine PRNG can be seeded correctly (1 ms)
[ok]: Client output buffer soft limit is not enforced too early and is enforced when no traffic (4937 ms)
[ok]: No response for single command if client output buffer hard limit is enforced (115 ms)
[ok]: EVAL does not leak in the Lua stack (253 ms)
[ok]: SPOP: We can call scripts rewriting client->argv from Lua (20 ms)
[ok]: Default bind address configuration handling (211 ms)
[ok]: Protected mode works as expected (5 ms)
[ok]: MGET: mget shouldn't be propagated in Lua (100 ms)
[72/91 done]: unit/networking (7 seconds)
Testing unit/cluster/slot-ownership
[ok]: EXPIRE: We can call scripts rewriting client->argv from Lua (100 ms)
[ok]: WAITAOF replica copy everysec with slow AOFRW (2117 ms)
[ok]: INCRBYFLOAT: We can call scripts expanding client->argv from Lua (320 ms)
[ok]: Call Redis command with many args from Lua (issue #1764) (1 ms)
[ok]: Number conversion precision test (issue #1118) (0 ms)
[ok]: String containing number precision test (regression of issue #1118) (1 ms)
[ok]: Verify negative arg count is error instead of crash (issue #1842) (0 ms)
[ok]: Scripts can handle commands with incorrect arity (0 ms)
[ok]: Correct handling of reused argv (issue #1939) (0 ms)
[ok]: Functions in the Redis namespace are able to report errors (0 ms)
[ok]: CLUSTER RESET can not be invoke from within a script (0 ms)
[ok]: Script with RESP3 map (1 ms)
[ok]: PSYNC2: Set #2 to replicate from #4 (0 ms)
[ok]: WAITAOF replica copy everysec->always with AOFRW (112 ms)
[ok]: WAITAOF replica copy appendfsync always (9 ms)
[ok]: Script return recursive object (74 ms)
[ok]: Script check unpack with massive arguments (23 ms)
[ok]: Script read key with expiration set (1 ms)
[ok]: Script del key with expiration set (0 ms)
[ok]: Script ACL check (1 ms)
[ok]: Binary code loading failed (0 ms)
[ok]: Try trick global protection 1 (0 ms)
[ok]: Try trick global protection 2 (0 ms)
[ok]: Try trick global protection 3 (0 ms)
[ok]: Try trick global protection 4 (0 ms)
[ok]: Try trick readonly table on redis table (1 ms)
[ok]: Try trick readonly table on json table (0 ms)
[ok]: Try trick readonly table on cmsgpack table (0 ms)
[ok]: Try trick readonly table on bit table (0 ms)
[ok]: Test loadfile are not available (1 ms)
[ok]: Test dofile are not available (0 ms)
[ok]: Test print are not available (0 ms)
[ok]: Kill a cluster node and wait for fail state (1622 ms)
[ok]: Verify command got unblocked after cluster failure (7 ms)
[ok]: No response for multi commands in pipeline if client output buffer limit is enforced (1044 ms)
[ok]: Execute transactions completely even if client output buffer limit is enforced (15 ms)
[ok]: Obuf limit, HRANDFIELD with huge count stopped mid-run (23 ms)
[ok]: Obuf limit, KEYS stopped mid-run (46 ms)
[73/91 done]: unit/obuf-limits (15 seconds)
Testing unit/cluster/links
[ok]: Timedout read-only scripts can be killed by SCRIPT KILL (401 ms)
[ok]: Timedout read-only scripts can be killed by SCRIPT KILL even when use pcall (36 ms)
[ok]: Set cluster human announced nodename and let it propagate (103 ms)
[ok]: Timedout script does not cause a false dead client (29 ms)
[ok]: Timedout script link is still usable after Lua returns (45 ms)
[ok]: WAITAOF replica copy if replica is blocked (832 ms)
[ok]: Set cluster hostnames and verify they are propagated (209 ms)
[ok]: PSYNC2: Set #3 to replicate from #0 (1 ms)
[ok]: Update hostnames and make sure they are all eventually propagated (107 ms)
[ok]: Timedout scripts and unblocked command (314 ms)
[ok]: Client blocked on XREADGROUP while stream's slot is migrated (4 ms)
[ok]: Remove hostnames and make sure they are all eventually propagated (207 ms)
[ok]: Timedout scripts that modified data can't be killed by SCRIPT KILL (203 ms)
[ok]: SHUTDOWN NOSAVE can kill a timedout script anyway (2 ms)
[74/91 done]: unit/cluster/misc (6 seconds)
Testing unit/cluster/cluster-response-tls
[75/91 done]: unit/cluster/cluster-response-tls (0 seconds)
Testing unit/cluster/failure-marking
[ok]: Verify cluster-preferred-endpoint-type behavior for redirects and info (104 ms)
[ok]: Continuous slots distribution (6 ms)
[ok]: ADDSLOTS command with several boundary conditions test suite (0 ms)
[ok]: ADDSLOTSRANGE command with several boundary conditions test suite (1 ms)
[ok]: DELSLOTSRANGE command with several boundary conditions test suite (4 ms)
[ok]: Before the replica connects we issue two EVAL commands (0 ms)
[ok]: Test replication partial resync: backlog expired (diskless: no, disabled, reconnect: 1) (9678 ms)
[ok]: Connect a replica to the master instance (101 ms)
[ok]: Now use EVALSHA against the master, with both SHAs (1 ms)
[ok]: 'x' should be '4' for EVALSHA being replicated by effects (0 ms)
[ok]: Replication of script multiple pushes to list with BLPOP (0 ms)
[ok]: EVALSHA replication when first call is readonly (0 ms)
[ok]: Lua scripts using SELECT are replicated correctly (0 ms)
[ok]: GEOSEARCH fuzzy test - byradius (14666 ms)
[76/91 done]: unit/cluster/multi-slot-operations (3 seconds)
[ok]: WAITAOF replica multiple clients unblock - reuse last result (1002 ms)
[ok]: PSYNC2: cluster is consistent after failover (1 ms)
[ok]: Verify that slot ownership transfer through gossip propagates deletes to replicas (104 ms)
[ok]: Slave should be able to synchronize with the master (101 ms)
[ok]: Detect write load to master (0 ms)
[ok]: Test replication partial resync: no reconnection, just sync (diskless: no, swapdb, reconnect: 0) (11 ms)
[ok]: WAITAOF on promoted replica (601 ms)
[ok]: Slave should be able to synchronize with the master (101 ms)
[ok]: Detect write load to master (0 ms)
[ok]: Connect a replica to the master instance (101 ms)
[ok]: Redis.replicate_commands() can be issued anywhere now (0 ms)
[ok]: Redis.set_repl() can be issued before replicate_commands() now (0 ms)
[ok]: Redis.set_repl() don't accept invalid values (0 ms)
[ok]: Test selective replication of certain Redis commands from Lua (1 ms)
[ok]: PRNG is seeded randomly for command replication (1 ms)
[ok]: Using side effects is not a problem with command replication (0 ms)
[ok]: Broadcast message across a cluster shard while a cluster link is down (103 ms)
[77/91 done]: unit/cluster/slot-ownership (3 seconds)
[ok]: Test scripting debug protocol parsing (0 ms)
[ok]: Test scripting debug lua stack overflow (1 ms)
{<redis> ping} {<reply> "+PONG"}
[ok]: Test scripting debug lua server invocations (1 ms)
[ok]: Functions are added to new node on valkey-cli cluster add-node (3003 ms)
[ok]: test RESP2/2 big number protocol parsing (1 ms)
[ok]: test RESP2/2 malformed big number protocol parsing (0 ms)
[ok]: test RESP2/2 map protocol parsing (0 ms)
[ok]: test RESP2/2 set protocol parsing (0 ms)
[ok]: test RESP2/2 double protocol parsing (1 ms)
[ok]: test RESP2/2 null protocol parsing (0 ms)
[ok]: test RESP2/2 verbatim protocol parsing (0 ms)
[ok]: test RESP2/2 true protocol parsing (0 ms)
[ok]: test RESP2/2 false protocol parsing (0 ms)
[ok]: test RESP2/3 big number protocol parsing (0 ms)
[ok]: test RESP2/3 malformed big number protocol parsing (0 ms)
[ok]: test RESP2/3 map protocol parsing (0 ms)
[ok]: test RESP2/3 set protocol parsing (0 ms)
[ok]: test RESP2/3 double protocol parsing (0 ms)
[ok]: test RESP2/3 null protocol parsing (0 ms)
[ok]: test RESP2/3 verbatim protocol parsing (0 ms)
[ok]: test RESP2/3 true protocol parsing (0 ms)
[ok]: test RESP2/3 false protocol parsing (0 ms)
[ok]: test RESP3/2 big number protocol parsing (0 ms)
[ok]: test RESP3/2 malformed big number protocol parsing (0 ms)
[ok]: test RESP3/2 map protocol parsing (1 ms)
[ok]: test RESP3/2 set protocol parsing (0 ms)
[ok]: test RESP3/2 double protocol parsing (0 ms)
[ok]: test RESP3/2 null protocol parsing (0 ms)
[ok]: test RESP3/2 verbatim protocol parsing (0 ms)
[ok]: test RESP3/2 true protocol parsing (0 ms)
[ok]: test RESP3/2 false protocol parsing (0 ms)
[ok]: test RESP3/3 big number protocol parsing (0 ms)
[ok]: test RESP3/3 malformed big number protocol parsing (1 ms)
[ok]: test RESP3/3 map protocol parsing (0 ms)
[ok]: test RESP3/3 set protocol parsing (0 ms)
[ok]: test RESP3/3 double protocol parsing (0 ms)
[ok]: test RESP3/3 null protocol parsing (0 ms)
[ok]: test RESP3/3 verbatim protocol parsing (1 ms)
[ok]: test RESP3/3 true protocol parsing (0 ms)
[ok]: test RESP3/3 false protocol parsing (0 ms)
[ok]: test resp3 attribute protocol parsing (0 ms)
[ok]: Script block the time during execution (11 ms)
[ok]: Script delete the expired key (2 ms)
[ok]: TIME command using cached time (11 ms)
[ok]: Script block the time in some expiration related commands (81 ms)
[ok]: RESTORE expired keys with expiration time (11 ms)
[ok]: Human nodenames are visible in log messages (3519 ms)
[ok]: Shebang support for lua engine (0 ms)
[ok]: Unknown shebang option (0 ms)
[ok]: Unknown shebang flag (0 ms)
[ok]: allow-oom shebang flag (1 ms)
[ok]: no-writes shebang flag (0 ms)
[ok]: WAITAOF master that loses a replica and backlog is dropped (2004 ms)
[78/91 done]: unit/cluster/human-announced-nodename (6 seconds)
[ok]: no-writes shebang flag on replica (104 ms)
[ok]: not enough good replicas (1 ms)
[ok]: WAITAOF master without backlog, wait is released when the replica finishes full-sync (410 ms)
[ok]: Verify the nodes configured with prefer hostname only show hostname for new nodes (3932 ms)
[ok]: not enough good replicas state change during long script (516 ms)
[ok]: allow-stale shebang flag (2 ms)
[ok]: reject script do not cause a Lua stack leak (6 ms)
[ok]: Each node has two links with each peer (3 ms)
[ok]: Validate cluster links format (1 ms)
[ok]: Test restart will keep hostname information (150 ms)
[ok]: Test hostname validation (0 ms)
[ok]: Consistent eval error reporting (10 ms)
[ok]: LUA redis.error_reply API (1 ms)
[ok]: LUA redis.error_reply API with empty string (0 ms)
[ok]: LUA redis.status_reply API (1 ms)
[ok]: LUA test pcall (0 ms)
[ok]: LUA test pcall with error (0 ms)
[ok]: LUA test pcall with non string/integer arg (0 ms)
[ok]: LUA test trim string as expected (1 ms)
[79/91 done]: unit/scripting (23 seconds)
[ok]: WAITAOF master isn't configured to do AOF (1002 ms)
[80/91 done]: unit/cluster/hostnames (8 seconds)
[ok]: WAITAOF replica isn't configured to do AOF (104 ms)
[ok]: Verify that single primary marks replica as failed (3236 ms)
[ok]: WAITAOF both local and replica got AOF enabled at runtime (908 ms)
[ok]: PSYNC2: generate load while killing replication links (5000 ms)
[ok]: PSYNC2: cluster is consistent after load (x = 146069) (1 ms)
[ok]: PSYNC2: total sum of full synchronizations is exactly 4 (1 ms)
[ok]: PSYNC2: --- CYCLE 5 --- (0 ms)
[ok]: PSYNC2: [NEW LAYOUT] Set #1 as master (0 ms)
[ok]: PSYNC2: Set #4 to replicate from #1 (0 ms)
[ok]: PSYNC2: Set #0 to replicate from #1 (0 ms)
[ok]: WAITAOF master sends PING after last write (1204 ms)
[ok]: Migrate the last slot away from a node using valkey-cli (3934 ms)
[ok]: GEOSEARCH fuzzy test - bybox (6787 ms)
[ok]: GEOSEARCH box edges fuzzy test (25 ms)
[81/91 done]: unit/geo (22 seconds)
[ok]: PSYNC2: Set #2 to replicate from #0 (1 ms)
[ok]: Test replication partial resync: ok psync (diskless: no, swapdb, reconnect: 1) (6569 ms)
[ok]: WAITAOF master client didn't send any write command (1202 ms)
[ok]: Slave should be able to synchronize with the master (101 ms)
[ok]: Detect write load to master (0 ms)
[ok]: PSYNC2: Set #3 to replicate from #4 (0 ms)
[ok]: WAITAOF master client didn't send any command (1201 ms)
[ok]: valkey-cli --cluster create with cluster-port (1918 ms)
[ok]: PSYNC2: cluster is consistent after failover (1 ms)
[ok]: valkey-cli --cluster add-node with cluster-port (1176 ms)
[82/91 done]: unit/cluster/cli (16 seconds)
[ok]: WAITAOF when replica switches between masters, fsync: no (3336 ms)
[ok]: Disconnect link when send buffer limit reached (9073 ms)
[ok]: Link memory increases with publishes (684 ms)
[ok]: Verify that multiple primaries mark replica as failed (6261 ms)
[ok]: Link memory resets after publish messages flush (516 ms)
[83/91 done]: unit/cluster/links (15 seconds)
[ok]: PSYNC2: generate load while killing replication links (5000 ms)
[ok]: PSYNC2: cluster is consistent after load (x = 199954) (1 ms)
[ok]: PSYNC2: total sum of full synchronizations is exactly 4 (1 ms)
[ok]: PSYNC2: Bring the master back again for next test (2 ms)
[ok]: WAITAOF when replica switches between masters, fsync: everysec (2337 ms)
[ok]: PSYNC2: Partial resync after restart using RDB aux fields (208 ms)
[84/91 done]: integration/psync2 (43 seconds)
[ok]: WAITAOF when replica switches between masters, fsync: always (1325 ms)
[ok]: Connect multiple replicas at the same time (issue #141), master diskless=no, replica diskless=disabled (39251 ms)
[ok]: Test replication partial resync: no backlog (diskless: no, swapdb, reconnect: 1) (8276 ms)
[ok]: setup replication for following tests (102 ms)
[ok]: Slave should be able to synchronize with the master (101 ms)
[ok]: Detect write load to master (0 ms)
[ok]: WAIT and WAITAOF replica multiple clients unblock - reuse last result (684 ms)
[85/91 done]: unit/wait (28 seconds)
[ok]: Only primary with slots has the right to mark a node as failed (11431 ms)
[86/91 done]: unit/cluster/failure-marking (26 seconds)
[ok]: Test replication partial resync: ok after delay (diskless: no, swapdb, reconnect: 1) (9895 ms)
[ok]: slave buffer are counted correctly (36750 ms)
[ok]: Slave should be able to synchronize with the master (100 ms)
[ok]: Detect write load to master (0 ms)
[ok]: Fuzzing dense/sparse encoding: Redis should always detect errors (39454 ms)
[ok]: PFADD, PFCOUNT, PFMERGE type checking works (1 ms)
[ok]: PFMERGE results on the cardinality of union of sets (1 ms)
[ok]: PFMERGE on missing source keys will create an empty destkey (0 ms)
[ok]: PFMERGE with one empty input key, create an empty destkey (1 ms)
[ok]: PFMERGE with one non-empty input key, dest key is actually one of the source keys (0 ms)
[ok]: PFCOUNT multiple-keys merge returns cardinality of union #1 (3821 ms)
[ok]: PFCOUNT multiple-keys merge returns cardinality of union #2 (1731 ms)
[ok]: replica buffer don't induce eviction (6128 ms)
[ok]: Don't rehash if used memory exceeds maxmemory after rehash (99 ms)
[ok]: PFDEBUG GETREG returns the HyperLogLog raw registers (739 ms)
[ok]: PFADD / PFCOUNT cache invalidation works (1 ms)
[87/91 done]: unit/hyperloglog (47 seconds)
[ok]: client tracking don't cause eviction feedback loop (1264 ms)
[ok]: propagation with eviction (95 ms)
[ok]: propagation with eviction in MULTI (94 ms)
[ok]: lru/lfu value of the key just added (1 ms)
[88/91 done]: unit/maxmemory (55 seconds)
[ok]: Test replication partial resync: backlog expired (diskless: no, swapdb, reconnect: 1) (9989 ms)
[ok]: Slave should be able to synchronize with the master (808 ms)
[ok]: Detect write load to master (0 ms)
[ok]: Test replication partial resync: no reconnection, just sync (diskless: yes, disabled, reconnect: 0) (134 ms)
[ok]: Slave should be able to synchronize with the master (804 ms)
[ok]: Detect write load to master (0 ms)
[ok]: AOF rewrite during write load: RDB preamble=no (57818 ms)
[ok]: Turning off AOF kills the background writing child if any (105 ms)
[ok]: AOF rewrite of list with listpack encoding, string data (104 ms)
[ok]: AOF rewrite of list with quicklist encoding, string data (121 ms)
[ok]: AOF rewrite of list with listpack encoding, int data (103 ms)
[ok]: AOF rewrite of list with quicklist encoding, int data (112 ms)
[ok]: AOF rewrite of set with intset encoding, string data (103 ms)
[ok]: AOF rewrite of set with hashtable encoding, string data (112 ms)
[ok]: AOF rewrite of set with intset encoding, int data (103 ms)
[ok]: AOF rewrite of set with hashtable encoding, int data (113 ms)
[ok]: AOF rewrite of hash with listpack encoding, string data (103 ms)
[ok]: AOF rewrite of hash with hashtable encoding, string data (182 ms)
[ok]: AOF rewrite of hash with listpack encoding, int data (103 ms)
[ok]: AOF rewrite of hash with hashtable encoding, int data (117 ms)
[ok]: AOF rewrite of zset with listpack encoding, string data (102 ms)
[ok]: AOF rewrite of zset with skiplist encoding, string data (115 ms)
[ok]: AOF rewrite of zset with listpack encoding, int data (103 ms)
[ok]: AOF rewrite of zset with skiplist encoding, int data (118 ms)
[ok]: AOF rewrite functions (102 ms)
[ok]: BGREWRITEAOF is delayed if BGSAVE is in progress (207 ms)
[ok]: BGREWRITEAOF is refused if already in progress (4 ms)
[89/91 done]: unit/aofrw (88 seconds)
[ok]: Test replication partial resync: ok psync (diskless: yes, disabled, reconnect: 1) (6903 ms)
[ok]: Slave should be able to synchronize with the master (804 ms)
[ok]: Detect write load to master (0 ms)
[ok]: Test replication partial resync: no backlog (diskless: yes, disabled, reconnect: 1) (8649 ms)
[ok]: Slave should be able to synchronize with the master (805 ms)
[ok]: Detect write load to master (0 ms)
[ok]: Connect multiple replicas at the same time (issue #141), master diskless=no, replica diskless=swapdb (43599 ms)
[ok]: Test replication partial resync: ok after delay (diskless: yes, disabled, reconnect: 1) (10322 ms)
[ok]: Slave should be able to synchronize with the master (805 ms)
[ok]: Detect write load to master (0 ms)
[ok]: Test replication partial resync: backlog expired (diskless: yes, disabled, reconnect: 1) (10465 ms)
[ok]: Slave should be able to synchronize with the master (805 ms)
[ok]: Detect write load to master (0 ms)
[ok]: Test replication partial resync: no reconnection, just sync (diskless: yes, swapdb, reconnect: 0) (132 ms)
[ok]: Slave should be able to synchronize with the master (804 ms)
[ok]: Detect write load to master (0 ms)
[ok]: Test replication partial resync: ok psync (diskless: yes, swapdb, reconnect: 1) (6985 ms)
[ok]: Slave should be able to synchronize with the master (806 ms)
[ok]: Detect write load to master (0 ms)
[ok]: Test replication partial resync: no backlog (diskless: yes, swapdb, reconnect: 1) (8705 ms)
[ok]: Slave should be able to synchronize with the master (804 ms)
[ok]: Detect write load to master (0 ms)
[ok]: Connect multiple replicas at the same time (issue #141), master diskless=yes, replica diskless=disabled (46204 ms)
[ok]: Test replication partial resync: ok after delay (diskless: yes, swapdb, reconnect: 1) (10501 ms)
[ok]: Slave should be able to synchronize with the master (805 ms)
[ok]: Detect write load to master (0 ms)
[ok]: Test replication partial resync: backlog expired (diskless: yes, swapdb, reconnect: 1) (11553 ms)
[90/91 done]: integration/replication-psync (160 seconds)
[ok]: Connect multiple replicas at the same time (issue #141), master diskless=yes, replica diskless=swapdb (43470 ms)
[ok]: Master stream is correctly processed while the replica has a script in -BUSY state (20277 ms)
[ok]: Diskless load swapdb (different replid): new database is exposed after swapping (0 ms)
[ok]: Diskless load swapdb (different replid): replica enter loading (424 ms)
[ok]: Diskless load swapdb (different replid): old database is exposed after replication fails (0 ms)
[ok]: Diskless load swapdb (async_loading): new database is exposed after swapping (0 ms)
[ok]: Diskless load swapdb (async_loading): replica enter async_loading (333 ms)
[ok]: Diskless load swapdb (async_loading): old database is exposed while async replication is in progress (863 ms)
[ok]: Busy script during async loading (863 ms)
[ok]: Blocked commands and configs during async-loading (442 ms)
[ok]: Diskless load swapdb (async_loading): old database is exposed after async replication fails (1 ms)
Waiting for process 19244 to exit...
Waiting for process 19244 to exit...
Waiting for process 19244 to exit...
Waiting for process 19244 to exit...
Waiting for process 19244 to exit...
[ok]: diskless loading short read (31023 ms)
[ok]: diskless no replicas drop during rdb pipe (5928 ms)
[ok]: diskless slow replicas drop during rdb pipe (2352 ms)
[ok]: diskless fast replicas drop during rdb pipe (4820 ms)
[ok]: diskless all replicas drop during rdb pipe (1627 ms)
[ok]: diskless timeout replicas drop during rdb pipe (5719 ms)
[ok]: diskless replication child being killed is collected (1428 ms)
[ok]: replication child dies when parent is killed - diskless: yes (1135 ms)
[ok]: replication child dies when parent is killed - diskless: no (1442 ms)
[ok]: diskless replication read pipe cleanup (719 ms)
[ok]: replicaof right after disconnection (1817 ms)
[ok]: Kill rdb child process if its dumping RDB is not useful (920 ms)
[ok]: Don't disconnect with replicas before loading transferred RDB when full sync (1 ms)
[ok]: Discard cache master before loading transferred RDB when full sync (104 ms)
[ok]: replica can handle EINTR if use diskless load (829 ms)
[ok]: replica do not write the reply to the replication link - SYNC (_addReplyToBufferOrList) (143 ms)
[ok]: replica do not write the reply to the replication link - SYNC (addReplyDeferredLen) (92 ms)
[ok]: replica do not write the reply to the replication link - PSYNC (_addReplyToBufferOrList) (102 ms)
[ok]: replica do not write the reply to the replication link - PSYNC (addReplyDeferredLen) (102 ms)
[ok]: PSYNC with wrong offset should throw error (0 ms)
[ok]: Test replication with lazy expire (111 ms)
[91/91 done]: integration/replication (287 seconds)
Testing solo test
[ignore]: Test LPUSH and LPOP on plain nodes over 4GB: large memory flag not provided
[ignore]: Test LINDEX and LINSERT on plain nodes over 4GB: large memory flag not provided
[ignore]: Test LTRIM on plain nodes over 4GB: large memory flag not provided
[ignore]: Test LREM on plain nodes over 4GB: large memory flag not provided
[ignore]: Test LSET on plain nodes over 4GB: large memory flag not provided
[ignore]: Test LSET on plain nodes with large elements under packed_threshold over 4GB: large memory flag not provided
[ignore]: Test LSET splits a quicklist node, and then merge: large memory flag not provided
[ignore]: Test LSET splits a LZF compressed quicklist node, and then merge: large memory flag not provided
[ignore]: Test LMOVE on plain nodes over 4GB: large memory flag not provided
[91/91 done]: list-large-memory (0 seconds)
Testing solo test
[ignore]: SADD, SCARD, SISMEMBER - large data: large memory flag not provided
[91/91 done]: set-large-memory (1 seconds)
Testing solo test
[ignore]: BIT pos larger than UINT_MAX: large memory flag not provided
[ignore]: SETBIT values larger than UINT32_MAX and lzf_compress/lzf_decompress correctly: large memory flag not provided
[91/91 done]: bitops-large-memory (0 seconds)
Testing solo test
[91/91 done]: defrag (2 seconds)
Testing solo test
[ignore]: XADD one huge field: large memory flag not provided
[ignore]: XADD one huge field - 1: large memory flag not provided
[ignore]: several XADD big fields: large memory flag not provided
[ignore]: single XADD big fields: large memory flag not provided
[ignore]: hash with many big fields: large memory flag not provided
[ignore]: hash with one huge field: large memory flag not provided
[91/91 done]: violations (1 seconds)

                   The End

Execution time of different units:
  0 seconds - unit/printver
  0 seconds - unit/info-command
  0 seconds - unit/type/incr
  0 seconds - unit/protocol
  1 seconds - unit/keyspace
  1 seconds - unit/auth
  2 seconds - unit/info
  0 seconds - unit/quit
  3 seconds - unit/type/hash
  2 seconds - unit/acl
  5 seconds - unit/type/stream-cgroups
  0 seconds - unit/acl-v2
  7 seconds - unit/scan
  7 seconds - unit/sort
  7 seconds - unit/type/string
  6 seconds - unit/other
  10 seconds - unit/type/list-2
  6 seconds - unit/latency-monitor
  12 seconds - unit/type/set
  13 seconds - unit/expire
  13 seconds - unit/type/stream
  13 seconds - unit/type/list
  1 seconds - integration/aof-race
  8 seconds - integration/replication-2
  15 seconds - unit/multi
  11 seconds - integration/replication-3
  1 seconds - integration/convert-zipmap-hash-on-load
  0 seconds - integration/convert-ziplist-hash-on-load
  19 seconds - unit/type/zset
  1 seconds - integration/logging
  1 seconds - integration/convert-ziplist-zset-on-load
  8 seconds - integration/shutdown
  6 seconds - integration/rdb
  11 seconds - integration/replication-buffer
  10 seconds - integration/aof
  24 seconds - unit/dump
  1 seconds - integration/valkey-benchmark
  6 seconds - integration/psync2-master-restart
  5 seconds - integration/failover
  1 seconds - unit/pubsub
  21 seconds - integration/replication-4
  1 seconds - unit/pubsubshard
  15 seconds - integration/aof-multi-part
  2 seconds - unit/slowlog
  4 seconds - integration/dismiss-mem
  15 seconds - integration/corrupt-dump
  26 seconds - integration/block-repl
  1 seconds - unit/limits
  4 seconds - unit/functions
  9 seconds - integration/valkey-cli
  3 seconds - unit/bitops
  2 seconds - unit/bitfield
  20 seconds - integration/corrupt-dump-fuzzer
  16 seconds - integration/psync2-pingoff
  2 seconds - unit/memefficiency
  0 seconds - unit/lazyfree
  8 seconds - unit/introspection
  0 seconds - unit/tls
  1 seconds - unit/pause
  0 seconds - unit/oom-score-adj
  1 seconds - unit/shutdown
  2 seconds - unit/tracking
  11 seconds - unit/introspection-2
  0 seconds - unit/violations
  40 seconds - unit/type/list-3
  1 seconds - unit/replybufsize
  6 seconds - unit/querybuf
  22 seconds - integration/psync2-reg
  3 seconds - unit/cluster/announced-endpoints
  5 seconds - unit/client-eviction
  2 seconds - unit/cluster/scripting
  7 seconds - unit/networking
  15 seconds - unit/obuf-limits
  6 seconds - unit/cluster/misc
  0 seconds - unit/cluster/cluster-response-tls
  3 seconds - unit/cluster/multi-slot-operations
  3 seconds - unit/cluster/slot-ownership
  6 seconds - unit/cluster/human-announced-nodename
  23 seconds - unit/scripting
  8 seconds - unit/cluster/hostnames
  22 seconds - unit/geo
  16 seconds - unit/cluster/cli
  15 seconds - unit/cluster/links
  43 seconds - integration/psync2
  28 seconds - unit/wait
  26 seconds - unit/cluster/failure-marking
  47 seconds - unit/hyperloglog
  55 seconds - unit/maxmemory
  88 seconds - unit/aofrw
  160 seconds - integration/replication-psync
  287 seconds - integration/replication
  0 seconds - list-large-memory
  1 seconds - set-large-memory
  0 seconds - bitops-large-memory
  2 seconds - defrag
  1 seconds - violations

\o/ All tests passed without errors!

Cleanup: may take some time... OK
make[1]: Leaving directory '/tmp/src/valkey-7.2.9/src'
>>> valkey: Entering fakeroot...
cd src && make install
make[1]: Entering directory '/tmp/src/valkey-7.2.9/src'

Hint: It's a good idea to run 'make test' ;)

    [34;1mINSTALL[0m [37;1mvalkey-server[0m
    [34;1mINSTALL[0m [37;1mvalkey-benchmark[0m
    [34;1mINSTALL[0m [37;1mvalkey-cli[0m
    [34;1mINSTALL SYMLINK[0m [37;1mredis-server[0m -> [37;1mvalkey-server[0m  
    [34;1mINSTALL SYMLINK[0m [37;1mredis-cli[0m -> [37;1mvalkey-cli[0m  
    [34;1mINSTALL SYMLINK[0m [37;1mredis-benchmark[0m -> [37;1mvalkey-benchmark[0m  
    [34;1mINSTALL SYMLINK[0m [37;1mredis-check-rdb[0m -> [37;1mvalkey-check-rdb[0m  
    [34;1mINSTALL SYMLINK[0m [37;1mredis-check-aof[0m -> [37;1mvalkey-check-aof[0m  
    [34;1mINSTALL SYMLINK[0m [37;1mredis-sentinel[0m -> [37;1mvalkey-sentinel[0m  
make[1]: Leaving directory '/tmp/src/valkey-7.2.9/src'
>>> valkey-benchmark*: Running split function benchmark...
'usr/bin/valkey-benchmark' -> '/tmp/pkg/valkey-benchmark/usr/bin/valkey-benchmark'
>>> valkey-benchmark*: Preparing subpackage valkey-benchmark...
>>> valkey-benchmark*: Stripping binaries
>>> valkey-benchmark*: Running postcheck for valkey-benchmark
>>> valkey-cli*: Running split function cli...
'usr/bin/valkey-cli' -> '/tmp/pkg/valkey-cli/usr/bin/valkey-cli'
>>> valkey-cli*: Preparing subpackage valkey-cli...
>>> valkey-cli*: Stripping binaries
>>> valkey-cli*: Running postcheck for valkey-cli
>>> valkey-compat*: Running split function compat...
'usr/bin/redis-benchmark' -> '/tmp/pkg/valkey-compat/usr/bin/redis-benchmark'
'usr/bin/redis-check-aof' -> '/tmp/pkg/valkey-compat/usr/bin/redis-check-aof'
'usr/bin/redis-check-rdb' -> '/tmp/pkg/valkey-compat/usr/bin/redis-check-rdb'
'usr/bin/redis-cli' -> '/tmp/pkg/valkey-compat/usr/bin/redis-cli'
'usr/bin/redis-sentinel' -> '/tmp/pkg/valkey-compat/usr/bin/redis-sentinel'
'usr/bin/redis-server' -> '/tmp/pkg/valkey-compat/usr/bin/redis-server'
>>> valkey-compat*: Preparing subpackage valkey-compat...
>>> valkey-compat*: Script found. /bin/sh added as a dependency for valkey-compat-7.2.9-r0.apk
>>> valkey-compat*: Adding .pre-install
>>> valkey-compat*: Running postcheck for valkey-compat
>>> valkey-openrc*: Running split function openrc...
'etc/conf.d' -> '/tmp/pkg/valkey-openrc/etc/conf.d'
'etc/init.d' -> '/tmp/pkg/valkey-openrc/etc/init.d'
>>> valkey-openrc*: Preparing subpackage valkey-openrc...
>>> valkey-openrc*: Running postcheck for valkey-openrc
>>> valkey*: Running postcheck for valkey
>>> valkey*: Preparing package valkey...
>>> valkey*: Stripping binaries
>>> valkey*: Script found. /bin/sh added as a dependency for valkey-7.2.9-r0.apk
>>> valkey*: Adding .pre-install
>>> valkey*: Adding .post-install
>>> valkey-benchmark*: Scanning shared objects
>>> valkey-cli*: Scanning shared objects
>>> valkey-compat*: Scanning shared objects
>>> valkey-openrc*: Scanning shared objects
>>> valkey*: Scanning shared objects
>>> valkey-benchmark*: Tracing dependencies...
	so:libc.musl-x86_64.so.1
	so:libcrypto.so.3
	so:libssl.so.3
>>> valkey-benchmark*: Package size: 382.5 KB
>>> valkey-benchmark*: Compressing data...
>>> valkey-benchmark*: Create checksum...
>>> valkey-benchmark*: Create valkey-benchmark-7.2.9-r0.apk
>>> valkey-cli*: Tracing dependencies...
	so:libc.musl-x86_64.so.1
	so:libcrypto.so.3
	so:libssl.so.3
>>> valkey-cli*: Package size: 489.4 KB
>>> valkey-cli*: Compressing data...
>>> valkey-cli*: Create checksum...
>>> valkey-cli*: Create valkey-cli-7.2.9-r0.apk
>>> valkey-compat*: Tracing dependencies...
	!redis
	!redict-compat
	/bin/sh
	valkey-cli=7.2.9-r0
	valkey=7.2.9-r0
>>> valkey-compat*: Package size: 1.0 B
>>> valkey-compat*: Compressing data...
>>> valkey-compat*: Create checksum...
>>> valkey-compat*: Create valkey-compat-7.2.9-r0.apk
>>> valkey-openrc*: Tracing dependencies...
>>> valkey-openrc*: Package size: 2.3 KB
>>> valkey-openrc*: Compressing data...
>>> valkey-openrc*: Create checksum...
>>> valkey-openrc*: Create valkey-openrc-7.2.9-r0.apk
>>> valkey*: Tracing dependencies...
	/bin/sh
	so:libc.musl-x86_64.so.1
	so:libcrypto.so.3
	so:libssl.so.3
>>> valkey*: Package size: 2.6 MB
>>> valkey*: Compressing data...
>>> valkey*: Create checksum...
>>> valkey*: Create valkey-7.2.9-r0.apk
>>> valkey: Updating the main/x86_64 repository index...
>>> valkey: Signing the index...
>>> valkey: Cleaning up srcdir
>>> valkey: Cleaning up build chroot
>>> valkey: Cleaning up pkgdir
