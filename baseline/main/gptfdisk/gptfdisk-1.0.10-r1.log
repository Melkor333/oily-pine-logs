>>> gptfdisk: Validating /home/packager/oily-pine/main/gptfdisk/APKBUILD...
>>> gptfdisk: Cleaning up srcdir
>>> gptfdisk: Cleaning up pkgdir
>>> gptfdisk: Cleaning up tmpdir
>>> gptfdisk: Fetching https://downloads.sourceforge.net/project/gptfdisk/gptfdisk/1.0.10/gptfdisk-1.0.10.tar.gz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   385  100   385    0     0   1429      0 --:--:-- --:--:-- --:--:--  1425
100  215k  100  215k    0     0   388k      0 --:--:-- --:--:-- --:--:--  388k
>>> gptfdisk: Fetching https://downloads.sourceforge.net/project/gptfdisk/gptfdisk/1.0.10/gptfdisk-1.0.10.tar.gz
>>> gptfdisk: Checking sha512sums...
gptfdisk-1.0.10.tar.gz: OK
fix-wrong-include.patch: OK
fix-musl.patch: OK
>>> gptfdisk: Preparing build chroot...
fetch http://dl-cdn.alpinelinux.org/alpine/edge/main/x86_64/APKINDEX.tar.gz
(1/94) Installing musl (1.2.5-r10)
(2/94) Installing libcrypto3 (3.5.0-r0)
(3/94) Installing ca-certificates-bundle (20241121-r2)
(4/94) Installing libssl3 (3.5.0-r0)
(5/94) Installing zlib (1.3.1-r2)
(6/94) Installing libapk2 (2.14.9-r2)
(7/94) Installing apk-tools (2.14.9-r2)
(8/94) Installing libcap2 (2.76-r0)
(9/94) Installing libcap-getcap (2.76-r0)
(10/94) Installing fakeroot (1.37.1.1-r0)
(11/94) Installing scanelf (1.3.8-r1)
(12/94) Installing musl-utils (1.2.5-r10)
(13/94) Installing libgcc (14.3.0-r1)
(14/94) Installing libstdc++ (14.3.0-r1)
(15/94) Installing lzip (1.25-r0)
(16/94) Installing openssl (3.5.0-r0)
(17/94) Installing patch (2.8-r0)
(18/94) Installing pkgconf (2.4.3-r0)
(19/94) Installing acl-libs (2.3.2-r1)
(20/94) Installing tar (1.35-r3)
(21/94) Installing busybox (1.37.0-r18)
Executing busybox-1.37.0-r18.post-install
(22/94) Installing ssl_client (1.37.0-r18)
(23/94) Installing busybox-binsh (1.37.0-r18)
(24/94) Installing abuild (3.15.0-r0)
Executing abuild-3.15.0-r0.pre-install
(25/94) Installing abuild-sudo (3.15.0-r0)
(26/94) Installing alpine-baselayout-data (3.7.0-r0)
(27/94) Installing alpine-baselayout (3.7.0-r0)
Executing alpine-baselayout-3.7.0-r0.pre-install
Executing alpine-baselayout-3.7.0-r0.post-install
(28/94) Installing bridge (1.5-r5)
(29/94) Installing ifupdown-ng (0.12.1-r7)
(30/94) Installing openrc-user (0.62.2-r2)
(31/94) Installing openrc (0.62.2-r2)
Executing openrc-0.62.2-r2.post-install
(32/94) Installing mdev-conf (4.8-r0)
(33/94) Installing busybox-mdev-openrc (1.37.0-r18)
(34/94) Installing alpine-conf (3.20.0-r0)
(35/94) Installing alpine-keys (2.5-r0)
(36/94) Installing alpine-release (3.22.0-r0)
(37/94) Installing busybox-openrc (1.37.0-r18)
(38/94) Installing busybox-suid (1.37.0-r18)
(39/94) Installing alpine-base (3.22.0-r0)
(40/94) Installing jansson (2.14.1-r0)
(41/94) Installing zstd-libs (1.5.7-r0)
(42/94) Installing binutils (2.44-r0)
(43/94) Installing libmagic (5.46-r2)
(44/94) Installing file (5.46-r2)
(45/94) Installing libgomp (14.3.0-r1)
(46/94) Installing libatomic (14.3.0-r1)
(47/94) Installing gmp (6.3.0-r3)
(48/94) Installing isl26 (0.26-r1)
(49/94) Installing mpfr4 (4.2.1_p1-r0)
(50/94) Installing mpc1 (1.3.1-r1)
(51/94) Installing gcc (14.3.0-r1)
(52/94) Installing libstdc++-dev (14.3.0-r1)
(53/94) Installing musl-dev (1.2.5-r10)
(54/94) Installing g++ (14.3.0-r1)
(55/94) Installing make (4.4.1-r3)
(56/94) Installing fortify-headers (1.1-r5)
(57/94) Installing build-base (0.5-r3)
(58/94) Installing libeconf (0.6.3-r0)
(59/94) Installing libblkid (2.41-r9)
(60/94) Installing libuuid (2.41-r9)
(61/94) Installing libfdisk (2.41-r9)
(62/94) Installing sqlite-libs (3.50.0-r0)
(63/94) Installing liblastlog2 (2.41-r9)
(64/94) Installing libmount (2.41-r9)
(65/94) Installing libsmartcols (2.41-r9)
(66/94) Installing ncurses-terminfo-base (6.5_p20250503-r0)
(67/94) Installing libncursesw (6.5_p20250503-r0)
(68/94) Installing readline (8.2.13-r1)
(69/94) Installing sqlite (3.50.0-r0)
(70/94) Installing sqlite-dev (3.50.0-r0)
(71/94) Installing util-linux-dev (2.41-r9)
(72/94) Installing gawk (5.3.2-r1)
(73/94) Installing libcom_err (1.47.2-r2)
(74/94) Installing e2fsprogs-libs (1.47.2-r2)
(75/94) Installing e2fsprogs-dev (1.47.2-r2)
(76/94) Installing brotli-libs (1.1.0-r2)
(77/94) Installing c-ares (1.34.5-r0)
(78/94) Installing libunistring (1.3-r0)
(79/94) Installing libidn2 (2.3.7-r0)
(80/94) Installing nghttp2-libs (1.65.0-r0)
(81/94) Installing libpsl (0.21.5-r3)
(82/94) Installing libcurl (8.14.0-r2)
(83/94) Installing libexpat (2.7.1-r0)
(84/94) Installing pcre2 (10.43-r1)
(85/94) Installing git (2.49.0-r0)
(86/94) Installing git-init-template (2.49.0-r0)
(87/94) Installing linux-headers (6.14.2-r0)
(88/94) Installing libformw (6.5_p20250503-r0)
(89/94) Installing libmenuw (6.5_p20250503-r0)
(90/94) Installing libpanelw (6.5_p20250503-r0)
(91/94) Installing libncurses++ (6.5_p20250503-r0)
(92/94) Installing ncurses-dev (6.5_p20250503-r0)
(93/94) Installing popt (1.19-r4)
(94/94) Installing popt-dev (1.19-r4)
Executing busybox-1.37.0-r18.trigger
OK: 273 MiB in 94 packages
>>> gptfdisk: Fetching https://downloads.sourceforge.net/project/gptfdisk/gptfdisk/1.0.10/gptfdisk-1.0.10.tar.gz
>>> gptfdisk: Checking sha512sums...
gptfdisk-1.0.10.tar.gz: OK
fix-wrong-include.patch: OK
fix-musl.patch: OK
>>> gptfdisk: Unpacking /var/cache/distfiles/gptfdisk-1.0.10.tar.gz...
>>> gptfdisk: fix-wrong-include.patch
patching file gptcurses.cc
>>> gptfdisk: fix-musl.patch
patching file diskio-unix.cc
Hunk #1 succeeded at 56 (offset 4 lines).
Hunk #2 succeeded at 82 (offset 4 lines).
Hunk #3 succeeded at 315 (offset 4 lines).
Hunk #4 succeeded at 324 (offset 4 lines).
Hunk #5 succeeded at 432 (offset 4 lines).
Hunk #6 succeeded at 492 (offset 4 lines).
TARGET is not set; trying to determine target based on host OS....
Detected OS is Linux
Build target is linux
c++ -Os -fstack-clash-protection -Wformat -Werror=format-security -D_GLIBCXX_ASSERTIONS=1 -D_LIBCPP_ENABLE_THREAD_SAFETY_ANNOTATIONS=1 -D_LIBCPP_ENABLE_HARDENED_MODE=1 -fno-plt -O2 -Wall -D_FILE_OFFSET_BITS=64   -c -o crc32.o crc32.cc
c++ -Os -fstack-clash-protection -Wformat -Werror=format-security -D_GLIBCXX_ASSERTIONS=1 -D_LIBCPP_ENABLE_THREAD_SAFETY_ANNOTATIONS=1 -D_LIBCPP_ENABLE_HARDENED_MODE=1 -fno-plt -O2 -Wall -D_FILE_OFFSET_BITS=64   -c -o support.o support.cc
c++ -Os -fstack-clash-protection -Wformat -Werror=format-security -D_GLIBCXX_ASSERTIONS=1 -D_LIBCPP_ENABLE_THREAD_SAFETY_ANNOTATIONS=1 -D_LIBCPP_ENABLE_HARDENED_MODE=1 -fno-plt -O2 -Wall -D_FILE_OFFSET_BITS=64   -c -o guid.o guid.cc
c++ -Os -fstack-clash-protection -Wformat -Werror=format-security -D_GLIBCXX_ASSERTIONS=1 -D_LIBCPP_ENABLE_THREAD_SAFETY_ANNOTATIONS=1 -D_LIBCPP_ENABLE_HARDENED_MODE=1 -fno-plt -O2 -Wall -D_FILE_OFFSET_BITS=64   -c -o gptpart.o gptpart.cc
c++ -Os -fstack-clash-protection -Wformat -Werror=format-security -D_GLIBCXX_ASSERTIONS=1 -D_LIBCPP_ENABLE_THREAD_SAFETY_ANNOTATIONS=1 -D_LIBCPP_ENABLE_HARDENED_MODE=1 -fno-plt -O2 -Wall -D_FILE_OFFSET_BITS=64   -c -o mbrpart.o mbrpart.cc
c++ -Os -fstack-clash-protection -Wformat -Werror=format-security -D_GLIBCXX_ASSERTIONS=1 -D_LIBCPP_ENABLE_THREAD_SAFETY_ANNOTATIONS=1 -D_LIBCPP_ENABLE_HARDENED_MODE=1 -fno-plt -O2 -Wall -D_FILE_OFFSET_BITS=64   -c -o basicmbr.o basicmbr.cc
c++ -Os -fstack-clash-protection -Wformat -Werror=format-security -D_GLIBCXX_ASSERTIONS=1 -D_LIBCPP_ENABLE_THREAD_SAFETY_ANNOTATIONS=1 -D_LIBCPP_ENABLE_HARDENED_MODE=1 -fno-plt -O2 -Wall -D_FILE_OFFSET_BITS=64   -c -o mbr.o mbr.cc
c++ -Os -fstack-clash-protection -Wformat -Werror=format-security -D_GLIBCXX_ASSERTIONS=1 -D_LIBCPP_ENABLE_THREAD_SAFETY_ANNOTATIONS=1 -D_LIBCPP_ENABLE_HARDENED_MODE=1 -fno-plt -O2 -Wall -D_FILE_OFFSET_BITS=64   -c -o gpt.o gpt.cc
c++ -Os -fstack-clash-protection -Wformat -Werror=format-security -D_GLIBCXX_ASSERTIONS=1 -D_LIBCPP_ENABLE_THREAD_SAFETY_ANNOTATIONS=1 -D_LIBCPP_ENABLE_HARDENED_MODE=1 -fno-plt -O2 -Wall -D_FILE_OFFSET_BITS=64   -c -o bsd.o bsd.cc
c++ -Os -fstack-clash-protection -Wformat -Werror=format-security -D_GLIBCXX_ASSERTIONS=1 -D_LIBCPP_ENABLE_THREAD_SAFETY_ANNOTATIONS=1 -D_LIBCPP_ENABLE_HARDENED_MODE=1 -fno-plt -O2 -Wall -D_FILE_OFFSET_BITS=64   -c -o parttypes.o parttypes.cc
c++ -Os -fstack-clash-protection -Wformat -Werror=format-security -D_GLIBCXX_ASSERTIONS=1 -D_LIBCPP_ENABLE_THREAD_SAFETY_ANNOTATIONS=1 -D_LIBCPP_ENABLE_HARDENED_MODE=1 -fno-plt -O2 -Wall -D_FILE_OFFSET_BITS=64   -c -o attributes.o attributes.cc
c++ -Os -fstack-clash-protection -Wformat -Werror=format-security -D_GLIBCXX_ASSERTIONS=1 -D_LIBCPP_ENABLE_THREAD_SAFETY_ANNOTATIONS=1 -D_LIBCPP_ENABLE_HARDENED_MODE=1 -fno-plt -O2 -Wall -D_FILE_OFFSET_BITS=64   -c -o diskio.o diskio.cc
c++ -Os -fstack-clash-protection -Wformat -Werror=format-security -D_GLIBCXX_ASSERTIONS=1 -D_LIBCPP_ENABLE_THREAD_SAFETY_ANNOTATIONS=1 -D_LIBCPP_ENABLE_HARDENED_MODE=1 -fno-plt -O2 -Wall -D_FILE_OFFSET_BITS=64   -c -o diskio-unix.o diskio-unix.cc
c++ -Os -fstack-clash-protection -Wformat -Werror=format-security -D_GLIBCXX_ASSERTIONS=1 -D_LIBCPP_ENABLE_THREAD_SAFETY_ANNOTATIONS=1 -D_LIBCPP_ENABLE_HARDENED_MODE=1 -fno-plt -O2 -Wall -D_FILE_OFFSET_BITS=64   -c -o gdisk.o gdisk.cc
c++ -Os -fstack-clash-protection -Wformat -Werror=format-security -D_GLIBCXX_ASSERTIONS=1 -D_LIBCPP_ENABLE_THREAD_SAFETY_ANNOTATIONS=1 -D_LIBCPP_ENABLE_HARDENED_MODE=1 -fno-plt -O2 -Wall -D_FILE_OFFSET_BITS=64   -c -o gpttext.o gpttext.cc
c++ -Os -fstack-clash-protection -Wformat -Werror=format-security -D_GLIBCXX_ASSERTIONS=1 -D_LIBCPP_ENABLE_THREAD_SAFETY_ANNOTATIONS=1 -D_LIBCPP_ENABLE_HARDENED_MODE=1 -fno-plt -O2 -Wall -D_FILE_OFFSET_BITS=64   -c -o cgdisk.o cgdisk.cc
c++ -Os -fstack-clash-protection -Wformat -Werror=format-security -D_GLIBCXX_ASSERTIONS=1 -D_LIBCPP_ENABLE_THREAD_SAFETY_ANNOTATIONS=1 -D_LIBCPP_ENABLE_HARDENED_MODE=1 -fno-plt -O2 -Wall -D_FILE_OFFSET_BITS=64   -c -o gptcurses.o gptcurses.cc
c++ -Os -fstack-clash-protection -Wformat -Werror=format-security -D_GLIBCXX_ASSERTIONS=1 -D_LIBCPP_ENABLE_THREAD_SAFETY_ANNOTATIONS=1 -D_LIBCPP_ENABLE_HARDENED_MODE=1 -fno-plt -O2 -Wall -D_FILE_OFFSET_BITS=64   -c -o sgdisk.o sgdisk.cc
c++ -Os -fstack-clash-protection -Wformat -Werror=format-security -D_GLIBCXX_ASSERTIONS=1 -D_LIBCPP_ENABLE_THREAD_SAFETY_ANNOTATIONS=1 -D_LIBCPP_ENABLE_HARDENED_MODE=1 -fno-plt -O2 -Wall -D_FILE_OFFSET_BITS=64   -c -o gptcl.o gptcl.cc
c++ -Os -fstack-clash-protection -Wformat -Werror=format-security -D_GLIBCXX_ASSERTIONS=1 -D_LIBCPP_ENABLE_THREAD_SAFETY_ANNOTATIONS=1 -D_LIBCPP_ENABLE_HARDENED_MODE=1 -fno-plt -O2 -Wall -D_FILE_OFFSET_BITS=64   -c -o fixparts.o fixparts.cc
c++ support.o diskio.o diskio-unix.o basicmbr.o mbrpart.o fixparts.o -Wl,--as-needed,-O1,--sort-common -Wl,-z,pack-relative-relocs  -o fixparts
c++ crc32.o support.o guid.o gptpart.o mbrpart.o basicmbr.o mbr.o gpt.o bsd.o parttypes.o attributes.o diskio.o diskio-unix.o gdisk.o gpttext.o -Wl,--as-needed,-O1,--sort-common -Wl,-z,pack-relative-relocs -luuid   -o gdisk
c++ crc32.o support.o guid.o gptpart.o mbrpart.o basicmbr.o mbr.o gpt.o bsd.o parttypes.o attributes.o diskio.o diskio-unix.o cgdisk.o gptcurses.o -Wl,--as-needed,-O1,--sort-common -Wl,-z,pack-relative-relocs -luuid  -lncursesw -o cgdisk
c++ crc32.o support.o guid.o gptpart.o mbrpart.o basicmbr.o mbr.o gpt.o bsd.o parttypes.o attributes.o diskio.o diskio-unix.o sgdisk.o gptcl.o -Wl,--as-needed,-O1,--sort-common -Wl,-z,pack-relative-relocs -luuid  -lpopt  -o sgdisk
[0;32m**SUCCESS**[m Temp disk sucessfully created

[0;34m**Testing gdisk binary**[m

GPT fdisk (gdisk) version 1.0.10

Partition table scan:
  MBR: not present
  BSD: not present
  APM: not present
  GPT: not present

Creating new GPT entries in memory.

Command (? for help): This option deletes all partitions and creates a new protective MBR.
Proceed? (Y/N): 
Command (? for help): 
Final checks complete. About to write GPT data. THIS WILL OVERWRITE EXISTING
PARTITIONS!!

Do you want to proceed? (Y/N): OK; writing new GUID partition table (GPT) to /tmp/tmp.DhBbaa.
Warning: The kernel is still using the old partition table.
The new table will be used at the next reboot or after you
run partprobe(8) or kpartx(8)
The operation has completed successfully.
[0;32m**SUCCESS**[m Create new empty GPT table

GPT fdisk (gdisk) version 1.0.10

Partition table scan:
  MBR: protective
  BSD: not present
  APM: not present
  GPT: present

Found valid GPT with protective MBR; using GPT.

Command (? for help): Partition number (1-128, default 1): First sector (34-131038, default = 2048) or {+-}size{KMGTP}: Last sector (2048-131038, default = 129023) or {+-}size{KMGTP}: Current type is 8300 (Linux filesystem)
Hex code or GUID (L to show codes, Enter = 8300): Changed type of partition to 'Linux filesystem'

Command (? for help): 
Final checks complete. About to write GPT data. THIS WILL OVERWRITE EXISTING
PARTITIONS!!

Do you want to proceed? (Y/N): OK; writing new GUID partition table (GPT) to /tmp/tmp.DhBbaa.
Warning: The kernel is still using the old partition table.
The new table will be used at the next reboot or after you
run partprobe(8) or kpartx(8)
The operation has completed successfully.
[0;32m**SUCCESS**[m Create new partition

GPT fdisk (gdisk) version 1.0.10

Partition table scan:
  MBR: protective
  BSD: not present
  APM: not present
  GPT: present

Found valid GPT with protective MBR; using GPT.

Command (? for help): Using 1
Enter name: 
Command (? for help): 
Final checks complete. About to write GPT data. THIS WILL OVERWRITE EXISTING
PARTITIONS!!

Do you want to proceed? (Y/N): OK; writing new GUID partition table (GPT) to /tmp/tmp.DhBbaa.
Warning: The kernel is still using the old partition table.
The new table will be used at the next reboot or after you
run partprobe(8) or kpartx(8)
The operation has completed successfully.
[0;32m**SUCCESS**[m Change partition 1 name (Linux filesystem -> cgYWLKGQ)

GPT fdisk (gdisk) version 1.0.10

Partition table scan:
  MBR: protective
  BSD: not present
  APM: not present
  GPT: present

Found valid GPT with protective MBR; using GPT.

Command (? for help): Using 1
Current type is 8300 (Linux filesystem)
Hex code or GUID (L to show codes, Enter = 8300): Changed type of partition to 'Linux swap'

Command (? for help): 
Final checks complete. About to write GPT data. THIS WILL OVERWRITE EXISTING
PARTITIONS!!

Do you want to proceed? (Y/N): OK; writing new GUID partition table (GPT) to /tmp/tmp.DhBbaa.
Warning: The kernel is still using the old partition table.
The new table will be used at the next reboot or after you
run partprobe(8) or kpartx(8)
The operation has completed successfully.
[0;32m**SUCCESS**[m Change partition 1 type (8300 -> 8200)

GPT fdisk (gdisk) version 1.0.10

Partition table scan:
  MBR: protective
  BSD: not present
  APM: not present
  GPT: present

Found valid GPT with protective MBR; using GPT.

Command (? for help): Enter backup filename to save: The operation has completed successfully.

Command (? for help): 
[0;32m**SUCCESS**[m GPT data backuped sucessfully
GPT fdisk (gdisk) version 1.0.10

Partition table scan:
  MBR: protective
  BSD: not present
  APM: not present
  GPT: present

Found valid GPT with protective MBR; using GPT.

Command (? for help): Using 1

Command (? for help): 
Final checks complete. About to write GPT data. THIS WILL OVERWRITE EXISTING
PARTITIONS!!

Do you want to proceed? (Y/N): OK; writing new GUID partition table (GPT) to /tmp/tmp.DhBbaa.
Warning: The kernel is still using the old partition table.
The new table will be used at the next reboot or after you
run partprobe(8) or kpartx(8)
The operation has completed successfully.
[0;32m**SUCCESS**[m Delete partition 1

GPT fdisk (gdisk) version 1.0.10

Partition table scan:
  MBR: protective
  BSD: not present
  APM: not present
  GPT: present

Found valid GPT with protective MBR; using GPT.

Command (? for help): 
Recovery/transformation command (? for help): b	use backup GPT header (rebuilding main)
c	load backup partition table from disk (rebuilding main)
d	use main GPT header (rebuilding backup)
e	load main partition table from disk (rebuilding backup)
f	load MBR and build fresh GPT from it
g	convert GPT into MBR and exit
h	make hybrid MBR
i	show detailed information on a partition
l	load partition data from a backup file
m	return to main menu
o	print protective MBR data
p	print the partition table
q	quit without saving changes
t	transform BSD disklabel partition
v	verify disk
w	write table to disk and exit
x	extra functionality (experts only)
?	print this menu

Recovery/transformation command (? for help): Enter backup filename to load: 
Recovery/transformation command (? for help): 
Final checks complete. About to write GPT data. THIS WILL OVERWRITE EXISTING
PARTITIONS!!

Do you want to proceed? (Y/N): OK; writing new GUID partition table (GPT) to /tmp/tmp.DhBbaa.
Warning: The kernel is still using the old partition table.
The new table will be used at the next reboot or after you
run partprobe(8) or kpartx(8)
The operation has completed successfully.
[0;32m**SUCCESS**[m Restore the GPT backup

GPT fdisk (gdisk) version 1.0.10

Partition table scan:
  MBR: protective
  BSD: not present
  APM: not present
  GPT: present

Found valid GPT with protective MBR; using GPT.

Command (? for help): 
Expert command (? for help): Enter the disk's unique GUID ('R' to randomize): The new disk GUID is 28B562DA-A8BA-4A70-A0E4-2038DE59A383

Expert command (? for help): 
Final checks complete. About to write GPT data. THIS WILL OVERWRITE EXISTING
PARTITIONS!!

Do you want to proceed? (Y/N): OK; writing new GUID partition table (GPT) to /tmp/tmp.DhBbaa.
Warning: The kernel is still using the old partition table.
The new table will be used at the next reboot or after you
run partprobe(8) or kpartx(8)
The operation has completed successfully.
[0;32m**SUCCESS**[m GUID of disk has been sucessfully changed
GPT fdisk (gdisk) version 1.0.10

Partition table scan:
  MBR: protective
  BSD: not present
  APM: not present
  GPT: present

Found valid GPT with protective MBR; using GPT.

Command (? for help): 
Expert command (? for help): About to wipe out GPT on /tmp/tmp.DhBbaa. Proceed? (Y/N): Warning: The kernel is still using the old partition table.
The new table will be used at the next reboot or after you
run partprobe(8) or kpartx(8)
GPT data structures destroyed! You may now partition the disk using fdisk or
other utilities.
Blank out MBR? (Y/N): [0;32m**SUCCESS**[m Wipe GPT table

Creating new GPT entries in memory.
[0;32m**SUCCESS**[m EOF successfully exit gdisk

[0;34m**Testing sgdisk binary**[m

Creating new GPT entries in memory.
Warning: The kernel is still using the old partition table.
The new table will be used at the next reboot or after you
run partprobe(8) or kpartx(8)
The operation has completed successfully.
[0;32m**SUCCESS**[m Create new empty GPT table

Warning: The kernel is still using the old partition table.
The new table will be used at the next reboot or after you
run partprobe(8) or kpartx(8)
The operation has completed successfully.
[0;32m**SUCCESS**[m Create new partition

Warning: The kernel is still using the old partition table.
The new table will be used at the next reboot or after you
run partprobe(8) or kpartx(8)
The operation has completed successfully.
[0;32m**SUCCESS**[m Change partition 1 name (Linux filesystem -> cgYWLKGQ)

Warning: The kernel is still using the old partition table.
The new table will be used at the next reboot or after you
run partprobe(8) or kpartx(8)
The operation has completed successfully.
[0;32m**SUCCESS**[m Change partition 1 type (8300 -> 8200)

The operation has completed successfully.
[0;32m**SUCCESS**[m GPT data backuped sucessfully
Warning: The kernel is still using the old partition table.
The new table will be used at the next reboot or after you
run partprobe(8) or kpartx(8)
The operation has completed successfully.
[0;32m**SUCCESS**[m Delete partition 1

GPT fdisk (gdisk) version 1.0.10

Partition table scan:
  MBR: protective
  BSD: not present
  APM: not present
  GPT: present

Found valid GPT with protective MBR; using GPT.

Command (? for help): 
Recovery/transformation command (? for help): b	use backup GPT header (rebuilding main)
c	load backup partition table from disk (rebuilding main)
d	use main GPT header (rebuilding backup)
e	load main partition table from disk (rebuilding backup)
f	load MBR and build fresh GPT from it
g	convert GPT into MBR and exit
h	make hybrid MBR
i	show detailed information on a partition
l	load partition data from a backup file
m	return to main menu
o	print protective MBR data
p	print the partition table
q	quit without saving changes
t	transform BSD disklabel partition
v	verify disk
w	write table to disk and exit
x	extra functionality (experts only)
?	print this menu

Recovery/transformation command (? for help): Enter backup filename to load: 
Recovery/transformation command (? for help): 
Final checks complete. About to write GPT data. THIS WILL OVERWRITE EXISTING
PARTITIONS!!

Do you want to proceed? (Y/N): OK; writing new GUID partition table (GPT) to /tmp/tmp.DhBbaa.
Warning: The kernel is still using the old partition table.
The new table will be used at the next reboot or after you
run partprobe(8) or kpartx(8)
The operation has completed successfully.
[0;32m**SUCCESS**[m Restore the GPT backup

Warning: The kernel is still using the old partition table.
The new table will be used at the next reboot or after you
run partprobe(8) or kpartx(8)
The operation has completed successfully.
[0;32m**SUCCESS**[m GUID of disk has been sucessfully changed
Warning: The kernel is still using the old partition table.
The new table will be used at the next reboot or after you
run partprobe(8) or kpartx(8)
GPT data structures destroyed! You may now partition the disk using fdisk or
other utilities.
[0;32m**SUCCESS**[m Wipe GPT table

Creating new GPT entries in memory.
[0;32m**SUCCESS**[m EOF successfully exit gdisk
>>> gptfdisk: Entering fakeroot...
>>> gptfdisk-doc*: Running split function doc...
'usr/share/man' -> '/tmp/pkg/gptfdisk-doc/usr/share/man'
>>> gptfdisk-doc*: Preparing subpackage gptfdisk-doc...
>>> gptfdisk-doc*: Running postcheck for gptfdisk-doc
>>> sgdisk*: Running split function sgdisk...
'usr/bin/sgdisk' -> '/tmp/pkg/sgdisk/usr/bin/sgdisk'
>>> sgdisk*: Preparing subpackage sgdisk...
>>> sgdisk*: Stripping binaries
>>> sgdisk*: Running postcheck for sgdisk
>>> gptfdisk*: Running postcheck for gptfdisk
>>> gptfdisk*: Preparing package gptfdisk...
>>> gptfdisk*: Stripping binaries
>>> gptfdisk-doc*: Scanning shared objects
>>> gptfdisk*: Scanning shared objects
>>> sgdisk*: Scanning shared objects
>>> gptfdisk-doc*: Tracing dependencies...
>>> gptfdisk-doc*: Package size: 31.5 KB
>>> gptfdisk-doc*: Compressing data...
>>> gptfdisk-doc*: Create checksum...
>>> gptfdisk-doc*: Create gptfdisk-doc-1.0.10-r1.apk
>>> gptfdisk*: Tracing dependencies...
	so:libc.musl-x86_64.so.1
	so:libgcc_s.so.1
	so:libncursesw.so.6
	so:libstdc++.so.6
	so:libuuid.so.1
>>> gptfdisk*: Package size: 590.5 KB
>>> gptfdisk*: Compressing data...
>>> gptfdisk*: Create checksum...
>>> gptfdisk*: Create gptfdisk-1.0.10-r1.apk
>>> sgdisk*: Tracing dependencies...
	so:libc.musl-x86_64.so.1
	so:libgcc_s.so.1
	so:libpopt.so.0
	so:libstdc++.so.6
	so:libuuid.so.1
>>> sgdisk*: Package size: 238.2 KB
>>> sgdisk*: Compressing data...
>>> sgdisk*: Create checksum...
>>> sgdisk*: Create sgdisk-1.0.10-r1.apk
>>> gptfdisk: Updating the main/x86_64 repository index...
>>> gptfdisk: Signing the index...
>>> gptfdisk: Cleaning up srcdir
>>> gptfdisk: Cleaning up build chroot
>>> gptfdisk: Cleaning up pkgdir
