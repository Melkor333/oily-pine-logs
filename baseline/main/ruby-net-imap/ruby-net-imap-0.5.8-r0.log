>>> ruby-net-imap: Validating /home/packager/oily-pine/main/ruby-net-imap/APKBUILD...
>>> ruby-net-imap: Cleaning up srcdir
>>> ruby-net-imap: Cleaning up pkgdir
>>> ruby-net-imap: Cleaning up tmpdir
>>> ruby-net-imap: Fetching https://github.com/ruby/net-imap/archive/v0.5.8/net-imap-0.5.8.tar.gz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100  152k    0  152k    0     0   193k      0 --:--:-- --:--:-- --:--:--  193k100  292k    0  292k    0     0   367k      0 --:--:-- --:--:-- --:--:-- 12.4M
>>> ruby-net-imap: Fetching https://github.com/ruby/net-imap/archive/v0.5.8/net-imap-0.5.8.tar.gz
>>> ruby-net-imap: Checking sha512sums...
net-imap-0.5.8.tar.gz: OK
gemspec.patch: OK
no-simplecov.patch: OK
>>> ruby-net-imap: Preparing build chroot...
fetch http://dl-cdn.alpinelinux.org/alpine/edge/main/x86_64/APKINDEX.tar.gz
(1/80) Installing musl (1.2.5-r10)
(2/80) Installing libcrypto3 (3.5.0-r0)
(3/80) Installing ca-certificates-bundle (20241121-r2)
(4/80) Installing libssl3 (3.5.0-r0)
(5/80) Installing zlib (1.3.1-r2)
(6/80) Installing libapk2 (2.14.9-r2)
(7/80) Installing apk-tools (2.14.9-r2)
(8/80) Installing libcap2 (2.76-r0)
(9/80) Installing libcap-getcap (2.76-r0)
(10/80) Installing fakeroot (1.37.1.1-r0)
(11/80) Installing scanelf (1.3.8-r1)
(12/80) Installing musl-utils (1.2.5-r10)
(13/80) Installing libgcc (14.3.0-r1)
(14/80) Installing libstdc++ (14.3.0-r1)
(15/80) Installing lzip (1.25-r0)
(16/80) Installing openssl (3.5.0-r0)
(17/80) Installing patch (2.8-r0)
(18/80) Installing pkgconf (2.4.3-r0)
(19/80) Installing acl-libs (2.3.2-r1)
(20/80) Installing tar (1.35-r3)
(21/80) Installing busybox (1.37.0-r18)
Executing busybox-1.37.0-r18.post-install
(22/80) Installing ssl_client (1.37.0-r18)
(23/80) Installing busybox-binsh (1.37.0-r18)
(24/80) Installing abuild (3.15.0-r0)
Executing abuild-3.15.0-r0.pre-install
(25/80) Installing abuild-sudo (3.15.0-r0)
(26/80) Installing alpine-baselayout-data (3.7.0-r0)
(27/80) Installing alpine-baselayout (3.7.0-r0)
Executing alpine-baselayout-3.7.0-r0.pre-install
Executing alpine-baselayout-3.7.0-r0.post-install
(28/80) Installing bridge (1.5-r5)
(29/80) Installing ifupdown-ng (0.12.1-r7)
(30/80) Installing openrc-user (0.62.2-r2)
(31/80) Installing openrc (0.62.2-r2)
Executing openrc-0.62.2-r2.post-install
(32/80) Installing mdev-conf (4.8-r0)
(33/80) Installing busybox-mdev-openrc (1.37.0-r18)
(34/80) Installing alpine-conf (3.20.0-r0)
(35/80) Installing alpine-keys (2.5-r0)
(36/80) Installing alpine-release (3.22.0-r0)
(37/80) Installing busybox-openrc (1.37.0-r18)
(38/80) Installing busybox-suid (1.37.0-r18)
(39/80) Installing alpine-base (3.22.0-r0)
(40/80) Installing jansson (2.14.1-r0)
(41/80) Installing zstd-libs (1.5.7-r0)
(42/80) Installing binutils (2.44-r0)
(43/80) Installing libmagic (5.46-r2)
(44/80) Installing file (5.46-r2)
(45/80) Installing libgomp (14.3.0-r1)
(46/80) Installing libatomic (14.3.0-r1)
(47/80) Installing gmp (6.3.0-r3)
(48/80) Installing isl26 (0.26-r1)
(49/80) Installing mpfr4 (4.2.1_p1-r0)
(50/80) Installing mpc1 (1.3.1-r1)
(51/80) Installing gcc (14.3.0-r1)
(52/80) Installing libstdc++-dev (14.3.0-r1)
(53/80) Installing musl-dev (1.2.5-r10)
(54/80) Installing g++ (14.3.0-r1)
(55/80) Installing make (4.4.1-r3)
(56/80) Installing fortify-headers (1.1-r5)
(57/80) Installing build-base (0.5-r3)
(58/80) Installing brotli-libs (1.1.0-r2)
(59/80) Installing c-ares (1.34.5-r0)
(60/80) Installing libunistring (1.3-r0)
(61/80) Installing libidn2 (2.3.7-r0)
(62/80) Installing nghttp2-libs (1.65.0-r0)
(63/80) Installing libpsl (0.21.5-r3)
(64/80) Installing libcurl (8.14.0-r2)
(65/80) Installing libexpat (2.7.1-r0)
(66/80) Installing pcre2 (10.43-r1)
(67/80) Installing git (2.49.0-r0)
(68/80) Installing git-init-template (2.49.0-r0)
(69/80) Installing ca-certificates (20241121-r2)
(70/80) Installing libffi (3.4.8-r0)
(71/80) Installing yaml (0.2.5-r2)
(72/80) Installing ruby-libs (3.4.4-r0)
(73/80) Installing libucontext (1.3.2-r0)
(74/80) Installing ruby (3.4.4-r0)
(75/80) Installing ruby-base64 (0.2.0-r1)
(76/80) Installing ruby-rake (13.2.1-r1)
(77/80) Installing ruby-rdoc (3.4.4-r0)
(78/80) Installing ruby-power_assert (2.0.5-r0)
(79/80) Installing ruby-test-unit (3.6.8-r0)
(80/80) Installing ruby-test-unit-ruby-core (1.0.6-r0)
Executing busybox-1.37.0-r18.trigger
Executing ca-certificates-20241121-r2.trigger
OK: 279 MiB in 80 packages
>>> ruby-net-imap: Fetching https://github.com/ruby/net-imap/archive/v0.5.8/net-imap-0.5.8.tar.gz
>>> ruby-net-imap: Checking sha512sums...
net-imap-0.5.8.tar.gz: OK
gemspec.patch: OK
no-simplecov.patch: OK
>>> ruby-net-imap: Unpacking /var/cache/distfiles/net-imap-0.5.8.tar.gz...
>>> ruby-net-imap: gemspec.patch
patching file net-imap.gemspec
>>> ruby-net-imap: no-simplecov.patch
patching file test/lib/helper.rb
WARNING:  description and summary are identical
WARNING:  open-ended dependency on net-protocol (>= 0) is not recommended
  use a bounded requirement, such as "~> x.y"
WARNING:  open-ended dependency on date (>= 0) is not recommended
  use a bounded requirement, such as "~> x.y"
WARNING:  You have specified the uri:
  https://github.com/ruby/net-imap
for all of the following keys:
  homepage_uri
  source_code_uri
Only the first one will be shown on rubygems.org
WARNING:  See https://guides.rubygems.org/specification-reference/ for help
  Successfully built RubyGem
  Name: net-imap
  Version: 0.5.8
  File: net-imap-0.5.8.gem
Loaded suite /usr/lib/ruby/gems/3.4.0/gems/rake-13.2.1/lib/rake/rake_test_loader
Started
ConfigTest: 
  test: #clone:						.: (0.000195)
  test: #debug:						.: (0.000116)
  test: #dup:						.: (0.000046)
  test: #freeze:					.: (0.000053)
  test: #inherited? and #reset(attr):			.: (0.000069)
  test: #load_defaults:					.: (0.000153)
  test: #max_response_size=(Integer | nil):		.: (0.000091)
  test: #new and inheritance:				.: (0.000065)
  test: #reset all attributes:				.: (0.000042)
  test: #to_h:						.: (0.000054)
  test: #update:					.: (0.000034)
  test: #update with invalid key name:			.: (0.000050)
  test: #update with invalid value:			.: (0.000050)
  test: #with:						.: (0.000074)
  test: .[] for all version_defaults:			.: (0.000068)
  test: .[] for all x.y versions:			.: (0.000091)
  test: .[] key errors:					.: (0.000063)
  test: .[] range errors:				.: (0.000079)
  test: .[] with a hash:				.: (0.000050)
  test: .[] with object responding to to_sym, to_r, or to_f:	.: (0.000085)
  test: .[] with string names:				.: (0.000076)
  test: .[] with symbol names:				.: (0.000047)
  test: .default:					.: (0.000033)
  test: .global:					.: (0.000041)
  test: .new always sets a parent:			.: (0.000068)
  test: .new(parent, ...) and inheritance:		.: (0.000066)
  test: .version_defaults are all frozen, and inherit debug from global:.: (0.000829)
  test: Config[:default] and Config[:current] both hold default config:	.: (0.000054)
  test: Net::IMAP.config:				.: (0.000027)
  test: boolean type constraints and conversion:	.: (0.000033)
  test: enum type constraint:				.: (0.000073)
  test: integer type constraints and conversion:	.: (0.000045)
ConnectionStateTest: 
  test: #authenticated?:				.: (0.000074)
  test: #deconstruct:					.: (0.000097)
  test: #deconstruct_keys:				.: (0.000051)
  test: #logout?:					.: (0.000065)
  test: #name:						.: (0.000033)
  test: #not_authenticated?:				.: (0.000030)
  test: #selected?:					.: (0.000029)
  test: #to_sym:					.: (0.000032)
DeprecatedClientOptionsTest: 
  InitializeTests: 
    test: Convert deprecated usessl (= false) with warning:	.: (0.002421)
    test: Convert deprecated usessl (= true) and certs, with warning:	.: (0.093161)
    test: Convert deprecated usessl (= true) and verify (= false), with warning:.: (0.093375)
    test: Convert obsolete options hash to keywords:	.: (0.001963)
    test: Convert obsolete port argument to :port keyword:	.: (0.001374)
    test: combined options hash and keyword args raises ArgumentError:	.: (0.000339)
    test: combined options hash and ssl args raises ArgumentError:	.: (0.000452)
  StartTLSTests: 
    test: Convert deprecated certs, verify with warning:.: (0.006725)
    test: Convert obsolete options hash to keywords:	.: (0.009518)
    test: combined options hash and keyword args raises ArgumentError:	.: (0.001692)
    test: combined options hash and ssl args raises ArgumentError:	.: (0.001890)
ESearchResultTest: 
  test: #data.assoc('UNKNOWN') returns ExtensionData value:	.: (0.001271)
  test: #partial returns PARTIAL value (RFC9394: PARTIAL):	.: (0.012794)
  test: #tag:						.: (0.000125)
  test: #to_a:						.: (0.000100)
  test: #uid:						.: (0.000113)
  test: simple RFC4731 and RFC9051 return data accessors:	.: (0.000061)
FetchDataTest: 
  test: #binary(1, 2, 3, offset: 1) returns the BINARY[1.2.3]<1> attr:	.: (0.000183)
  test: #binary_size(1, 2, 3) returns the BINARY.SIZE[1.2.3] attr:	.: (0.000125)
  test: #emailid returns EMAILID value (RFC8474: OBJECTID):	.: (0.000030)
  test: #header returns the BODY[HEADER] attr:		.: (0.000030)
  test: #header(1, 2, 3) returns the BODY[1.2.3.HEADER] attr:	.: (0.000027)
  test: #header(1, 2, oFfset: 456) returns the BODY[1.2.HEADER]<456> attr:	.: (0.000029)
  test: #header_fields(*) => BODY[HEADER.FIELDS (*)] attr:	.: (0.000038)
  test: #header_fields(*, offset:) => BODY[part.HEADER.FIELDS (*)]<offset>:	.: (0.000037)
  test: #header_fields(*, part:) => BODY[part.HEADER.FIELDS (*)] attr:	.: (0.000192)
  test: #header_fields_not(*) => BODY[HEADER.FIELDS.NOT (*)] attr:	.: (0.000036)
  test: #header_fields_not(*, offset:) => BODY[part.HEADER.FIELDS.NOT (*)]<offset>:	.: (0.000039)
  test: #header_fields_not(*, part:) => BODY[part.HEADER.FIELDS.NOT (*)] attr:	.: (0.000121)
  test: #internaldate parses a datetime value:		.: (0.000398)
  test: #message returns the BODY[] attr:		.: (0.000032)
  test: #message(offset:) returns the BODY[]<offset> attr:	.: (0.000099)
  test: #mime(1, 2, 3) returns the BODY[1.2.3.MIME] attr:	.: (0.000248)
  test: #mime(1, 2, oFfset: 456) returns the BODY[1.2.MIME]<456> attr:	.: (0.000034)
  test: #modseq returns MODSEQ value (RFC7162: CONDSTORE):	.: (0.000025)
  test: #part(1, 2, 3) returns the BODY[1.2.3] attr:	.: (0.000028)
  test: #part(1, 2, oFfset: 456) returns the BODY[1.2]<456> attr:	.: (0.000097)
  test: #seqno:						.: (0.000100)
  test: #text returns the BODY[TEXT] attr:		.: (0.000098)
  test: #text(1, 2, 3) returns the BODY[1.2.3.TEXT] attr:	.: (0.000028)
  test: #text(1, 2, 3, oFfset: 456) returns the BODY[1.2.3.TEXT]<456> attr:	.: (0.000027)
  test: #threadid returns THREADID value (RFC8474: OBJECTID):	.: (0.000024)
  test: #uid:						.: (0.000095)
  test: simple RFC3501 and RFC9051 attrs accessors:	.: (0.000073)
  test: simple RFC822 attrs accessors (deprecated by RFC9051):	.: (0.000034)
IMAPAuthenticatorsTest: 
  test: .authenticator mechanism name can be a symbol:	.: (0.000137)
  test: .authenticator mechanism name is case insensitive:	.: (0.000115)
  test: SASL::Authenticators.normalize_name:		.: (0.000039)
  test_anonymous_length_over_255:			.: (0.000154)
  test_anonymous_matches_mechanism:			.: (0.000051)
  test_anonymous_response:				.: (0.000076)
  test_anonymous_stringprep:				.: (0.000178)
  test_cram_md5_authenticator:				.: (0.000412)
  test_cram_md5_authenticator_deprecated:		.: (0.000180)
  test_cram_md5_authenticator_matches_mechanism:	.: (0.000078)
  test_cram_md5_does_not_support_initial_response:	.: (0.000152)
  test_digest_md5_authenticator:			.: (0.000713)
  test_digest_md5_authenticator_deprecated:		.: (0.000223)
  test_digest_md5_authenticator_empty_challenge:	.: (0.000176)
  test_digest_md5_authenticator_empty_challenge_commas:	.: (0.000276)
  test_digest_md5_authenticator_empty_qop:		.: (0.000262)
  test_digest_md5_authenticator_garbage:		.: (0.000215)
  test_digest_md5_authenticator_garbage_no_equal_sign:	.: (0.000275)
  test_digest_md5_authenticator_illinear:		.: (0.002606)
  test_digest_md5_authenticator_matches_mechanism:	.: (0.000204)
  test_digest_md5_authenticator_missing_nonce:		.: (0.000223)
  test_digest_md5_authenticator_qdstr_with_comma:	.: (0.000249)
  test_digest_md5_authenticator_realm_and_digest_uri:	.: (0.000166)
  test_digest_md5_does_not_support_initial_response:	.: (0.000114)
  test_external_invalid:				.: (0.000060)
  test_external_matches_mechanism:			.: (0.000032)
  test_external_response:				.: (0.000194)
  test_external_utf8:					.: (0.000029)
  test_login_authenticator_deprecated:			.: (0.000049)
  test_login_authenticator_matches_mechanism:		.: (0.000037)
  test_login_does_not_support_initial_response:		.: (0.000026)
  test_login_responses:					.: (0.000037)
  test_net_imap_authenticator_deprecated:		.: (0.000048)
  test_oauthbearer_authenticator_matches_mechanism:	.: (0.000050)
  test_oauthbearer_response:				.: (0.000166)
  test_plain_authenticator_matches_mechanism:		.: (0.000103)
  test_plain_authzid:					.: (0.006969)
  test_plain_kw_params:					.: (0.000037)
  test_plain_no_null_chars:				.: (0.000093)
  test_plain_response:					.: (0.000027)
  test_plain_supports_initial_response:			.: (0.000024)
  test_plain_username_kw_sets_both_authcid_and_authzid:	.: (0.000024)
  test_scram_kwargs:					.: (0.000054)
  test_scram_sha1_authenticator:			.: (0.002758)
  test_scram_sha1_authenticator_matches_mechanism:	.: (0.000048)
  test_scram_sha256_authenticator:			.: (0.004303)
  test_scram_sha256_authenticator_matches_mechanism:	.: (0.000047)
  test_xoauth2_authenticator_matches_mechanism:		.: (0.000035)
  test_xoauth2_kwargs:					.: (0.000040)
  test_xoauth2_response:				.: (0.000027)
  test_xoauth2_supports_initial_response:		.: (0.000024)
IMAPCapabilitiesTest: 
  test: #auth_capable?(name) checks cached capabilities for AUTH=name:	.: (0.086951)
  test: #auth_mechanisms reports cached capabilities with AUTH={name}:	.: (0.086340)
  test: #capabilities cache IGNORES tagged OK response to STARTTLS:	.: (0.093385)
  test: #capabilities cache is NOT cleared after #authenticate fails:	.: (0.043197)
  test: #capabilities cache is NOT cleared after #login fails:	.: (0.043308)
  test: #capabilities cache is cleared after #authenticate:	.: (0.130028)
  test: #capabilities cache is cleared after #login:	.: (0.129999)
  test: #capabilities cache is cleared after #starttls:	.: (0.093259)
  test: #capabilities cache is retained after selecting a mailbox:	.: (0.086673)
  test: #capabilities caches greeting capabilities (PREAUTH):	.: (0.001754)
  test: #capabilities caches greeting capabilities (cleartext):	.: (0.001365)
  test: #capabilities caches greeting capabilities (implicit TLS):	.: (0.093640)
  test: #capabilities caches tagged OK response to AUTHENTICATE:.: (0.043110)
  test: #capabilities caches tagged OK response to LOGIN:	.: (0.066680)
  test: #capabilities returns cached CAPABILITY data:	.: (0.089967)
  test: #capability caches its result:			.: (0.086642)
  test: #capable?(name) checks cached CAPABILITY data for name:	.: (0.089977)
  test: #clear_cached_capabilities clears cached capabilities:	.: (0.086535)
IMAPConnectionStateTest: 
  test: #connection_state after #disconnect:		.: (0.001961)
  test: #connection_state after #logout:		.: (0.001328)
  test: #connection_state after #logout!:		.: (0.001749)
  test: #connection_state after AUTHENTICATE, SELECT, CLOSE successes:	.: (0.174800)
  test: #connection_state after LOGIN, EXAMINE, UNSELECT successes:	.: (0.173190)
  test: #connection_state after PREAUTH:		.: (0.133571)
  test: #connection_state after [CLOSED] response code:	.: (0.216336)
  test: #connection_state after failed LOGIN or AUTHENTICATE:	.: (0.173402)
  test: #connection_state after failed SELECT or EXAMINE:	.: (0.259878)
IMAPDataEncodingTest: 
  test_decode_date:					.: (0.000115)
  test_decode_datetime:					.: (0.000058)
  test_decode_time:					.: (0.000078)
  test_decode_utf7:					.: (0.003032)
  test_encode_date:					.: (0.000054)
  test_encode_datetime:					.: (0.000040)
  test_encode_utf7:					.: (0.000366)
IMAPErrorsTest: 
  test: ResponseTooLargeError:				.: (0.000112)
IMAPLoginTest: 
  test: #login doesn't send CAPABILITY when it is already cached:	.: (0.042355)
  test: #login first checks capabilities for LOGINDISABLED (failure):	.: (0.090050)
  test: #login first checks capabilities for LOGINDISABLED (success):	.: (0.129936)
  test: #login raises LoginDisabledError when LOGINDISABLED:	.: (0.001969)
  test: #login raises LoginDisabledError without sending CAPABILITY when config.enforce_logindisabled is :when_capabilities_cached:	.: (0.001390)
  test: #login sends LOGIN without asking CAPABILITY when config.enforce_logindisabled is :when_capabilities_cached:	.: (0.086418)
  test: #login sends LOGIN without asking CAPABILITY when config.enforce_logindisabled is false:.: (0.043416)
IMAPMaxResponseSizeTest: 
  test: #max_response_size closes connection for too long line:	.: (0.001205)
  test: #max_response_size closes connection for too long literal:	.: (0.001334)
  test: #max_response_size reading literals:		.: (0.050654)
IMAPRegexpsTest: 
  test_linear_time[Net::IMAP::ResponseReader#get_literal_size: /\{(\d+)\}\r\n\z/n]:	.: (0.000082)
  test_linear_time[Net::IMAP::SequenceSet#nz_number: /\A[1-9]\d*\z/]:	.: (0.000026)
  test_linear_time[Net::IMAP::TestData#test_define_edge_cases: /duplicate member/]:	.: (0.000024)
  test_linear_time[Net::IMAP::StringFormatter::LITERAL_REGEX]:	.: (0.000023)
  test_linear_time[Net::IMAP::StringPrep::SASLprep::ASCII_NO_CTRLS]:	.: (0.000021)
  test_linear_time[Net::IMAP::StringPrep::SASLprep::MAP_TO_SPACE]:	.: (0.000020)
  test_linear_time[Net::IMAP::StringPrep::SASLprep::MAP_TO_NOTHING]:	.: (0.000025)
  test_linear_time[Net::IMAP::StringPrep::SASLprep::PROHIBITED_STORED]:	.: (0.000023)
  test_linear_time[Net::IMAP::StringPrep::SASLprep::PROHIBITED]:.: (0.000023)
  test_linear_time[Net::IMAP::StringPrep::SASLprep.saslprep: /invalid byte sequence|incompatible encoding/]:	.: (0.000023)
  test_linear_time[Net::IMAP::StringPrep::SASLprep#saslprep: /invalid byte sequence|incompatible encoding/]:	.: (0.000021)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_C_9]:	.: (0.000022)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_D_1]:	.: (0.000021)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_D_1_NEGATED]:	.: (0.000020)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_D_2]:	.: (0.000021)
  test_linear_time[Net::IMAP::StringPrep::Tables::BIDI_FAILURE]:.: (0.000020)
  test_linear_time[Net::IMAP::StringPrep::Tables::BIDI_FAILS_REQ2]:	.: (0.000020)
  test_linear_time[Net::IMAP::StringPrep::Tables::BIDI_FAILS_REQ3]:	.: (0.000021)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_A_1]:	.: (0.000020)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_B_1]:	.: (0.000020)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_B_2]:	.: (0.000020)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_B_3]:	.: (0.000020)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_C_1_1]:	.: (0.000020)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_C_1_2]:	.: (0.000020)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_C_2_1]:	.: (0.000020)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_C_2_2]:	.: (0.000019)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_C_3]:	.: (0.000020)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_C_4]:	.: (0.000019)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_C_5]:	.: (0.000020)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_C_6]:	.: (0.000020)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_C_7]:	.: (0.000019)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_C_8]:	.: (0.000020)
  test_linear_time[Net::IMAP::StringPrep.check_prohibited!: /^C/]:	.: (0.000020)
  test_linear_time[Net::IMAP::StringPrep#check_prohibited!: /^C/]:	.: (0.000020)
  test_linear_time[Net::IMAP::FakeServer::CommandReader#get_command: /\{(\d+)(\+)?\}\r\n\z/n]:	.: (0.000029)
  test_linear_time[Net::IMAP::FakeServer::CommandReader#parse: /\A([^ ]+) ((?:UID )?\w+)(?: (.+))?\r\n\z/min]:	.: (0.000022)
  test_linear_time[Net::IMAP::FakeServer::CommandReader#scan_astrings: /"((?:[^"\\]|\\["\\])+)"|(\S+)/n]:	.: (0.000022)
  test_linear_time[Net::IMAP::FakeServer::CommandReader#scan_astrings: /\\([\\"])/n]:	.: (0.000026)
  test_linear_time[Net::IMAP::FakeServer::ResponseWriter#resp_code: /\A\[/]:	.: (0.000021)
  test_linear_time[Net::IMAP::SASL::DigestMD5Authenticator#process: /rspauth=/]:.: (0.000021)
  test_linear_time[Net::IMAP::SASL::DigestMD5Authenticator#qdval: /([\\"])/]:	.: (0.000020)
  test_linear_time[Net::IMAP::SASL::DigestMD5Authenticator#compute_a2: /^auth-(?:conf|int)$/]:	.: (0.000022)
  test_linear_time[Net::IMAP::SASL::DigestMD5Authenticator#parse_challenge: /\A"(.*)"\z/mn]:	.: (0.000020)
  test_linear_time[Net::IMAP::SASL::DigestMD5Authenticator#parse_challenge: /\\(.)/mn]:	.: (0.000020)
  test_linear_time[Net::IMAP::SASL::Authenticators#add_authenticator: /[^a-zA-Z0-9]/]:	.: (0.000021)
  test_linear_time[Net::IMAP::SASL::GS2Header::RFC5801_SASLNAME]:	.: (0.000020)
  test_linear_time[Net::IMAP::SASL::GS2Header::NO_NULL_CHARS]:	.: (0.000020)
  test_linear_time[Net::IMAP::SASL::ExternalAuthenticator#initialize: /\u0000/]:.: (0.000021)
  test_linear_time[Net::IMAP::SASL::ScramAuthenticator#parse_challenge: /,/]:	.: (0.000020)
  test_linear_time[Net::IMAP::SASL::ScramAuthenticator#parse_challenge: /=/]:	.: (0.000021)
  test_linear_time[Net::IMAP::Config::AttrAccessors.attributes: /=\z/]:	.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser::BEG_REGEXP]:	.: (0.000021)
  test_linear_time[Net::IMAP::ResponseParser::DATA_REGEXP]:	.: (0.000021)
  test_linear_time[Net::IMAP::ResponseParser::TEXT_REGEXP]:	.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser::CTEXT_REGEXP]:	.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::LITERAL]:	.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::LITERAL8]:	.: (0.000021)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::PARTIAL_RANGE]:	.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::SEQUENCE_SET_STR]:	.: (0.000022)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC5234::CHAR]:	.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC5234::ALPHA]:.: (0.000019)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC5234::CTL]:	.: (0.000021)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC5234::DIGIT]:.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC5234::CRLF]:	.: (0.000024)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC5234::DQUOTE]:	.: (0.000022)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC5234::HEXDIG]:	.: (0.000021)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC5234::OCTET]:.: (0.000022)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC5234::SP]:	.: (0.000021)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC3629::UTF8_2]:	.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC3629::UTF8_3]:	.: (0.000021)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC3629::UTF8_4]:	.: (0.000021)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC3629::UTF8_CHAR]:	.: (0.000022)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC3629::UTF8_OCTETS]:	.: (0.000021)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC3629::UTF8_1]:	.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC3629::UTF8_TAIL]:	.: (0.000021)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::CHAR8]:	.: (0.000021)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::LIST_WILDCARDS]:.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::QUOTED_SPECIALS]:	.: (0.000037)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RESP_SPECIALS]:	.: (0.000027)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::ATOM_SPECIALS]:	.: (0.000021)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::ASTRING_SPECIALS]:	.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::ASTRING_CHAR]:	.: (0.000021)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::ATOM_CHAR]:	.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::ATOM]:	.: (0.000021)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::ASTRING_CHARS]:	.: (0.000023)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::ATOMISH]:	.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::TAG]:	.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::TEXT_CHAR]:	.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::CODE_TEXT_CHAR]:.: (0.000022)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::CODE_TEXT]:	.: (0.000022)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::FLAG]:	.: (0.000024)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::FLAG_EXTENSION]:.: (0.000022)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::FLAG_KEYWORD]:	.: (0.000021)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::FLAG_PERM]:	.: (0.000022)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::MBX_FLAG]:	.: (0.000021)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::FLAG_LIST]:	.: (0.000022)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::FLAG_PERM_LIST]:.: (0.000021)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::MBX_LIST_FLAGS]:.: (0.000021)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::QUIRKY_FLAG]:	.: (0.000021)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::QUIRKY_FLAGS_LIST]:	.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::QUOTED_CHAR_safe]:	.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::QUOTED_CHAR_esc]:	.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::QUOTED_CHAR_rev1]:	.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::QUOTED_CHAR_rev2]:	.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::QUOTED_rev1]:	.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::QUOTED_rev2]:	.: (0.000021)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::TEXT_rev1]:	.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::TEXT_rev2]:	.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::TAGGED_LABEL_FCHAR]:	.: (0.000019)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::TAGGED_LABEL_CHAR]:	.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::TAGGED_EXT_LABEL]:	.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::NZ_NUMBER]:	.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::SEQ_NUMBER]:	.: (0.000019)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::SEQ_RANGE]:	.: (0.000019)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::SEQUENCE_SET_ITEM]:	.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::SEQUENCE_SET]:	.: (0.000019)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::PARTIAL_RANGE_FIRST]:	.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::PARTIAL_RANGE_LAST]:	.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser::ADDRESS_REGEXP]:	.: (0.000021)
  test_linear_time[Net::IMAP::ResponseParser::ParserUtils::Generator#def_char_matchers: /\A[A-Z]/]:	.: (0.000025)
  test_linear_time[Net::IMAP::ResponseParser::ParserUtils::Generator#def_token_matchers: /\A[A-Z]/]:	.: (0.000021)
  test_linear_time[Net::IMAP::ResponseParser::RE_RESPONSE_TYPE]:.: (0.000022)
  test_linear_time[Net::IMAP::ResponseParser::SPACES_REGEXP]:	.: (0.000022)
  test_linear_time[Net::IMAP::ResponseParser#esearch_response: /\G UID\b/i]:	.: (0.000022)
  test_linear_time[Net::IMAP::ResponseParser#msg_att: /\ABODY\[/in]:	.: (0.000021)
  test_linear_time[Net::IMAP::ResponseParser#msg_att: /\ABINARY\[/in]:	.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser#msg_att: /\ABINARY\.SIZE\[/in]:	.: (0.000020)
  test_linear_time[Net::IMAP::ResponseParser#msg_att__label: /\A(?:RFC822(?:\.HEADER|\.TEXT)?)\z/in]:	.: (0.000021)
  test_linear_time[Net::IMAP::ResponseParser#body_type_1part: /\G(?:
            (?<TEXT>     "TEXT"    \s "[^"]+"             )
            |(?<MESSAGE> "MESSAGE" \s "(?:RFC822|GLOBAL)" )
            |(?<BASIC>   "[^"]+"   \s "[^"]+"             )
            |(?<MIXED>   "MIXED"                          )
           )/ixn]:	.: (0.000023)
  test_linear_time[Net::IMAP::ResponseParser#next_token: /\S*/n]:	.: (0.000023)
  test_linear_time[Net::IMAP.decode_utf7: /&([A-Za-z0-9+,]+)?-/n]:	.: (0.000021)
  test_linear_time[Net::IMAP.encode_utf7: /(&)|[^\x20-\x7e]+/]:	.: (0.000020)
  test_linear_time[Net::IMAP#auth_mechanisms: /\AAUTH=/i]:	.: (0.000021)
  test_linear_time[Net::IMAP#put_string: /\n/n]:	.: (0.000021)
  test_linear_time[Net::IMAP#put_string: /\n\z/n]:	.: (0.000019)
  test_linear_time[Net::IMAP#get_tagged_response: /\A(?:OK)\z/in]:	.: (0.000020)
  test_linear_time[Net::IMAP#get_tagged_response: /\A(?:NO)\z/in]:	.: (0.000020)
  test_linear_time[Net::IMAP#get_tagged_response: /\A(?:BAD)\z/in]:	.: (0.000021)
  test_linear_time[Net::IMAP#get_response: /^/n]:	.: (0.000020)
  test_linear_time[Net::IMAP#send_string_data: /[\r\n]/n]:	.: (0.000020)
  test_linear_time[Net::IMAP#send_string_data: /[(){ \x00-\x1f\x7f%*"\\]/n]:	.: (0.000020)
  test_linear_time[Net::IMAP#search_args: /\ACHARSET\b/i]:	.: (0.000020)
  test_linear_time[Net::IMAP#search_args: /\ACHARSET\z/i]:	.: (0.000019)
  test_linear_time[Net::IMAP#send_quoted_string: /["\\]/]:	.: (0.000020)
IMAPResponseHandlersTest: 
  test: #add_response_handlers:				.: (0.088138)
  test: ::new with response_handlers kwarg:		.: (0.086627)
IMAPResponseParserTest: 
  test: APPENDUID with '*':				.: (0.000240)
  test: APPENDUID with parser_use_deprecated_uidplus_data = :up_to_max_size:	.: (0.000224)
  test: APPENDUID with parser_use_deprecated_uidplus_data = false:	.: (0.000090)
  test: APPENDUID with parser_use_deprecated_uidplus_data = true:	.: (0.000315)
  test: COPYUID with '*':				.: (0.000095)
  test: COPYUID with backwards ranges:			.: (0.000116)
  test: COPYUID with parser_use_deprecated_uidplus_data = :up_to_max_size:	.: (0.000225)
  test: COPYUID with parser_use_deprecated_uidplus_data = false:.: (0.000098)
  test: COPYUID with parser_use_deprecated_uidplus_data = true:	.: (0.000351)
  test: config can be passed in to #initialize:		.: (0.000035)
  test: config will inherits from passed in frozen config:	.: (0.000066)
  test: default config inherits from Config.global:	.: (0.000034)
  test: passing in global config inherits from Config.global:	.: (0.000033)
  test_NAMESPACE_rfc2342_example_5.1:			.: (0.000123)
  test_NAMESPACE_rfc2342_example_5.2:			.: (0.000073)
  test_NAMESPACE_rfc2342_example_5.3:			.: (0.000071)
  test_NAMESPACE_rfc2342_example_5.4:			.: (0.000121)
  test_NAMESPACE_rfc2342_example_5.5:			.: (0.000061)
  test_NAMESPACE_rfc2342_example_5.6:			.: (0.000127)
  test_NAMESPACE_rfc2342_example_5.7:			.: (0.000095)
  test_NAMESPACE_rfc2342_example_5.9:			.: (0.000069)
  test_NAMESPACE_rfc9051_6.3.10_example_8:		.: (0.000081)
  test_RFC7162 CONDSTORE 3.1.10. Example 19 (Interaction with ESEARCH):	.: (0.000114)
  test_RFC7162 CONDSTORE 3.1.10. Example 20 (Interaction with ESEARCH):	.: (0.000101)
  test_RFC7162 CONDSTORE 3.1.2.1. HIGHESTMODSEQ Response Code:	.: (0.000061)
  test_RFC7162 CONDSTORE 3.1.2.2. NOMODSEQ Response Code:	.: (0.000053)
  test_RFC7162 CONDSTORE 3.1.3. Example 3 (FETCH MODSEQ):	.: (0.000067)
  test_RFC7162 CONDSTORE 3.1.3. Example 4 (FETCH MODSEQ):	.: (0.000052)
  test_RFC7162 CONDSTORE 3.1.3. Example 6 (MODIFIED Response Code):	.: (0.000073)
  test_RFC7162 CONDSTORE 3.1.5. MODSEQ Search Criterion in SEARCH:	.: (0.000087)
  test_RFC7162 CONDSTORE 3.1.7. HIGHESTMODSEQ Status Data Items:.: (0.000071)
  test_RFC7162 QRESYNC 3.2.5.1. Modification Sequence and UID Parameters:	.: (0.000075)
  test_RFC7162 QRESYNC 3.2.7. EXPUNGE Command:		.: (0.000067)
  test_RFC9394 PARTIAL 3.1. example 1:			.: (0.000120)
  test_RFC9394 PARTIAL 3.1. example 2:			.: (0.000096)
  test_RFC9394 PARTIAL 3.1. example 3:			.: (0.000076)
  test_RFC9586 UIDONLY 3. UIDREQUIRED response code:	.: (0.000063)
  test_RFC9586 UIDONLY 3.3 UIDFETCH response:		.: (0.000068)
  test_acl_response:					.: (0.000078)
  test_bodystructure_bug11128_ext_mpart_without_lang:	.: (0.000291)
  test_bodystructure_bug7146_msg_delivery_status:	.: (0.000099)
  test_bodystructure_bug7147_message_rfc822_attachment:	.: (0.000216)
  test_bodystructure_bug8167_delivery_status_with_extra_data:	.: (0.000247)
  test_bodystructure_extension_fields:			.: (0.000418)
  test_bodystructure_extra_space:			.: (0.000248)
  test_bodystructure_mixed_boundary:			.: (0.000341)
  test_continuation_request_without_response_text:	.: (0.000045)
  test_fetch_binary_and_binary_size:			.: (0.000322)
  test_fetch_msg_att_HEADER.FIELDS:			.: (0.000106)
  test_fetch_msg_att_HEADER.FIELDS.NOT:			.: (0.000128)
  test_fetch_msg_att_HEADER.FIELDS_quoted:		.: (0.000081)
  test_fetch_msg_att_X-GM-LABELS_1:			.: (0.000086)
  test_fetch_msg_att_X-GM-LABELS_2:			.: (0.000062)
  test_fetch_msg_att_X-GM-LABELS_3:			.: (0.000054)
  test_fetch_msg_att_X-GM-MSGID:			.: (0.000048)
  test_fetch_msg_att_X-GM-THRID:			.: (0.000054)
  test_fetch_msg_att_flags_and_uid:			.: (0.000067)
  test_fetch_msg_att_modseq:				.: (0.000065)
  test_fetch_msg_att_rfc822:				.: (0.000058)
  test_fetch_msg_att_uid:				.: (0.000050)
  test_flags_with_various_flag_types:			.: (0.000070)
  test_greenmail sent "\*" in a FLAGS response:		.: (0.000065)
  test_id_gmail:					.: (0.000097)
  test_id_rfc2971_example_3.1_nil:			.: (0.000054)
  test_id_rfc2971_example_3.2_cyrus:			.: (0.000126)
  test_imaginary_status_response_using_tagged-ext-val:	.: (0.000178)
  test_imap.gmail.com allows invalid atom-specials in flags:	.: (0.000088)
  test_invalid_bodystructure_bug7153_mixed:		.: (0.000069)
  test_invalid_bodystructure_message_sent_as_basic:	.: (0.000316)
  test_invalid_capability_extra_space_at_end:		.: (0.000108)
  test_invalid_fetch_msg_att_extra_space:		.: (0.000062)
  test_invalid_fetch_msg_att_rfc822_with_brackets:	.: (0.000059)
  test_invalid_fetch_msg_att_unknown_fails:		.: (0.000086)
  test_invalid_noop_response_is_ignored:		.: (0.000070)
  test_invalid_noop_response_with_numeric_prefix:	.: (0.000050)
  test_invalid_noop_response_with_numeric_prefix_and_unparseable_data:	.: (0.000051)
  test_invalid_noop_response_with_unparseable_data:	.: (0.000048)
  test_invalid_search_response_multiple_result_with_trailing_space:	.: (0.000058)
  test_invalid_search_response_single_result_with_trailing_space:	.: (0.000054)
  test_invalid_status_response_trailing_space:		.: (0.000077)
  test_invalid_thread_empty_response:			.: (0.000045)
  test_list_with_various_flag_capitalizations:		.: (0.000083)
  test_outlook.com puts an extra SP in ENVELOPE address lists:	.: (0.000234)
  test_resp-cond-auth_without_SP_resp-text:		.: (0.000053)
  test_resp-cond-bye_without_SP_resp-text:		.: (0.000043)
  test_resp-cond-state_without_SP_resp-text:		.: (0.000049)
  test_resp_code_ALREADYEXISTS_rfc9051_7.1_example:	.: (0.000056)
  test_resp_code_APPENDUID_rfc9051_6.3.12_example:	.: (0.000089)
  test_resp_code_APPENDUID_with_MULTIAPPEND_compatibility:	.: (0.000091)
  test_resp_code_AUTHENTICATIONFAILED_rfc9051_7.1_example:	.: (0.000064)
  test_resp_code_AUTHORIZATIONFAILED_rfc9051_7.1_example_1:	.: (0.000055)
  test_resp_code_AUTHORIZATIONFAILED_rfc9051_7.1_example_2:	.: (0.000057)
  test_resp_code_BADCHARSET_rfc9051_6.4.4.4_example_modified:	.: (0.000063)
  test_resp_code_BADCHARSET_with_astrings:		.: (0.000072)
  test_resp_code_CANNOT_rfc9051_7.1_example:		.: (0.000053)
  test_resp_code_CAPABILITY_rfc9051_6.2.2_example:	.: (0.000066)
  test_resp_code_CAPABILITY_with_valid_atoms:		.: (0.000091)
  test_resp_code_CLIENTBUG_rfc9051_7.1_example:		.: (0.000060)
  test_resp_code_CLOSED:				.: (0.000052)
  test_resp_code_CONTACTADMIN_rfc9051_7.1_example:	.: (0.000052)
  test_resp_code_COPYUID_rfc9051_6.3.12_example:	.: (0.000103)
  test_resp_code_COPYUID_with_reversed_ranges_and_mixed_case:	.: (0.000130)
  test_resp_code_CORRUPTION_rfc9051_7.1_example:	.: (0.000057)
  test_resp_code_EXPIRED_rfc9051_7.1_example:		.: (0.000054)
  test_resp_code_EXPUNGEISSUED_rfc9051_7.1_example:	.: (0.000056)
  test_resp_code_HASCHILDREN_rfc9051_7.1_example:	.: (0.000053)
  test_resp_code_INUSE_rfc9051_7.1_example:		.: (0.000055)
  test_resp_code_LIMIT_rfc9051_7.1_example:		.: (0.000053)
  test_resp_code_NONEXISTENT_rfc9051_7.1_example:	.: (0.000085)
  test_resp_code_NOPERM_rfc9051_7.1_example:		.: (0.000065)
  test_resp_code_OVERQUOTA_rfc9051_7.1_example_1:	.: (0.000057)
  test_resp_code_OVERQUOTA_rfc9051_7.1_example_2:	.: (0.000050)
  test_resp_code_PERMANENTFLAGS_rfc3501_6.3.1_example:	.: (0.000061)
  test_resp_code_PERMANENTFLAGS_rfc3501_6.3.2_example:	.: (0.000058)
  test_resp_code_PRIVACYREQUIRED_rfc9051_7.1_example:	.: (0.000079)
  test_resp_code_READ-ONLY_rfc3501_6.3.2_example:	.: (0.000059)
  test_resp_code_READ-WRITE_rfc3501_6.3.1_example:	.: (0.000059)
  test_resp_code_SERVERBUG_rfc9051_7.1_example:		.: (0.000054)
  test_resp_code_UIDNEXT_rfc3501_6.3.1_example:		.: (0.000049)
  test_resp_code_UIDVALIDITY_rfc3501_6.3.1_example:	.: (0.000058)
  test_resp_code_UNAVAILABLE_rfc9051_7.1_example:	.: (0.000055)
  test_resp_code_UNSEEN_rfc3501_6.3.1_example:		.: (0.000056)
  test_resp_text_PERMANENTFLAGS_with_various_flag_types:.: (0.000059)
  test_resp_text_with_T_LBRA:				.: (0.000055)
  test_response-tagged_without_SP_resp-text:		.: (0.000046)
  test_rfc3501_6.1.1_example_1_capability_response:	.: (0.000063)
  test_rfc3501_6.1.1_example_2_capability_response:	.: (0.000059)
  test_rfc3501_6.2.2_example_continuation_request:	.: (0.000061)
  test_rfc3501_6.3.11_example_continuation_request:	.: (0.000046)
  test_rfc3501_7.1.1_OK_response_example_1:		.: (0.000049)
  test_rfc3501_7.1.1_OK_response_example_2:		.: (0.000057)
  test_rfc3501_7.1.1_OK_response_example_3:		.: (0.000043)
  test_rfc3501_7.1.2_NO_response_example_1:		.: (0.000051)
  test_rfc3501_7.1.2_NO_response_example_4:		.: (0.000043)
  test_rfc3501_7.1.3_BAD_response_example:		.: (0.000051)
  test_rfc3501_7.1.4_PREAUTH_response_example:		.: (0.000044)
  test_rfc3501_7.1.5_BYE_response_example:		.: (0.000042)
  test_rfc3501_7.2.1_CAPABILITY_response_example:	.: (0.000064)
  test_rfc3501_7.2.2_LIST_response_example:		.: (0.000066)
  test_rfc3501_7.2.3_LSUB_response_example:		.: (0.000066)
  test_rfc3501_7.2.4_STATUS_response_example:		.: (0.000063)
  test_rfc3501_7.2.5_SEARCH_response_example:		.: (0.000053)
  test_rfc3501_7.2.6_FLAGS_response_example:		.: (0.002255)
  test_rfc3501_7.3.1_EXISTS_response_example:		.: (0.000067)
  test_rfc3501_7.3.2_RECENT_response_example:		.: (0.000048)
  test_rfc3501_7.4.1_EXPUNGE_response_example:		.: (0.000044)
  test_rfc3501_7.4.2_FETCH_response_example:		.: (0.000060)
  test_rfc3501_7.5_continuation_request_example:	.: (0.000043)
  test_rfc3501_8_example_1_UNSEEN_response_code:	.: (0.000055)
  test_rfc3501_8_example_2_UIDVALIDITY_response_code:	.: (0.000050)
  test_rfc3501_8_example_3_FETCH_ENVELOPE:		.: (0.000241)
  test_rfc3501_8_example_4_FETCH_BODY[HEADER]:		.: (0.000094)
  test_rfc8474_example_4.1_MAILBOXID_response_to_CREATE:.: (0.000060)
  test_rfc8474_example_4.2_MAILBOXID_untagged_response_to_SELECT:	.: (0.000052)
  test_rfc8474_example_4.3_MAILBOXID_attribute_for_STATUS:	.: (0.000488)
  test_rfc8474_example_5.3_EMAILID_and_THREADID:	.: (0.000063)
  test_rfc8474_example_5.3_no_THREADID_support:		.: (0.000055)
  test_rfc9051_6.4.4.4_ESEARCH_example_1:		.: (0.000100)
  test_rfc9051_6.4.4.4_ESEARCH_example_2:		.: (0.000098)
  test_rfc9051_6.4.4.4_ESEARCH_example_3:		.: (0.000092)
  test_rfc9051_6.4.4.4_ESEARCH_example_4:		.: (0.000080)
  test_rfc9051_6.4.4.4_ESEARCH_example_5:		.: (0.000061)
  test_rfc9051_6.4.4.4_ESEARCH_example_6:		.: (0.000062)
  test_rfc9051_6.4.4.4_ESEARCH_example_7:		.: (0.000064)
  test_rfc9051_6.4.4.4_ESEARCH_example_8:		.: (0.000074)
  test_rfc9051_6.4.4_ESEARCH_example_1:			.: (0.000068)
  test_rfc9051_6.4.4_ESEARCH_example_2:			.: (0.000069)
  test_rfc9051_6.4.4_ESEARCH_example_3:			.: (0.000089)
  test_rfc9051_6.4.4_ESEARCH_example_4:			.: (0.000076)
  test_rfc9051_6.4.4_ESEARCH_example_5:			.: (0.000060)
  test_rfc9051_6.4.4_ESEARCH_example_6:			.: (0.000061)
  test_rfc9051_6.4.4_ESEARCH_example_7:			.: (0.000057)
  test_rfc9051_7.1_ESEARCH_example_1:			.: (0.000078)
  test_rfc9051_7.2.1_ENABLED_example:			.: (0.000052)
  test_rfc9051_7.2.2_capability_example:		.: (0.000064)
  test_rfc9051_7.3.4_ESEARCH_example_1:			.: (0.000073)
  test_rfc9051_7.3.4_ESEARCH_example_2:			.: (0.000083)
  test_rfc9051_7.3.4_ESEARCH_example_3:			.: (0.000065)
  test_rfc9208_4.1.1_example:				.: (0.000067)
  test_rfc9208_4.1.2_example_1:				.: (0.000065)
  test_rfc9208_4.1.2_example_2:				.: (0.000173)
  test_rfc9208_4.1.4_example:				.: (0.000062)
  test_rfc9208_4.2.1_example:				.: (0.000056)
  test_rfc9208_4.2.2_example_1:				.: (0.000051)
  test_rfc9208_4.2.2_example_2:				.: (0.000042)
  test_rfc9208_4.3.1_example_1:				.: (0.000054)
  test_rfc9208_4.3.1_example_2:				.: (0.000075)
  test_search_response_empty:				.: (0.000049)
  test_search_response_multiple_seq_nums_returned:	.: (0.000051)
  test_search_response_single_seq_nums_returned:	.: (0.000045)
  test_search_response_with_condstore_modseq:		.: (0.000051)
  test_status_response_uidnext_uidvalidity:		.: (0.000052)
  test_thread_rfc5256_example1:				.: (0.000397)
  test_thread_rfc5256_example2:				.: (0.000211)
  test_thread_rfc5256_example3:				.: (0.000050)
  test_thread_rfc5256_example4:				.: (0.000074)
  test_thread_rfc5256_example5:				.: (0.000055)
  test_utf8_in_list_mailbox:				.: (0.000066)
  test_utf8_in_resp_text:				.: (0.000055)
  test_xlist_inbox:					.: (0.000062)
IMAPResponsesTest: 
  test: #clear_responses:				.: (0.089366)
  test: #extract_responses:				.: (0.086661)
  test: #responses without type or block:		.: (0.002463)
  test: #responses(&block):				.: (0.087286)
  test: #responses(type, &block):			.: (0.086894)
  test: #responses(type, &nil):				.: (0.086631)
IMAPSequenceSetTest: 
  test: #<<:						.: (0.000167)
  test: #== equality by value (not by identity or representation):	.: (0.000072)
  test: #[negative index]:				.: (0.000145)
  test: #[non-negative index]:				.: (0.000181)
  test: #[range]:					.: (0.010877)
  test: #[start, length]:				.: (0.005187)
  test: #above:						.: (0.000252)
  test: #add:						.: (0.000107)
  test: #add?:						.: (0.000109)
  test: #append:					.: (0.000133)
  test: #at(negative index):				.: (0.000130)
  test: #at(non-negative index):			.: (0.000129)
  test: #below:						.: (0.000177)
  test: #clone:						.: (0.000131)
  test: #clone preserves ractor sharability (deeply frozen):	.: (0.000039)
  test: #count[single number]:				.: (0.000033)
  test: #count[single range]:				.: (0.000028)
  test: #count[simple numbers list]:			.: (0.000030)
  test: #count[numbers and ranges list]:		.: (0.000032)
  test: #count[just *]:					.: (0.000028)
  test: #count[range with *]:				.: (0.000028)
  test: #count[* sorts last]:				.: (0.000031)
  test: #count[out of order]:				.: (0.000034)
  test: #count[adjacent]:				.: (0.000037)
  test: #count[overlapping]:				.: (0.000035)
  test: #count[contained]:				.: (0.000034)
  test: #count[multiple *]:				.: (0.000032)
  test: #count[array]:					.: (0.000046)
  test: #count[nested array]:				.: (0.000050)
  test: #count[Set]:					.: (0.000053)
  test: #count[empty]:					.: (0.000033)
  test: #count_duplicates[single number]:		.: (0.000040)
  test: #count_duplicates[single range]:		.: (0.000033)
  test: #count_duplicates[simple numbers list]:		.: (0.000035)
  test: #count_duplicates[numbers and ranges list]:	.: (0.000041)
  test: #count_duplicates[just *]:			.: (0.000031)
  test: #count_duplicates[range with *]:		.: (0.000033)
  test: #count_duplicates[* sorts last]:		.: (0.000041)
  test: #count_duplicates[out of order]:		.: (0.000044)
  test: #count_duplicates[adjacent]:			.: (0.000061)
  test: #count_duplicates[overlapping]:			.: (0.000047)
  test: #count_duplicates[contained]:			.: (0.000044)
  test: #count_duplicates[multiple *]:			.: (0.000039)
  test: #count_duplicates[array]:			.: (0.000044)
  test: #count_duplicates[nested array]:		.: (0.000046)
  test: #count_duplicates[Set]:				.: (0.000042)
  test: #count_duplicates[empty]:			.: (0.000022)
  test: #count_with_duplicates[single number]:		.: (0.000033)
  test: #count_with_duplicates[single range]:		.: (0.000035)
  test: #count_with_duplicates[simple numbers list]:	.: (0.000034)
  test: #count_with_duplicates[numbers and ranges list]:.: (0.000040)
  test: #count_with_duplicates[just *]:			.: (0.000030)
  test: #count_with_duplicates[range with *]:		.: (0.000029)
  test: #count_with_duplicates[* sorts last]:		.: (0.000037)
  test: #count_with_duplicates[out of order]:		.: (0.000041)
  test: #count_with_duplicates[adjacent]:		.: (0.000047)
  test: #count_with_duplicates[overlapping]:		.: (0.000044)
  test: #count_with_duplicates[contained]:		.: (0.000041)
  test: #count_with_duplicates[multiple *]:		.: (0.000080)
  test: #count_with_duplicates[array]:			.: (0.000049)
  test: #count_with_duplicates[nested array]:		.: (0.000053)
  test: #count_with_duplicates[Set]:			.: (0.000045)
  test: #count_with_duplicates[empty]:			.: (0.000023)
  test: #cover?:					.: (0.001585)
  test: #deconstruct[single number]:			.: (0.000042)
  test: #deconstruct[single range]:			.: (0.000033)
  test: #deconstruct[simple numbers list]:		.: (0.000035)
  test: #deconstruct[numbers and ranges list]:		.: (0.000042)
  test: #deconstruct[just *]:				.: (0.000029)
  test: #deconstruct[range with *]:			.: (0.000033)
  test: #deconstruct[* sorts last]:			.: (0.000036)
  test: #deconstruct[out of order]:			.: (0.000052)
  test: #deconstruct[adjacent]:				.: (0.000047)
  test: #deconstruct[overlapping]:			.: (0.000054)
  test: #deconstruct[contained]:			.: (0.000048)
  test: #deconstruct[multiple *]:			.: (0.000086)
  test: #deconstruct[array]:				.: (0.000054)
  test: #deconstruct[nested array]:			.: (0.000056)
  test: #deconstruct[Set]:				.: (0.000053)
  test: #deconstruct[empty]:				.: (0.000026)
  test: #delete:					.: (0.000197)
  test: #delete?:					.: (0.000122)
  test: #delete_at:					.: (0.000097)
  test: #disjoint?:					.: (0.000083)
  test: #dup:						.: (0.000073)
  test: #each_element[single number]:			.: (0.000093)
  test: #each_element[single range]:			.: (0.000045)
  test: #each_element[simple numbers list]:		.: (0.000045)
  test: #each_element[numbers and ranges list]:		.: (0.000048)
  test: #each_element[just *]:				.: (0.000037)
  test: #each_element[range with *]:			.: (0.000042)
  test: #each_element[* sorts last]:			.: (0.000044)
  test: #each_element[out of order]:			.: (0.000049)
  test: #each_element[adjacent]:			.: (0.007571)
  test: #each_element[overlapping]:			.: (0.000079)
  test: #each_element[contained]:			.: (0.000050)
  test: #each_element[multiple *]:			.: (0.000043)
  test: #each_element[array]:				.: (0.000071)
  test: #each_element[nested array]:			.: (0.000067)
  test: #each_element[Set]:				.: (0.000062)
  test: #each_element[empty]:				.: (0.000033)
  test: #each_entry[single number]:			.: (0.000048)
  test: #each_entry[single range]:			.: (0.000046)
  test: #each_entry[simple numbers list]:		.: (0.000058)
  test: #each_entry[numbers and ranges list]:		.: (0.000076)
  test: #each_entry[just *]:				.: (0.000042)
  test: #each_entry[range with *]:			.: (0.000044)
  test: #each_entry[* sorts last]:			.: (0.000052)
  test: #each_entry[out of order]:			.: (0.000068)
  test: #each_entry[adjacent]:				.: (0.000078)
  test: #each_entry[overlapping]:			.: (0.000076)
  test: #each_entry[contained]:				.: (0.000071)
  test: #each_entry[multiple *]:			.: (0.000055)
  test: #each_entry[array]:				.: (0.000078)
  test: #each_entry[nested array]:			.: (0.000080)
  test: #each_entry[Set]:				.: (0.000075)
  test: #each_entry[empty]:				.: (0.000034)
  test: #each_number[single number]:			.: (0.000053)
  test: #each_number[single range]:			.: (0.000045)
  test: #each_number[simple numbers list]:		.: (0.000043)
  test: #each_number[numbers and ranges list]:		.: (0.000049)
  test: #each_number[just *]:				.: (0.000058)
  test: #each_number[range with *]:			.: (0.000042)
  test: #each_number[* sorts last]:			.: (0.000043)
  test: #each_number[out of order]:			.: (0.000051)
  test: #each_number[adjacent]:				.: (0.000055)
  test: #each_number[overlapping]:			.: (0.000052)
  test: #each_number[contained]:			.: (0.000049)
  test: #each_number[multiple *]:			.: (0.000045)
  test: #each_number[array]:				.: (0.000058)
  test: #each_number[nested array]:			.: (0.000061)
  test: #each_number[Set]:				.: (0.000054)
  test: #each_number[empty]:				.: (0.000046)
  test: #each_ordered_number[single number]:		.: (0.000053)
  test: #each_ordered_number[single range]:		.: (0.000050)
  test: #each_ordered_number[simple numbers list]:	.: (0.000055)
  test: #each_ordered_number[numbers and ranges list]:	.: (0.000069)
  test: #each_ordered_number[just *]:			.: (0.000044)
  test: #each_ordered_number[range with *]:		.: (0.000039)
  test: #each_ordered_number[* sorts last]:		.: (0.000042)
  test: #each_ordered_number[out of order]:		.: (0.000070)
  test: #each_ordered_number[adjacent]:			.: (0.000078)
  test: #each_ordered_number[overlapping]:		.: (0.000075)
  test: #each_ordered_number[contained]:		.: (0.000070)
  test: #each_ordered_number[multiple *]:		.: (0.000044)
  test: #each_ordered_number[array]:			.: (0.000057)
  test: #each_ordered_number[nested array]:		.: (0.000067)
  test: #each_ordered_number[Set]:			.: (0.000057)
  test: #each_ordered_number[empty]:			.: (0.000037)
  test: #each_range[single number]:			.: (0.000055)
  test: #each_range[single range]:			.: (0.000042)
  test: #each_range[simple numbers list]:		.: (0.000045)
  test: #each_range[numbers and ranges list]:		.: (0.000049)
  test: #each_range[just *]:				.: (0.000037)
  test: #each_range[range with *]:			.: (0.000038)
  test: #each_range[* sorts last]:			.: (0.000044)
  test: #each_range[out of order]:			.: (0.000049)
  test: #each_range[adjacent]:				.: (0.000052)
  test: #each_range[overlapping]:			.: (0.000049)
  test: #each_range[contained]:				.: (0.000046)
  test: #each_range[multiple *]:			.: (0.000042)
  test: #each_range[array]:				.: (0.000066)
  test: #each_range[nested array]:			.: (0.000078)
  test: #each_range[Set]:				.: (0.000064)
  test: #each_range[empty]:				.: (0.000033)
  test: #elements[single number]:			.: (0.000031)
  test: #elements[single range]:			.: (0.000028)
  test: #elements[simple numbers list]:			.: (0.000029)
  test: #elements[numbers and ranges list]:		.: (0.000035)
  test: #elements[just *]:				.: (0.000025)
  test: #elements[range with *]:			.: (0.000025)
  test: #elements[* sorts last]:			.: (0.000029)
  test: #elements[out of order]:			.: (0.000034)
  test: #elements[adjacent]:				.: (0.000038)
  test: #elements[overlapping]:				.: (0.000036)
  test: #elements[contained]:				.: (0.000035)
  test: #elements[multiple *]:				.: (0.000030)
  test: #elements[array]:				.: (0.000044)
  test: #elements[nested array]:			.: (0.000048)
  test: #elements[Set]:					.: (0.000044)
  test: #elements[empty]:				.: (0.000023)
  test: #empty?:					.: (0.000063)
  test: #entries[single number]:			.: (0.000035)
  test: #entries[single range]:				.: (0.000031)
  test: #entries[simple numbers list]:			.: (0.000034)
  test: #entries[numbers and ranges list]:		.: (0.000041)
  test: #entries[just *]:				.: (0.000026)
  test: #entries[range with *]:				.: (0.000029)
  test: #entries[* sorts last]:				.: (0.000032)
  test: #entries[out of order]:				.: (0.000041)
  test: #entries[adjacent]:				.: (0.000048)
  test: #entries[overlapping]:				.: (0.000046)
  test: #entries[contained]:				.: (0.000043)
  test: #entries[multiple *]:				.: (0.000035)
  test: #entries[array]:				.: (0.000045)
  test: #entries[nested array]:				.: (0.000049)
  test: #entries[Set]:					.: (0.000043)
  test: #entries[empty]:				.: (0.000024)
  test: #find_index:					.: (0.002345)
  test: #find_ordered_index:				.: (0.000314)
  test: #freeze:					.: (0.000050)
  test: #freeze makes ractor sharable (deeply frozen):	.: (0.000034)
  test: #full?:						.: (0.000042)
  test: #has_duplicates?[single number]:		.: (0.000037)
  test: #has_duplicates?[single range]:			.: (0.000031)
  test: #has_duplicates?[simple numbers list]:		.: (0.000035)
  test: #has_duplicates?[numbers and ranges list]:	.: (0.000041)
  test: #has_duplicates?[just *]:			.: (0.000031)
  test: #has_duplicates?[range with *]:			.: (0.000042)
  test: #has_duplicates?[* sorts last]:			.: (0.000041)
  test: #has_duplicates?[out of order]:			.: (0.000042)
  test: #has_duplicates?[adjacent]:			.: (0.000049)
  test: #has_duplicates?[overlapping]:			.: (0.000048)
  test: #has_duplicates?[contained]:			.: (0.000042)
  test: #has_duplicates?[multiple *]:			.: (0.000038)
  test: #has_duplicates?[array]:			.: (0.000043)
  test: #has_duplicates?[nested array]:			.: (0.000046)
  test: #has_duplicates?[Set]:				.: (0.000041)
  test: #has_duplicates?[empty]:			.: (0.000022)
  test: #include?:					.: (0.008870)
  test: #include_star?:					.: (0.000078)
  test: #intersect?:					.: (0.000090)
  test: #intersection:					.: (0.000127)
  test: #limit:						.: (0.000228)
  test: #limit with *:					.: (0.000130)
  test: #limit with empty result:			.: (0.000042)
  test: #max:						.: (0.000160)
  test: #merge:						.: (0.000164)
  test: #min:						.: (0.000126)
  test: #minmax:					.: (0.000174)
  test: #normalize[single number]:			.: (0.000048)
  test: #normalize[single range]:			.: (0.000033)
  test: #normalize[simple numbers list]:		.: (0.000035)
  test: #normalize[numbers and ranges list]:		.: (0.000039)
  test: #normalize[just *]:				.: (0.000028)
  test: #normalize[range with *]:			.: (0.000030)
  test: #normalize[* sorts last]:			.: (0.000035)
  test: #normalize[out of order]:			.: (0.000040)
  test: #normalize[adjacent]:				.: (0.000044)
  test: #normalize[overlapping]:			.: (0.000040)
  test: #normalize[contained]:				.: (0.000038)
  test: #normalize[multiple *]:				.: (0.000033)
  test: #normalize[array]:				.: (0.000054)
  test: #normalize[nested array]:			.: (0.000056)
  test: #normalize[Set]:				.: (0.000053)
  test: #normalize[empty]:				.: (0.000025)
  test: #normalize![single number]:			.: (0.000030)
  test: #normalize![single range]:			.: (0.000029)
  test: #normalize![simple numbers list]:		.: (0.000031)
  test: #normalize![numbers and ranges list]:		.: (0.000041)
  test: #normalize![just *]:				.: (0.000027)
  test: #normalize![range with *]:			.: (0.000097)
  test: #normalize![* sorts last]:			.: (0.000036)
  test: #normalize![out of order]:			.: (0.000037)
  test: #normalize![adjacent]:				.: (0.000040)
  test: #normalize![overlapping]:			.: (0.000038)
  test: #normalize![contained]:				.: (0.000037)
  test: #normalize![multiple *]:			.: (0.000031)
  test: #normalize![array]:				.: (0.000049)
  test: #normalize![nested array]:			.: (0.000051)
  test: #normalize![Set]:				.: (0.000046)
  test: #normalize![empty]:				.: (0.000024)
  test: #normalized_string[single number]:		.: (0.000029)
  test: #normalized_string[single range]:		.: (0.000028)
  test: #normalized_string[simple numbers list]:	.: (0.000030)
  test: #normalized_string[numbers and ranges list]:	.: (0.000035)
  test: #normalized_string[just *]:			.: (0.000025)
  test: #normalized_string[range with *]:		.: (0.000032)
  test: #normalized_string[* sorts last]:		.: (0.000036)
  test: #normalized_string[out of order]:		.: (0.000037)
  test: #normalized_string[adjacent]:			.: (0.000040)
  test: #normalized_string[overlapping]:		.: (0.000038)
  test: #normalized_string[contained]:			.: (0.000036)
  test: #normalized_string[multiple *]:			.: (0.000031)
  test: #normalized_string[array]:			.: (0.000128)
  test: #normalized_string[nested array]:		.: (0.000053)
  test: #normalized_string[Set]:			.: (0.000047)
  test: #normalized_string[empty]:			.: (0.000024)
  test: #numbers[single number]:			.: (0.000033)
  test: #numbers[single range]:				.: (0.000030)
  test: #numbers[simple numbers list]:			.: (0.000031)
  test: #numbers[numbers and ranges list]:		.: (0.000035)
  test: #numbers[just *]:				.: (0.000039)
  test: #numbers[range with *]:				.: (0.000032)
  test: #numbers[* sorts last]:				.: (0.000033)
  test: #numbers[out of order]:				.: (0.000041)
  test: #numbers[adjacent]:				.: (0.000042)
  test: #numbers[overlapping]:				.: (0.000038)
  test: #numbers[contained]:				.: (0.000036)
  test: #numbers[multiple *]:				.: (0.000043)
  test: #numbers[array]:				.: (0.000048)
  test: #numbers[nested array]:				.: (0.000051)
  test: #numbers[Set]:					.: (0.000046)
  test: #numbers[empty]:				.: (0.000024)
  test: #ordered_at(negative index):			.: (0.000301)
  test: #ordered_at(non-negative index):		.: (0.000173)
  test: #ranges[single number]:				.: (0.000059)
  test: #ranges[single range]:				.: (0.000030)
  test: #ranges[simple numbers list]:			.: (0.000032)
  test: #ranges[numbers and ranges list]:		.: (0.000035)
  test: #ranges[just *]:				.: (0.000025)
  test: #ranges[range with *]:				.: (0.000026)
  test: #ranges[* sorts last]:				.: (0.000030)
  test: #ranges[out of order]:				.: (0.000035)
  test: #ranges[adjacent]:				.: (0.000038)
  test: #ranges[overlapping]:				.: (0.000036)
  test: #ranges[contained]:				.: (0.000035)
  test: #ranges[multiple *]:				.: (0.000030)
  test: #ranges[array]:					.: (0.000046)
  test: #ranges[nested array]:				.: (0.000047)
  test: #ranges[Set]:					.: (0.000043)
  test: #ranges[empty]:					.: (0.000095)
  test: #slice!:					.: (0.000274)
  test: #string[single number]:				.: (0.000032)
  test: #string[single range]:				.: (0.000027)
  test: #string[simple numbers list]:			.: (0.000029)
  test: #string[numbers and ranges list]:		.: (0.000032)
  test: #string[just *]:				.: (0.000024)
  test: #string[range with *]:				.: (0.000025)
  test: #string[* sorts last]:				.: (0.000027)
  test: #string[out of order]:				.: (0.000032)
  test: #string[adjacent]:				.: (0.000036)
  test: #string[overlapping]:				.: (0.000034)
  test: #string[contained]:				.: (0.000033)
  test: #string[multiple *]:				.: (0.000029)
  test: #string[array]:					.: (0.000049)
  test: #string[nested array]:				.: (0.000051)
  test: #string[Set]:					.: (0.000046)
  test: #string[empty]:					.: (0.000023)
  test: #subtract:					.: (0.000310)
  test: #to_s[single number]:				.: (0.000032)
  test: #to_s[single range]:				.: (0.000027)
  test: #to_s[simple numbers list]:			.: (0.000029)
  test: #to_s[numbers and ranges list]:			.: (0.000032)
  test: #to_s[just *]:					.: (0.000024)
  test: #to_s[range with *]:				.: (0.000025)
  test: #to_s[* sorts last]:				.: (0.000037)
  test: #to_s[out of order]:				.: (0.000035)
  test: #to_s[adjacent]:				.: (0.000037)
  test: #to_s[overlapping]:				.: (0.000035)
  test: #to_s[contained]:				.: (0.000033)
  test: #to_s[multiple *]:				.: (0.000029)
  test: #to_s[array]:					.: (0.000049)
  test: #to_s[nested array]:				.: (0.000050)
  test: #to_s[Set]:					.: (0.000046)
  test: #to_s[empty]:					.: (0.000029)
  test: #to_sequence_set:				.: (0.000050)
  test: #valid_string[single number]:			.: (0.000037)
  test: #valid_string[single range]:			.: (0.000028)
  test: #valid_string[simple numbers list]:		.: (0.000030)
  test: #valid_string[numbers and ranges list]:		.: (0.000032)
  test: #valid_string[just *]:				.: (0.000025)
  test: #valid_string[range with *]:			.: (0.000026)
  test: #valid_string[* sorts last]:			.: (0.000028)
  test: #valid_string[out of order]:			.: (0.000032)
  test: #valid_string[adjacent]:			.: (0.000036)
  test: #valid_string[overlapping]:			.: (0.000035)
  test: #valid_string[contained]:			.: (0.000034)
  test: #valid_string[multiple *]:			.: (0.000029)
  test: #valid_string[array]:				.: (0.000049)
  test: #valid_string[nested array]:			.: (0.000051)
  test: #valid_string[Set]:				.: (0.000047)
  test: #valid_string[empty]:				.: (0.000032)
  test: #xor:						.: (0.000222)
  test: #~ and #complement[single number]:		.: (0.000047)
  test: #~ and #complement[single range]:		.: (0.000121)
  test: #~ and #complement[simple numbers list]:	.: (0.000049)
  test: #~ and #complement[numbers and ranges list]:	.: (0.000051)
  test: #~ and #complement[just *]:			.: (0.000038)
  test: #~ and #complement[range with *]:		.: (0.000038)
  test: #~ and #complement[* sorts last]:		.: (0.000044)
  test: #~ and #complement[out of order]:		.: (0.000052)
  test: #~ and #complement[adjacent]:			.: (0.000052)
  test: #~ and #complement[overlapping]:		.: (0.000050)
  test: #~ and #complement[contained]:			.: (0.000048)
  test: #~ and #complement[multiple *]:			.: (0.000041)
  test: #~ and #complement[array]:			.: (0.000082)
  test: #~ and #complement[nested array]:		.: (0.000069)
  test: #~ and #complement[Set]:			.: (0.000062)
  test: #~ and #complement[empty]:			.: (0.000030)
  test: .[] must not be empty:				.: (0.000187)
  test: .[] returns ractor sharable (deeply frozen):	.: (0.000039)
  test: .[frozen SequenceSet] returns that SequenceSet:	.: (0.000036)
  test: .new, input may be empty:			.: (0.000064)
  test: .new, input must be valid:			.: (0.000189)
  test: .try_convert:					.: (0.000094)
  test: SequenceSet[input][single number]:		.: (0.000049)
  test: SequenceSet[input][single range]:		.: (0.000038)
  test: SequenceSet[input][simple numbers list]:	.: (0.000039)
  test: SequenceSet[input][numbers and ranges list]:	.: (0.008337)
  test: SequenceSet[input][just *]:			.: (0.000054)
  test: SequenceSet[input][range with *]:		.: (0.000042)
  test: SequenceSet[input][* sorts last]:		.: (0.000043)
  test: SequenceSet[input][out of order]:		.: (0.000046)
  test: SequenceSet[input][adjacent]:			.: (0.000049)
  test: SequenceSet[input][overlapping]:		.: (0.000045)
  test: SequenceSet[input][contained]:			.: (0.000052)
  test: SequenceSet[input][multiple *]:			.: (0.000046)
  test: SequenceSet[input][array]:			.: (0.000063)
  test: SequenceSet[input][nested array]:		.: (0.000057)
  test: SequenceSet[input][Set]:			.: (0.000054)
  test: SequenceSet[input][empty]:			.: (0.000034)
  test: frozen error message[#clear]:			.: (0.000070)
  test: frozen error message[#replace seq]:		.: (0.000061)
  test: frozen error message[#replace num]:		.: (0.000048)
  test: frozen error message[#replace str]:		.: (0.000054)
  test: frozen error message[#string=]:			.: (0.000048)
  test: frozen error message[#add]:			.: (0.000050)
  test: frozen error message[#add?]:			.: (0.000067)
  test: frozen error message[#<<]:			.: (0.000054)
  test: frozen error message[#append]:			.: (0.000056)
  test: frozen error message[#delete]:			.: (0.000059)
  test: frozen error message[#delete?]:			.: (0.000051)
  test: frozen error message[#delete_at]:		.: (0.000055)
  test: frozen error message[#slice!]:			.: (0.000055)
  test: frozen error message[#merge]:			.: (0.000050)
  test: frozen error message[#subtract]:		.: (0.000051)
  test: frozen error message[#limit!]:			.: (0.000051)
  test: frozen error message[#complement!]:		.: (0.000054)
  test: frozen error message[#normalize!]:		.: (0.000047)
  test: fuzz test: add numbers and compare to reference Set:	.: (0.157087)
  test: fuzz test: add ranges and compare to reference Set:	.: (0.082361)
  test: fuzz test: set complement identities:		.: (0.007719)
  test: fuzz test: set intersection identities:		.: (0.025400)
  test: fuzz test: set subtraction identities:		.: (0.022712)
  test: fuzz test: set union identities:		.: (0.032446)
  test: fuzz test: set xor identities:			.: (0.051721)
  test: set + other:					.: (0.000193)
  test: set - other:					.: (0.000349)
  test: set == ~~set[single number]:			.: (0.000070)
  test: set == ~~set[single range]:			.: (0.000049)
  test: set == ~~set[simple numbers list]:		.: (0.000055)
  test: set == ~~set[numbers and ranges list]:		.: (0.000062)
  test: set == ~~set[just *]:				.: (0.000045)
  test: set == ~~set[range with *]:			.: (0.000044)
  test: set == ~~set[* sorts last]:			.: (0.000057)
  test: set == ~~set[out of order]:			.: (0.000066)
  test: set == ~~set[adjacent]:				.: (0.000146)
  test: set == ~~set[overlapping]:			.: (0.000061)
  test: set == ~~set[contained]:			.: (0.000058)
  test: set == ~~set[multiple *]:			.: (0.000050)
  test: set == ~~set[array]:				.: (0.000085)
  test: set == ~~set[nested array]:			.: (0.000082)
  test: set == ~~set[Set]:				.: (0.000077)
  test: set == ~~set[empty]:				.: (0.000033)
  test: set | ~set == full[single number]:		.: (0.000044)
  test: set | ~set == full[single range]:		.: (0.000041)
  test: set | ~set == full[simple numbers list]:	.: (0.000046)
  test: set | ~set == full[numbers and ranges list]:	.: (0.000050)
  test: set | ~set == full[just *]:			.: (0.000115)
  test: set | ~set == full[range with *]:		.: (0.000046)
  test: set | ~set == full[* sorts last]:		.: (0.000047)
  test: set | ~set == full[out of order]:		.: (0.000051)
  test: set | ~set == full[adjacent]:			.: (0.000053)
  test: set | ~set == full[overlapping]:		.: (0.000056)
  test: set | ~set == full[contained]:			.: (0.000056)
  test: set | ~set == full[multiple *]:			.: (0.000044)
  test: set | ~set == full[array]:			.: (0.000076)
  test: set | ~set == full[nested array]:		.: (0.000072)
  test: set | ~set == full[Set]:			.: (0.000064)
  test: set | ~set == full[empty]:			.: (0.000036)
  test: transforms keep frozen status[#min(count)]:	.: (0.000098)
  test: transforms keep frozen status[#max(count)]:	.: (0.000084)
  test: transforms keep frozen status[#slice(length)]:	.: (0.000078)
  test: transforms keep frozen status[#slice(range)]:	.: (0.000085)
  test: transforms keep frozen status[#slice => empty]:	.: (0.000045)
  test: transforms keep frozen status[#slice => empty]:	.: (0.000053)
  test: transforms keep frozen status[#union]:		.: (0.000063)
  test: transforms keep frozen status[#intersection]:	.: (0.000071)
  test: transforms keep frozen status[#difference]:	.: (0.000059)
  test: transforms keep frozen status[#xor]:		.: (0.000097)
  test: transforms keep frozen status[#complement]:	.: (0.000058)
  test: transforms keep frozen status[#normalize]:	.: (0.000053)
  test: transforms keep frozen status[#above]:		.: (0.000061)
  test: transforms keep frozen status[#below]:		.: (0.000061)
  test: transforms keep frozen status[#limit]:		.: (0.000062)
  test: transforms keep frozen status[#limit => empty]:	.: (0.000046)
  test: values for '*':					.: (0.000181)
  test: ~full == empty:					.: (0.000072)
  test_inspect[empty]:					.: (0.000028)
  test_inspect[frozen empty]:				.: (0.000023)
  test_inspect[normalized]:				.: (0.000036)
  test_inspect[denormalized]:				.: (0.000031)
  test_inspect[star]:					.: (0.000025)
  test_inspect[frozen]:					.: (0.000038)
IMAPTest: 
  test: #authenticate disconnects and raises SASL::AuthenticationFailed when the server succeeds prematurely:	.: (0.045136)
  test: #authenticate never sends an initial response when config.sasl_ir: false:	.: (0.086348)
  test: #authenticate never sends an initial response when sasl_ir: false:	.: (0.086467)
  test: #authenticate never sends an initial response when the mechanism does not support client-first:	.: (0.043244)
  test: #authenticate never sends an initial response when the server doesn't explicitly support the mechanism:	.: (0.053300)
  test: #authenticate never sends an initial response when the server isn't capable:	.: (0.043262)
  test: #authenticate sends '=' as the initial reponse when the initial response is an empty string:	.: (0.043166)
  test: #authenticate sends an initial response when supported by both the mechanism and the server:	.: (0.043560)
  test: #examine with condstore:			.: (0.086549)
  test: #expunge with EXPUNGE responses:		.: (0.173139)
  test: #expunge with a VANISHED response:		.: (0.173398)
  test: #expunge with multiple VANISHED responses:	.: (0.173153)
  test: #fetch with FETCH responses:			.: (0.173357)
  test: #fetch with changedsince:			.: (0.143297)
  test: #search/#uid_search:				.: (1.473310)
  test: #search/#uid_search with ESEARCH or IMAP4rev2:	.: (0.086622)
  test: #search/#uid_search with invalid arguments:	.: (0.002082)
  test: #select with condstore:				.: (0.087903)
  test: #store with FETCH responses:			.: (0.173420)
  test: #store with unchangedsince:			.: (0.129788)
  test: #uid_expunge with EXPUNGE responses:		.: (0.176384)
  test: #uid_expunge with VANISHED response:		.: (0.173301)
  test: #uid_fetch with UIDFETCH responses:		.: (0.174156)
  test: #uid_fetch with changedsince:			.: (0.129065)
  test: #uid_fetch with partial:			.: (0.303264)
  test: #uid_store with UIDFETCH responses:		.: (0.173397)
  test: #uid_store with changedsince:			.: (0.129979)
  test: missing server ENABLED response:		.: (0.043304)
  test: missing server ESEARCH response:		.: (0.086588)
  test: missing server SEARCH response:			.: (0.086562)
  test: missing server SORT response:			.: (0.086553)
  test: missing server THREAD response:			.: (0.086633)
  test: send PartialRange args:				.: (0.399938)
  test_append:						.: (0.186656)
  test_append_fail:					.: (0.143439)
  test_close:						.: (0.129780)
  test_connection_closed_during_idle:			.: (0.102486)
  test_connection_closed_without_greeting:		.: (0.123096)
  test_default_port:					.: (0.000064)
  test_disconnect:					.: (0.102802)
  test_enable:						.: (0.261566)
  test_exception_during_idle:				.: (0.186349)
  test_exception_during_shutdown:			.: (0.101988)
  test_id:						.: (0.218086)
  test_idle:						.: (0.186417)
  test_idle_done_not_during_idle:			.: (0.201609)
  test_idle_timeout:					.: (0.345202)
  test_imaps_post_connection_check:			.: (0.106971)
  test_imaps_unknown_ca:				.: (0.106096)
  test_imaps_verify_none:				.: (0.193484)
  test_imaps_with_ca_file:				.: (0.196868)
  test_send_invalid_number:				.: (0.402979)
  test_send_literal:					.: (0.186528)
  test_starttls:					.: (0.110122)
  test_starttls_stripping:				.: (0.102611)
  test_starttls_unknown_ca:				.: (0.138925)
  test_uidplus_appenduid:				.: (0.174982)
  test_uidplus_copyuid_multiple:			.: (0.129771)
  test_uidplus_copyuid_single:				.: (0.129965)
  test_uidplus_uidnotsticky:				.: (0.086564)
  test_unexpected_bye:					.: (0.102345)
  test_unexpected_eof:					.: (0.101799)
  test_unselect:					.: (0.129024)
Net::IMAP::TestData: 
  test_define:						.: (0.000155)
  test_define_edge_cases:				.: (0.000046)
  test_define_with_block:				.: (0.000029)
  test_dup:						.: (0.000042)
  test_eql:						.: (0.000039)
  test_equal:						.: (0.000035)
  test_initialize:					.: (0.000078)
  test_initialize_redefine:				.: (0.000045)
  test_inspect:						.: (0.000049)
  test_instance_behavior:				.: (0.000124)
  test_marshal:						.: (0.000051)
  test_member_precedence:				.: (0.000038)
  test_memberless:					.: (0.000042)
  test_recursive_inspect:				.: (0.000066)
  test_square_braces:					.: (0.000028)
  test_with:						.: (0.000115)
ResponseReaderTest: 
  test: #read_response_buffer:				.: (0.000431)
  test: #read_response_buffer with max_response_size:	.: (0.000072)
SASLprepTest: 
  test_saslprep_invalid_inputs:				.: (0.010784)
  test_saslprep_valid_inputs:				.: (0.000094)
SearchDataTests: 
  test: #== checks modseq:				.: (0.000105)
  test: #== ignores the order of elements:		.: (0.000034)
  test: #inspect:					.: (0.000043)
  test: #modseq:					.: (0.000028)
  test: #to_s:						.: (0.000041)
  test: #to_s(type):					.: (0.000087)
  test: Array[*nz_numbers] != SearchResult[*differently_sorted]:.: (0.000030)
  test: Array[*nz_numbers] == SearchResult[*nz_numbers, modseq: nz_number]:	.: (0.000024)
  test: SearchResult.new(nz_numbers) == Array.new(nz_numbers):	.: (0.000030)
  test: SearchResult[*nz_numbers, modseq: nz_number] != Array[*nz_numbers]:	.: (0.000024)
  test: SearchResult[*nz_numbers] == Array[*differently_sorted]:.: (0.000024)
  test: SearchResult[*nz_numbers] == Array[*nz_numbers]:.: (0.000026)
StringPrepNamePrepTest: 
  test: ASCII control characters U+0010 U+007F:		.: (0.000076)
  test: ASCII space character U+0020:			.: (0.000034)
  test: Bidi: RandALCat character U+0627 U+0031 U+0628:	.: (0.000033)
  test: Bidi: RandALCat character U+FB38 and LCat characters:	.: (0.000273)
  test: Case folding 8bit U+00DF (german sharp s):	.: (0.000036)
  test: Case folding ASCII U+0043 U+0041 U+0046 U+0045:	.: (0.000045)
  test: Case folding U+0130 (turkish capital I with dot):	.: (0.000067)
  test: Case folding U+1FB7 and normalization:		.: (0.000044)
  test: Case folding U+2121 U+33C6 U+1D7BB:		.: (0.000040)
  test: Case folding multibyte U+0143 U+037A:		.: (0.000034)
  test: Deprecated U+202A:				.: (0.000044)
  test: Display property character U+0341:		.: (0.000036)
  test: Ideographic description character U+2FF5:	.: (0.000037)
  test: Language tagging character U+E0001:		.: (0.000035)
  test: Language tagging character U+E0042:		.: (0.000033)
  test: Larger test (expanding):			.: (0.000050)
  test: Larger test (shrinking):			.: (0.000060)
  test: Left-to-right mark U+200E:			.: (0.000035)
  test: Map to nothing:					.: (0.000036)
  test: Non-ASCII 8bit control character U+0085:	.: (0.000077)
  test: Non-ASCII 8bit space character U+00A0:		.: (0.000038)
  test: Non-ASCII control character U+1D175:		.: (0.000033)
  test: Non-ASCII multibyte control character U+180E:	.: (0.000042)
  test: Non-ASCII multibyte space character U+1680:	.: (0.000039)
  test: Non-ASCII multibyte space character U+2000:	.: (0.000032)
  test: Non-ASCII multibyte space character U+3000:	.: (0.000031)
  test: Non-character code point U+10FFFF:		.: (0.000034)
  test: Non-character code point U+8FFFE:		.: (0.000033)
  test: Non-plain text character U+FFFD:		.: (0.000033)
  test: Normalization of U+006a U+030c U+00A0 U+00AA:	.: (0.000034)
  test: Plane 0 private use character U+F123:		.: (0.000032)
  test: Plane 15 private use character U+F1234:		.: (0.000032)
  test: Plane 16 private use character U+10F234:	.: (0.000031)
  test: Self-reverting case folding U+0390 and normalization:	.: (0.000049)
  test: Self-reverting case folding U+03B0 and normalization:	.: (0.000033)
  test: Self-reverting case folding U+1E96 and normalization:	.: (0.000038)
  test: Self-reverting case folding U+1F56 and normalization:	.: (0.000040)
  test: Zero Width No-Break Space U+FEFF:		.: (0.000034)
  test: Zero Width Space U+200b:			.: (0.000030)
StringPrepProfilesTest: 
  test_trace_profile_prohibit_ctrl_chars:		.: (0.000065)
  test_trace_profile_prohibit_tagging_chars:		.: (0.000044)
StringPrepTablesTest: 
  test_rfc3454_table_A_1:				.: (0.590484)
  test_rfc3454_table_B_1:				.: (0.292763)
  test_rfc3454_table_B_2:				.: (0.317327)
  test_rfc3454_table_C_1_1:				.: (0.209226)
  test_rfc3454_table_C_1_2:				.: (0.289002)
  test_rfc3454_table_C_2_1:				.: (0.216068)
  test_rfc3454_table_C_2_2:				.: (0.308639)
  test_rfc3454_table_C_3:				.: (0.321658)
  test_rfc3454_table_C_4:				.: (0.302258)
  test_rfc3454_table_C_5:				.: (0.292759)
  test_rfc3454_table_C_6:				.: (0.284920)
  test_rfc3454_table_C_7:				.: (0.287145)
  test_rfc3454_table_C_8:				.: (0.302222)
  test_rfc3454_table_C_9:				.: (0.283070)
  test_rfc3454_table_D_1:				.: (0.292011)
  test_rfc3454_table_D_2:				.: (0.381488)
TestAppendUIDData: 
  test: #assigned_uids is converted to SequenceSet:	.: (0.000182)
  test: #assigned_uids must be a valid uid-set:		.: (0.000122)
  test: #size returns the number of UIDs:		.: (0.000160)
  test: #uidvalidity must be valid nz-number:		.: (0.000071)
TestCopyUIDData: 
  test: #[](source_uid):				.: (0.000165)
  test: #assigned_uid_for(source_uid):			.: (0.000149)
  test: #assigned_uids is converted to SequenceSet:	.: (0.000090)
  test: #assigned_uids must be a valid uid-set:		.: (0.000154)
  test: #each_uid_pair:					.: (0.000220)
  test: #size returns the number of UIDs:		.: (0.000201)
  test: #source_uid_for(assigned_uid):			.: (0.000142)
  test: #source_uids and #assigned_uids must be same size:	.: (0.000092)
  test: #source_uids is converted to SequenceSet:	.: (0.000087)
  test: #source_uids must be valid uid-set:		.: (0.000126)
  test: #uid_mapping for with source_uids in unsorted order:	.: (0.000083)
  test: #uid_mapping maps source_uids to assigned_uids:	.: (0.000075)
  test: #uidvalidity must be valid nz-number:		.: (0.000091)
TestUIDPlusData: 
  test: #uid_mapping for with source_uids in unsorted order:	.: (0.000062)
  test: #uid_mapping with sorted source_uids:		.: (0.000025)
ThreadMemberTest: 
  test: #to_sequence_set:				.: (0.000200)
UIDFetchDataTest: 
  test: #binary(1, 2, 3, offset: 1) returns the BINARY[1.2.3]<1> attr:	.: (0.000076)
  test: #binary_size(1, 2, 3) returns the BINARY.SIZE[1.2.3] attr:	.: (0.000037)
  test: #deconstruct_keys:				.: (0.000058)
  test: #emailid returns EMAILID value (RFC8474: OBJECTID):	.: (0.000025)
  test: #header returns the BODY[HEADER] attr:		.: (0.000027)
  test: #header(1, 2, 3) returns the BODY[1.2.3.HEADER] attr:	.: (0.000025)
  test: #header(1, 2, oFfset: 456) returns the BODY[1.2.HEADER]<456> attr:	.: (0.000025)
  test: #header_fields(*) => BODY[HEADER.FIELDS (*)] attr:	.: (0.000035)
  test: #header_fields(*, offset:) => BODY[part.HEADER.FIELDS (*)]<offset>:	.: (0.000032)
  test: #header_fields(*, part:) => BODY[part.HEADER.FIELDS (*)] attr:	.: (0.000041)
  test: #header_fields_not(*) => BODY[HEADER.FIELDS.NOT (*)] attr:	.: (0.000031)
  test: #header_fields_not(*, offset:) => BODY[part.HEADER.FIELDS.NOT (*)]<offset>:	.: (0.000032)
  test: #header_fields_not(*, part:) => BODY[part.HEADER.FIELDS.NOT (*)] attr:	.: (0.000040)
  test: #internaldate parses a datetime value:		.: (0.000099)
  test: #message returns the BODY[] attr:		.: (0.000027)
  test: #message(offset:) returns the BODY[]<offset> attr:	.: (0.000041)
  test: #mime(1, 2, 3) returns the BODY[1.2.3.MIME] attr:	.: (0.000030)
  test: #mime(1, 2, oFfset: 456) returns the BODY[1.2.MIME]<456> attr:	.: (0.000025)
  test: #modseq returns MODSEQ value (RFC7162: CONDSTORE):	.: (0.000023)
  test: #part(1, 2, 3) returns the BODY[1.2.3] attr:	.: (0.000025)
  test: #part(1, 2, oFfset: 456) returns the BODY[1.2]<456> attr:	.: (0.000025)
  test: #seqno does not exist:				.: (0.000035)
  test: #text returns the BODY[TEXT] attr:		.: (0.000113)
  test: #text(1, 2, 3) returns the BODY[1.2.3.TEXT] attr:	.: (0.000028)
  test: #text(1, 2, 3, oFfset: 456) returns the BODY[1.2.3.TEXT]<456> attr:	.: (0.000025)
  test: #threadid returns THREADID value (RFC8474: OBJECTID):	.: (0.000022)
  test: #uid replaces #seqno:				.: (0.000023)
  test: #uid warns when differs from UID attribute:	.: (0.000043)
  test: simple RFC3501 and RFC9051 attrs accessors:	.: (0.000046)
  test: simple RFC822 attrs accessors (deprecated by RFC9051):	.: (0.000030)
VanishedDataTest: 
  test: #==:						.: (0.000100)
  test: #deconstruct_keys returns uids and earlier:	.: (0.000055)
  test: #eql?:						.: (0.000109)
  test: #to_a delegates to uids (SequenceSet#to_a):	.: (0.000038)
  test: .[], missing args raises ArgumentError:		.: (0.000107)
  test: .[], mixing args raises ArgumentError:		.: (0.000038)
  test: .[], nil uids raises DataFormatError:		.: (0.000033)
  test: .[uids, earlier]:				.: (0.000064)
  test: .[uids: string, earlier: bool]:			.: (0.000058)
  test: .new(uids: string, earlier: bool):		.: (0.000146)
  test: .new, missing args raises ArgumentError:	.: (0.000154)
  test: .new, nil uids raises DataFormatError:		.: (0.000032)

Finished in 19.360443346 seconds.
-------------------------------------------------------------------------------
1232 tests, 10832 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications
100% passed
-------------------------------------------------------------------------------
63.63 tests/s, 559.49 assertions/s
>>> ruby-net-imap: Entering fakeroot...
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/authenticators.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/command_data.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/config.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/config/attr_accessors.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/config/attr_inheritance.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/config/attr_type_coercion.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/connection_state.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/data_encoding.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/data_lite.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/deprecated_client_options.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/errors.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/esearch_result.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/fetch_data.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/flags.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/response_data.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/response_parser.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/response_parser/parser_utils.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/response_reader.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/sasl.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/sasl/anonymous_authenticator.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/sasl/authentication_exchange.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/sasl/authenticators.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/sasl/client_adapter.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/sasl/cram_md5_authenticator.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/sasl/digest_md5_authenticator.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/sasl/external_authenticator.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/sasl/gs2_header.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/sasl/login_authenticator.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/sasl/oauthbearer_authenticator.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/sasl/plain_authenticator.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/sasl/protocol_adapters.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/sasl/scram_algorithm.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/sasl/scram_authenticator.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/sasl/stringprep.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/sasl/xoauth2_authenticator.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/sasl_adapter.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/search_result.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/sequence_set.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/stringprep.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/stringprep/nameprep.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/stringprep/saslprep.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/stringprep/saslprep_tables.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/stringprep/tables.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/stringprep/trace.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/uidplus_data.rb
/tmp/pkg/ruby-net-imap/usr/lib/ruby/gems/3.4.0/gems/net-imap-0.5.8/lib/net/imap/vanished_data.rb
Successfully installed net-imap-0.5.8
1 gem installed
>>> ruby-net-imap-doc*: Running split function doc...
'usr/lib/ruby/gems/3.4.0/doc' -> '/tmp/pkg/ruby-net-imap-doc/usr/lib/ruby/gems/3.4.0/doc'
>>> ruby-net-imap-doc*: Preparing subpackage ruby-net-imap-doc...
>>> ruby-net-imap-doc*: Running postcheck for ruby-net-imap-doc
>>> ruby-net-imap*: Running postcheck for ruby-net-imap
>>> ruby-net-imap*: Preparing package ruby-net-imap...
>>> ruby-net-imap-doc*: Tracing dependencies...
	ruby
>>> ruby-net-imap-doc*: Package size: 1.0 B
>>> ruby-net-imap-doc*: Compressing data...
>>> ruby-net-imap-doc*: Create checksum...
>>> ruby-net-imap-doc*: Create ruby-net-imap-doc-0.5.8-r0.apk
>>> ruby-net-imap*: Tracing dependencies...
	ruby
>>> ruby-net-imap*: Package size: 664.2 KB
>>> ruby-net-imap*: Compressing data...
>>> ruby-net-imap*: Create checksum...
>>> ruby-net-imap*: Create ruby-net-imap-0.5.8-r0.apk
>>> ruby-net-imap: Updating the main/x86_64 repository index...
>>> ruby-net-imap: Signing the index...
>>> ruby-net-imap: Cleaning up srcdir
>>> ruby-net-imap: Cleaning up build chroot
>>> ruby-net-imap: Cleaning up pkgdir
