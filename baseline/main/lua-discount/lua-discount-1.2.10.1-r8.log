>>> lua-discount: Validating /home/packager/oily-pine/main/lua-discount/APKBUILD...
>>> lua-discount: Cleaning up srcdir
>>> lua-discount: Cleaning up pkgdir
>>> lua-discount: Cleaning up tmpdir
>>> lua-discount: Fetching https://dev.alpinelinux.org/archive/lua-discount/lua-discount-1.2.10.1.tar.gz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 23641  100 23641    0     0   103k      0 --:--:-- --:--:-- --:--:--  103k
>>> lua-discount: Fetching https://dev.alpinelinux.org/archive/lua-discount/lua-discount-1.2.10.1.tar.gz
>>> lua-discount: Checking sha512sums...
lua-discount-1.2.10.1.tar.gz: OK
>>> lua-discount: Preparing build chroot...
fetch http://dl-cdn.alpinelinux.org/alpine/edge/main/x86_64/APKINDEX.tar.gz
(1/84) Installing musl (1.2.5-r10)
(2/84) Installing libcrypto3 (3.5.0-r0)
(3/84) Installing ca-certificates-bundle (20241121-r2)
(4/84) Installing libssl3 (3.5.0-r0)
(5/84) Installing zlib (1.3.1-r2)
(6/84) Installing libapk2 (2.14.9-r2)
(7/84) Installing apk-tools (2.14.9-r2)
(8/84) Installing libcap2 (2.76-r0)
(9/84) Installing libcap-getcap (2.76-r0)
(10/84) Installing fakeroot (1.37.1.1-r0)
(11/84) Installing scanelf (1.3.8-r1)
(12/84) Installing musl-utils (1.2.5-r10)
(13/84) Installing libgcc (14.3.0-r1)
(14/84) Installing libstdc++ (14.3.0-r1)
(15/84) Installing lzip (1.25-r0)
(16/84) Installing openssl (3.5.0-r0)
(17/84) Installing patch (2.8-r0)
(18/84) Installing pkgconf (2.4.3-r0)
(19/84) Installing acl-libs (2.3.2-r1)
(20/84) Installing tar (1.35-r3)
(21/84) Installing busybox (1.37.0-r18)
Executing busybox-1.37.0-r18.post-install
(22/84) Installing ssl_client (1.37.0-r18)
(23/84) Installing busybox-binsh (1.37.0-r18)
(24/84) Installing abuild (3.15.0-r0)
Executing abuild-3.15.0-r0.pre-install
(25/84) Installing abuild-sudo (3.15.0-r0)
(26/84) Installing alpine-baselayout-data (3.7.0-r0)
(27/84) Installing alpine-baselayout (3.7.0-r0)
Executing alpine-baselayout-3.7.0-r0.pre-install
Executing alpine-baselayout-3.7.0-r0.post-install
(28/84) Installing bridge (1.5-r5)
(29/84) Installing ifupdown-ng (0.12.1-r7)
(30/84) Installing openrc-user (0.62.2-r2)
(31/84) Installing openrc (0.62.2-r2)
Executing openrc-0.62.2-r2.post-install
(32/84) Installing mdev-conf (4.8-r0)
(33/84) Installing busybox-mdev-openrc (1.37.0-r18)
(34/84) Installing alpine-conf (3.20.0-r0)
(35/84) Installing alpine-keys (2.5-r0)
(36/84) Installing alpine-release (3.22.0-r0)
(37/84) Installing busybox-openrc (1.37.0-r18)
(38/84) Installing busybox-suid (1.37.0-r18)
(39/84) Installing alpine-base (3.22.0-r0)
(40/84) Installing jansson (2.14.1-r0)
(41/84) Installing zstd-libs (1.5.7-r0)
(42/84) Installing binutils (2.44-r0)
(43/84) Installing libmagic (5.46-r2)
(44/84) Installing file (5.46-r2)
(45/84) Installing libgomp (14.3.0-r1)
(46/84) Installing libatomic (14.3.0-r1)
(47/84) Installing gmp (6.3.0-r3)
(48/84) Installing isl26 (0.26-r1)
(49/84) Installing mpfr4 (4.2.1_p1-r0)
(50/84) Installing mpc1 (1.3.1-r1)
(51/84) Installing gcc (14.3.0-r1)
(52/84) Installing libstdc++-dev (14.3.0-r1)
(53/84) Installing musl-dev (1.2.5-r10)
(54/84) Installing g++ (14.3.0-r1)
(55/84) Installing make (4.4.1-r3)
(56/84) Installing fortify-headers (1.1-r5)
(57/84) Installing build-base (0.5-r3)
(58/84) Installing brotli-libs (1.1.0-r2)
(59/84) Installing c-ares (1.34.5-r0)
(60/84) Installing libunistring (1.3-r0)
(61/84) Installing libidn2 (2.3.7-r0)
(62/84) Installing nghttp2-libs (1.65.0-r0)
(63/84) Installing libpsl (0.21.5-r3)
(64/84) Installing libcurl (8.14.0-r2)
(65/84) Installing libexpat (2.7.1-r0)
(66/84) Installing pcre2 (10.43-r1)
(67/84) Installing git (2.49.0-r0)
(68/84) Installing git-init-template (2.49.0-r0)
(69/84) Installing lua5.1-libs (5.1.5-r13)
(70/84) Installing lua5.1 (5.1.5-r13)
(71/84) Installing lua5.1-dev (5.1.5-r13)
(72/84) Installing lua5.2-libs (5.2.4-r13)
(73/84) Installing lua5.2 (5.2.4-r13)
(74/84) Installing lua5.2-dev (5.2.4-r13)
(75/84) Installing linenoise (1.0-r5)
(76/84) Installing lua5.3-libs (5.3.6-r6)
(77/84) Installing lua5.3 (5.3.6-r6)
(78/84) Installing lua5.3-dev (5.3.6-r6)
(79/84) Installing lua5.4-libs (5.4.7-r0)
(80/84) Installing ncurses-terminfo-base (6.5_p20250503-r0)
(81/84) Installing libncursesw (6.5_p20250503-r0)
(82/84) Installing readline (8.2.13-r1)
(83/84) Installing lua5.4 (5.4.7-r0)
(84/84) Installing lua5.4-dev (5.4.7-r0)
Executing busybox-1.37.0-r18.trigger
OK: 267 MiB in 84 packages
>>> lua-discount: Fetching https://dev.alpinelinux.org/archive/lua-discount/lua-discount-1.2.10.1.tar.gz
>>> lua-discount: Checking sha512sums...
lua-discount-1.2.10.1.tar.gz: OK
>>> lua-discount: Unpacking /var/cache/distfiles/lua-discount-1.2.10.1.tar.gz...
gcc  -Wall -O2 -fPIC    -c -o docheader.o docheader.c
gcc  -Wall -O2 -fPIC    -c -o dumptree.o dumptree.c
gcc  -Wall -O2 -fPIC    -c -o generate.o generate.c
gcc  -Wall -O2 -fPIC    -c -o markdown.o markdown.c
gcc  -Wall -O2 -fPIC    -c -o mkdio.o mkdio.c
gcc  -Wall -O2 -fPIC    -c -o resource.o resource.c
gcc  -Wall -O2 -fPIC    -c -o ldiscount.o ldiscount.c
In file included from markdown.h:4,
                 from dumptree.c:8:
dumptree.c: In function 'pushpfx':
cstring.h:20:30: warning: operation on 'sp->size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
dumptree.c:41:24: note: in expansion of macro 'EXPAND'
   41 |     struct frame *q = &EXPAND(*sp);
      |                        ^~~~~~
dumptree.c: In function 'mkd_dump':
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
dumptree.c:138:9: note: in expansion of macro 'CREATE'
  138 |         CREATE(stack);
      |         ^~~~~~
In file included from generate.c:16:
generate.c: In function 'push':
In file included from resource.c:16:
resource.c: In function '___mkd_initmmiot':
cstring.h:20:30: warning: operation on 'f->in.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
generate.c:43:9: note: in expansion of macro 'EXPAND'
   43 |         EXPAND(f->in) = *bfr++;
      |         ^~~~~~
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
resource.c:82:9: note: in expansion of macro 'CREATE'
   82 |         CREATE(f->in);
      |         ^~~~~~
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
resource.c:83:9: note: in expansion of macro 'CREATE'
   83 |         CREATE(f->out);
      |         ^~~~~~
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
resource.c:84:9: note: in expansion of macro 'CREATE'
   84 |         CREATE(f->Q);
      |         ^~~~~~
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
resource.c:89:13: note: in expansion of macro 'CREATE'
   89 |             CREATE(*f->footnotes);
      |             ^~~~~~
generate.c: In function 'Qchar':
cstring.h:20:30: warning: operation on 'f->Q.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
generate.c:101:16: note: in expansion of macro 'EXPAND'
  101 |         cur = &EXPAND(f->Q);
      |                ^~~~~~
cstring.h:20:30: warning: operation on 'cur->b_text.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
generate.c:108:5: note: in expansion of macro 'EXPAND'
  108 |     EXPAND(cur->b_text) = c;
      |     ^~~~~~
generate.c: In function 'Qem':
cstring.h:20:30: warning: operation on 'f->Q.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
generate.c:153:17: note: in expansion of macro 'EXPAND'
  153 |     block *p = &EXPAND(f->Q);
      |                 ^~~~~~
markdown.c: In function 'isopentag':
markdown.c:151:10: warning: suggest parentheses around assignment used as truth value [-Wparentheses]
  151 |     if ( ret = bsearch(&key,blocktags,SZTAGS,sizeof key, (stfu)casort))
      |          ^~~
ldiscount.c: In function 'ldiscount':
ldiscount.c:110:20: warning: passing argument 1 of 'mkd_string' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
  110 |   doc = mkd_string(str, len, MKD_TABSTOP|MKD_NOHEADER);
      |                    ^~~
In file included from ldiscount.c:7:
markdown.h:108:29: note: expected 'char *' but argument is of type 'const char *'
  108 | extern Document *mkd_string(char*,int, int);
      |                             ^~~~~
cstring.h:20:30: warning: operation on 'f->Q.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
generate.c:160:13: note: in expansion of macro 'EXPAND'
  160 |     memset(&EXPAND(f->Q), 0, sizeof(block));
      |             ^~~~~~
generate.c: In function 'emmatch':
cstring.h:20:30: warning: operation on 'start->b_text.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
generate.c:246:17: note: in expansion of macro 'EXPAND'
  246 |                 EXPAND(start->b_text) = start->b_char;
      |                 ^~~~~~
generate.c: In function 'reparse':
cstring.h:20:30: warning: operation on 'sub.in.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
generate.c:289:5: note: in expansion of macro 'EXPAND'
  289 |     EXPAND(sub.in) = 0;
      |     ^~~~~~
markdown.c: In function 'listblock':
markdown.c:623:14: warning: suggest parentheses around assignment used as truth value [-Wparentheses]
  623 |         if ( para = (q != text) ) {
      |              ^~~~
In file included from markdown.c:16:
markdown.c: In function 'addfootnote':
cstring.h:20:30: warning: operation on 'f->footnotes->size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
markdown.c:660:23: note: in expansion of macro 'EXPAND'
  660 |     Footnote *foot = &EXPAND(*f->footnotes);
      |                       ^~~~~~
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
markdown.c:662:5: note: in expansion of macro 'CREATE'
  662 |     CREATE(foot->tag);
      |     ^~~~~~
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
markdown.c:663:5: note: in expansion of macro 'CREATE'
  663 |     CREATE(foot->link);
      |     ^~~~~~
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
markdown.c:664:5: note: in expansion of macro 'CREATE'
  664 |     CREATE(foot->title);
      |     ^~~~~~
cstring.h:20:30: warning: operation on 'foot->tag.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
markdown.c:668:9: note: in expansion of macro 'EXPAND'
  668 |         EXPAND(foot->tag) = T(p->text)[j];
      |         ^~~~~~
cstring.h:20:30: warning: operation on 'foot->tag.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
markdown.c:670:5: note: in expansion of macro 'EXPAND'
  670 |     EXPAND(foot->tag) = 0;
      |     ^~~~~~
cstring.h:20:30: warning: operation on 'foot->link.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
markdown.c:675:9: note: in expansion of macro 'EXPAND'
  675 |         EXPAND(foot->link) = T(p->text)[j++];
      |         ^~~~~~
cstring.h:20:30: warning: operation on 'foot->link.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
markdown.c:676:5: note: in expansion of macro 'EXPAND'
  676 |     EXPAND(foot->link) = 0;
      |     ^~~~~~
cstring.h:20:30: warning: operation on 'foot->title.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
markdown.c:703:13: note: in expansion of macro 'EXPAND'
  703 |             EXPAND(foot->title) = T(p->text)[j++];
      |             ^~~~~~
cstring.h:20:30: warning: operation on 'foot->title.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
markdown.c:709:9: note: in expansion of macro 'EXPAND'
  709 |         EXPAND(foot->title) = 0;
      |         ^~~~~~
markdown.c: In function 'mkd_compile':
In file included from mkdio.c:13:
mkdio.c: In function 'queue':
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
mkdio.c:46:5: note: in expansion of macro 'CREATE'
   46 |     CREATE(p->text);
      |     ^~~~~~
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
markdown.c:856:5: note: in expansion of macro 'CREATE'
  856 |     CREATE(doc->ctx->in);
      |     ^~~~~~
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
markdown.c:858:5: note: in expansion of macro 'CREATE'
  858 |     CREATE(*doc->ctx->footnotes);
      |     ^~~~~~
cstring.h:20:30: warning: operation on 'p->text.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
mkdio.c:57:17: note: in expansion of macro 'EXPAND'
   57 |                 EXPAND(p->text) = ' ';
      |                 ^~~~~~
cstring.h:20:30: warning: operation on 'p->text.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
mkdio.c:61:13: note: in expansion of macro 'EXPAND'
   61 |             EXPAND(p->text) = c;
      |             ^~~~~~
cstring.h:20:30: warning: operation on 'p->text.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
mkdio.c:65:5: note: in expansion of macro 'EXPAND'
   65 |     EXPAND(p->text) = 0;
      |     ^~~~~~
mkdio.c: In function 'populate':
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
mkdio.c:101:5: note: in expansion of macro 'CREATE'
  101 |     CREATE(line);
      |     ^~~~~~
cstring.h:20:30: warning: operation on 'line.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
mkdio.c:117:13: note: in expansion of macro 'EXPAND'
  117 |             EXPAND(line) = c;
      |             ^~~~~~
gcc -o discount.so -shared docheader.o dumptree.o generate.o markdown.o mkdio.o resource.o ldiscount.o 
gcc -I/usr/include/lua5.2 -Wall -O2 -fPIC    -c -o docheader.o docheader.c
gcc -I/usr/include/lua5.2 -Wall -O2 -fPIC    -c -o dumptree.o dumptree.c
gcc -I/usr/include/lua5.2 -Wall -O2 -fPIC    -c -o generate.o generate.c
gcc -I/usr/include/lua5.2 -Wall -O2 -fPIC    -c -o markdown.o markdown.c
gcc -I/usr/include/lua5.2 -Wall -O2 -fPIC    -c -o mkdio.o mkdio.c
gcc -I/usr/include/lua5.2 -Wall -O2 -fPIC    -c -o resource.o resource.c
gcc -I/usr/include/lua5.2 -Wall -O2 -fPIC    -c -o ldiscount.o ldiscount.c
In file included from markdown.h:4,
                 from dumptree.c:8:
dumptree.c: In function 'pushpfx':
cstring.h:20:30: warning: operation on 'sp->size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
dumptree.c:41:24: note: in expansion of macro 'EXPAND'
   41 |     struct frame *q = &EXPAND(*sp);
      |                        ^~~~~~
dumptree.c: In function 'mkd_dump':
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
dumptree.c:138:9: note: in expansion of macro 'CREATE'
  138 |         CREATE(stack);
      |         ^~~~~~
In file included from mkdio.c:13:
mkdio.c: In function 'queue':
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
mkdio.c:46:5: note: in expansion of macro 'CREATE'
   46 |     CREATE(p->text);
      |     ^~~~~~
cstring.h:20:30: warning: operation on 'p->text.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
mkdio.c:57:17: note: in expansion of macro 'EXPAND'
   57 |                 EXPAND(p->text) = ' ';
      |                 ^~~~~~
cstring.h:20:30: warning: operation on 'p->text.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
mkdio.c:61:13: note: in expansion of macro 'EXPAND'
   61 |             EXPAND(p->text) = c;
      |             ^~~~~~
cstring.h:20:30: warning: operation on 'p->text.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
mkdio.c:65:5: note: in expansion of macro 'EXPAND'
   65 |     EXPAND(p->text) = 0;
      |     ^~~~~~
mkdio.c: In function 'populate':
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
mkdio.c:101:5: note: in expansion of macro 'CREATE'
  101 |     CREATE(line);
      |     ^~~~~~
markdown.c: In function 'isopentag':
markdown.c:151:10: warning: suggest parentheses around assignment used as truth value [-Wparentheses]
  151 |     if ( ret = bsearch(&key,blocktags,SZTAGS,sizeof key, (stfu)casort))
      |          ^~~
cstring.h:20:30: warning: operation on 'line.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
mkdio.c:117:13: note: in expansion of macro 'EXPAND'
  117 |             EXPAND(line) = c;
      |             ^~~~~~
markdown.c: In function 'listblock':
markdown.c:623:14: warning: suggest parentheses around assignment used as truth value [-Wparentheses]
  623 |         if ( para = (q != text) ) {
      |              ^~~~
In file included from resource.c:16:
resource.c: In function '___mkd_initmmiot':
In file included from markdown.c:16:
markdown.c: In function 'addfootnote':
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
resource.c:82:9: note: in expansion of macro 'CREATE'
   82 |         CREATE(f->in);
      |         ^~~~~~
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
resource.c:83:9: note: in expansion of macro 'CREATE'
   83 |         CREATE(f->out);
      |         ^~~~~~
cstring.h:20:30: warning: operation on 'f->footnotes->size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
markdown.c:660:23: note: in expansion of macro 'EXPAND'
  660 |     Footnote *foot = &EXPAND(*f->footnotes);
      |                       ^~~~~~
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
resource.c:84:9: note: in expansion of macro 'CREATE'
   84 |         CREATE(f->Q);
      |         ^~~~~~
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
markdown.c:662:5: note: in expansion of macro 'CREATE'
  662 |     CREATE(foot->tag);
      |     ^~~~~~
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
resource.c:89:13: note: in expansion of macro 'CREATE'
   89 |             CREATE(*f->footnotes);
      |             ^~~~~~
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
markdown.c:663:5: note: in expansion of macro 'CREATE'
  663 |     CREATE(foot->link);
      |     ^~~~~~
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
markdown.c:664:5: note: in expansion of macro 'CREATE'
  664 |     CREATE(foot->title);
      |     ^~~~~~
cstring.h:20:30: warning: operation on 'foot->tag.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
markdown.c:668:9: note: in expansion of macro 'EXPAND'
  668 |         EXPAND(foot->tag) = T(p->text)[j];
      |         ^~~~~~
cstring.h:20:30: warning: operation on 'foot->tag.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
markdown.c:670:5: note: in expansion of macro 'EXPAND'
  670 |     EXPAND(foot->tag) = 0;
      |     ^~~~~~
cstring.h:20:30: warning: operation on 'foot->link.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
markdown.c:675:9: note: in expansion of macro 'EXPAND'
  675 |         EXPAND(foot->link) = T(p->text)[j++];
      |         ^~~~~~
cstring.h:20:30: warning: operation on 'foot->link.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
markdown.c:676:5: note: in expansion of macro 'EXPAND'
  676 |     EXPAND(foot->link) = 0;
      |     ^~~~~~
cstring.h:20:30: warning: operation on 'foot->title.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
markdown.c:703:13: note: in expansion of macro 'EXPAND'
  703 |             EXPAND(foot->title) = T(p->text)[j++];
      |             ^~~~~~
cstring.h:20:30: warning: operation on 'foot->title.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
markdown.c:709:9: note: in expansion of macro 'EXPAND'
  709 |         EXPAND(foot->title) = 0;
      |         ^~~~~~
ldiscount.c: In function 'ldiscount':
ldiscount.c:110:20: warning: passing argument 1 of 'mkd_string' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
  110 |   doc = mkd_string(str, len, MKD_TABSTOP|MKD_NOHEADER);
      |                    ^~~
In file included from ldiscount.c:7:
markdown.h:108:29: note: expected 'char *' but argument is of type 'const char *'
  108 | extern Document *mkd_string(char*,int, int);
      |                             ^~~~~
markdown.c: In function 'mkd_compile':
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
markdown.c:856:5: note: in expansion of macro 'CREATE'
  856 |     CREATE(doc->ctx->in);
      |     ^~~~~~
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
markdown.c:858:5: note: in expansion of macro 'CREATE'
  858 |     CREATE(*doc->ctx->footnotes);
      |     ^~~~~~
In file included from generate.c:16:
generate.c: In function 'push':
cstring.h:20:30: warning: operation on 'f->in.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
generate.c:43:9: note: in expansion of macro 'EXPAND'
   43 |         EXPAND(f->in) = *bfr++;
      |         ^~~~~~
generate.c: In function 'Qchar':
cstring.h:20:30: warning: operation on 'f->Q.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
generate.c:101:16: note: in expansion of macro 'EXPAND'
  101 |         cur = &EXPAND(f->Q);
      |                ^~~~~~
cstring.h:20:30: warning: operation on 'cur->b_text.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
generate.c:108:5: note: in expansion of macro 'EXPAND'
  108 |     EXPAND(cur->b_text) = c;
      |     ^~~~~~
generate.c: In function 'Qem':
cstring.h:20:30: warning: operation on 'f->Q.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
generate.c:153:17: note: in expansion of macro 'EXPAND'
  153 |     block *p = &EXPAND(f->Q);
      |                 ^~~~~~
cstring.h:20:30: warning: operation on 'f->Q.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
generate.c:160:13: note: in expansion of macro 'EXPAND'
  160 |     memset(&EXPAND(f->Q), 0, sizeof(block));
      |             ^~~~~~
generate.c: In function 'emmatch':
cstring.h:20:30: warning: operation on 'start->b_text.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
generate.c:246:17: note: in expansion of macro 'EXPAND'
  246 |                 EXPAND(start->b_text) = start->b_char;
      |                 ^~~~~~
generate.c: In function 'reparse':
cstring.h:20:30: warning: operation on 'sub.in.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
generate.c:289:5: note: in expansion of macro 'EXPAND'
  289 |     EXPAND(sub.in) = 0;
      |     ^~~~~~
gcc -o discount.so -shared docheader.o dumptree.o generate.o markdown.o mkdio.o resource.o ldiscount.o 
gcc -I/usr/include/lua5.3 -Wall -O2 -fPIC    -c -o docheader.o docheader.c
gcc -I/usr/include/lua5.3 -Wall -O2 -fPIC    -c -o dumptree.o dumptree.c
gcc -I/usr/include/lua5.3 -Wall -O2 -fPIC    -c -o generate.o generate.c
gcc -I/usr/include/lua5.3 -Wall -O2 -fPIC    -c -o markdown.o markdown.c
gcc -I/usr/include/lua5.3 -Wall -O2 -fPIC    -c -o mkdio.o mkdio.c
gcc -I/usr/include/lua5.3 -Wall -O2 -fPIC    -c -o resource.o resource.c
gcc -I/usr/include/lua5.3 -Wall -O2 -fPIC    -c -o ldiscount.o ldiscount.c
In file included from mkdio.c:13:
mkdio.c: In function 'queue':
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
mkdio.c:46:5: note: in expansion of macro 'CREATE'
   46 |     CREATE(p->text);
      |     ^~~~~~
cstring.h:20:30: warning: operation on 'p->text.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
mkdio.c:57:17: note: in expansion of macro 'EXPAND'
   57 |                 EXPAND(p->text) = ' ';
      |                 ^~~~~~
In file included from resource.c:16:
resource.c: In function '___mkd_initmmiot':
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
resource.c:82:9: note: in expansion of macro 'CREATE'
   82 |         CREATE(f->in);
      |         ^~~~~~
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
resource.c:83:9: note: in expansion of macro 'CREATE'
   83 |         CREATE(f->out);
      |         ^~~~~~
cstring.h:20:30: warning: operation on 'p->text.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
mkdio.c:61:13: note: in expansion of macro 'EXPAND'
   61 |             EXPAND(p->text) = c;
      |             ^~~~~~
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
resource.c:84:9: note: in expansion of macro 'CREATE'
   84 |         CREATE(f->Q);
      |         ^~~~~~
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
resource.c:89:13: note: in expansion of macro 'CREATE'
   89 |             CREATE(*f->footnotes);
      |             ^~~~~~
cstring.h:20:30: warning: operation on 'p->text.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
mkdio.c:65:5: note: in expansion of macro 'EXPAND'
   65 |     EXPAND(p->text) = 0;
      |     ^~~~~~
mkdio.c: In function 'populate':
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
mkdio.c:101:5: note: in expansion of macro 'CREATE'
  101 |     CREATE(line);
      |     ^~~~~~
In file included from markdown.h:4,
                 from dumptree.c:8:
dumptree.c: In function 'pushpfx':
cstring.h:20:30: warning: operation on 'sp->size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
dumptree.c:41:24: note: in expansion of macro 'EXPAND'
   41 |     struct frame *q = &EXPAND(*sp);
      |                        ^~~~~~
markdown.c: In function 'isopentag':
markdown.c:151:10: warning: suggest parentheses around assignment used as truth value [-Wparentheses]
  151 |     if ( ret = bsearch(&key,blocktags,SZTAGS,sizeof key, (stfu)casort))
      |          ^~~
cstring.h:20:30: warning: operation on 'line.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
mkdio.c:117:13: note: in expansion of macro 'EXPAND'
  117 |             EXPAND(line) = c;
      |             ^~~~~~
dumptree.c: In function 'mkd_dump':
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
dumptree.c:138:9: note: in expansion of macro 'CREATE'
  138 |         CREATE(stack);
      |         ^~~~~~
ldiscount.c: In function 'ldiscount':
ldiscount.c:110:20: warning: passing argument 1 of 'mkd_string' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
  110 |   doc = mkd_string(str, len, MKD_TABSTOP|MKD_NOHEADER);
      |                    ^~~
In file included from ldiscount.c:7:
markdown.h:108:29: note: expected 'char *' but argument is of type 'const char *'
  108 | extern Document *mkd_string(char*,int, int);
      |                             ^~~~~
markdown.c: In function 'listblock':
markdown.c:623:14: warning: suggest parentheses around assignment used as truth value [-Wparentheses]
  623 |         if ( para = (q != text) ) {
      |              ^~~~
In file included from markdown.c:16:
markdown.c: In function 'addfootnote':
cstring.h:20:30: warning: operation on 'f->footnotes->size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
markdown.c:660:23: note: in expansion of macro 'EXPAND'
  660 |     Footnote *foot = &EXPAND(*f->footnotes);
      |                       ^~~~~~
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
markdown.c:662:5: note: in expansion of macro 'CREATE'
  662 |     CREATE(foot->tag);
      |     ^~~~~~
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
markdown.c:663:5: note: in expansion of macro 'CREATE'
  663 |     CREATE(foot->link);
      |     ^~~~~~
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
markdown.c:664:5: note: in expansion of macro 'CREATE'
  664 |     CREATE(foot->title);
      |     ^~~~~~
cstring.h:20:30: warning: operation on 'foot->tag.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
markdown.c:668:9: note: in expansion of macro 'EXPAND'
  668 |         EXPAND(foot->tag) = T(p->text)[j];
      |         ^~~~~~
cstring.h:20:30: warning: operation on 'foot->tag.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
markdown.c:670:5: note: in expansion of macro 'EXPAND'
  670 |     EXPAND(foot->tag) = 0;
      |     ^~~~~~
cstring.h:20:30: warning: operation on 'foot->link.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
markdown.c:675:9: note: in expansion of macro 'EXPAND'
  675 |         EXPAND(foot->link) = T(p->text)[j++];
      |         ^~~~~~
cstring.h:20:30: warning: operation on 'foot->link.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
markdown.c:676:5: note: in expansion of macro 'EXPAND'
  676 |     EXPAND(foot->link) = 0;
      |     ^~~~~~
cstring.h:20:30: warning: operation on 'foot->title.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
markdown.c:703:13: note: in expansion of macro 'EXPAND'
  703 |             EXPAND(foot->title) = T(p->text)[j++];
      |             ^~~~~~
cstring.h:20:30: warning: operation on 'foot->title.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
markdown.c:709:9: note: in expansion of macro 'EXPAND'
  709 |         EXPAND(foot->title) = 0;
      |         ^~~~~~
markdown.c: In function 'mkd_compile':
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
markdown.c:856:5: note: in expansion of macro 'CREATE'
  856 |     CREATE(doc->ctx->in);
      |     ^~~~~~
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
markdown.c:858:5: note: in expansion of macro 'CREATE'
  858 |     CREATE(*doc->ctx->footnotes);
      |     ^~~~~~
In file included from generate.c:16:
generate.c: In function 'push':
cstring.h:20:30: warning: operation on 'f->in.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
generate.c:43:9: note: in expansion of macro 'EXPAND'
   43 |         EXPAND(f->in) = *bfr++;
      |         ^~~~~~
generate.c: In function 'Qchar':
cstring.h:20:30: warning: operation on 'f->Q.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
generate.c:101:16: note: in expansion of macro 'EXPAND'
  101 |         cur = &EXPAND(f->Q);
      |                ^~~~~~
cstring.h:20:30: warning: operation on 'cur->b_text.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
generate.c:108:5: note: in expansion of macro 'EXPAND'
  108 |     EXPAND(cur->b_text) = c;
      |     ^~~~~~
generate.c: In function 'Qem':
cstring.h:20:30: warning: operation on 'f->Q.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
generate.c:153:17: note: in expansion of macro 'EXPAND'
  153 |     block *p = &EXPAND(f->Q);
      |                 ^~~~~~
cstring.h:20:30: warning: operation on 'f->Q.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
generate.c:160:13: note: in expansion of macro 'EXPAND'
  160 |     memset(&EXPAND(f->Q), 0, sizeof(block));
      |             ^~~~~~
generate.c: In function 'emmatch':
cstring.h:20:30: warning: operation on 'start->b_text.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
generate.c:246:17: note: in expansion of macro 'EXPAND'
  246 |                 EXPAND(start->b_text) = start->b_char;
      |                 ^~~~~~
generate.c: In function 'reparse':
cstring.h:20:30: warning: operation on 'sub.in.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
generate.c:289:5: note: in expansion of macro 'EXPAND'
  289 |     EXPAND(sub.in) = 0;
      |     ^~~~~~
gcc -o discount.so -shared docheader.o dumptree.o generate.o markdown.o mkdio.o resource.o ldiscount.o 
gcc -I/usr/include/lua5.4 -Wall -O2 -fPIC    -c -o docheader.o docheader.c
gcc -I/usr/include/lua5.4 -Wall -O2 -fPIC    -c -o dumptree.o dumptree.c
gcc -I/usr/include/lua5.4 -Wall -O2 -fPIC    -c -o generate.o generate.c
gcc -I/usr/include/lua5.4 -Wall -O2 -fPIC    -c -o markdown.o markdown.c
gcc -I/usr/include/lua5.4 -Wall -O2 -fPIC    -c -o mkdio.o mkdio.c
gcc -I/usr/include/lua5.4 -Wall -O2 -fPIC    -c -o resource.o resource.c
gcc -I/usr/include/lua5.4 -Wall -O2 -fPIC    -c -o ldiscount.o ldiscount.c
In file included from markdown.h:4,
                 from dumptree.c:8:
dumptree.c: In function 'pushpfx':
cstring.h:20:30: warning: operation on 'sp->size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
dumptree.c:41:24: note: in expansion of macro 'EXPAND'
   41 |     struct frame *q = &EXPAND(*sp);
      |                        ^~~~~~
dumptree.c: In function 'mkd_dump':
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
dumptree.c:138:9: note: in expansion of macro 'CREATE'
  138 |         CREATE(stack);
      |         ^~~~~~
In file included from mkdio.c:13:
mkdio.c: In function 'queue':
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
mkdio.c:46:5: note: in expansion of macro 'CREATE'
   46 |     CREATE(p->text);
      |     ^~~~~~
In file included from generate.c:16:
generate.c: In function 'push':
cstring.h:20:30: warning: operation on 'p->text.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
mkdio.c:57:17: note: in expansion of macro 'EXPAND'
   57 |                 EXPAND(p->text) = ' ';
      |                 ^~~~~~
cstring.h:20:30: warning: operation on 'f->in.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
generate.c:43:9: note: in expansion of macro 'EXPAND'
   43 |         EXPAND(f->in) = *bfr++;
      |         ^~~~~~
cstring.h:20:30: warning: operation on 'p->text.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
mkdio.c:61:13: note: in expansion of macro 'EXPAND'
   61 |             EXPAND(p->text) = c;
      |             ^~~~~~
cstring.h:20:30: warning: operation on 'p->text.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
mkdio.c:65:5: note: in expansion of macro 'EXPAND'
   65 |     EXPAND(p->text) = 0;
      |     ^~~~~~
generate.c: In function 'Qchar':
cstring.h:20:30: warning: operation on 'f->Q.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
generate.c:101:16: note: in expansion of macro 'EXPAND'
  101 |         cur = &EXPAND(f->Q);
      |                ^~~~~~
mkdio.c: In function 'populate':
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
mkdio.c:101:5: note: in expansion of macro 'CREATE'
  101 |     CREATE(line);
      |     ^~~~~~
In file included from resource.c:16:
resource.c: In function '___mkd_initmmiot':
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
resource.c:82:9: note: in expansion of macro 'CREATE'
   82 |         CREATE(f->in);
      |         ^~~~~~
cstring.h:20:30: warning: operation on 'cur->b_text.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
generate.c:108:5: note: in expansion of macro 'EXPAND'
  108 |     EXPAND(cur->b_text) = c;
      |     ^~~~~~
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
resource.c:83:9: note: in expansion of macro 'CREATE'
   83 |         CREATE(f->out);
      |         ^~~~~~
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
resource.c:84:9: note: in expansion of macro 'CREATE'
   84 |         CREATE(f->Q);
      |         ^~~~~~
cstring.h:20:30: warning: operation on 'line.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
mkdio.c:117:13: note: in expansion of macro 'EXPAND'
  117 |             EXPAND(line) = c;
      |             ^~~~~~
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
resource.c:89:13: note: in expansion of macro 'CREATE'
   89 |             CREATE(*f->footnotes);
      |             ^~~~~~
generate.c: In function 'Qem':
cstring.h:20:30: warning: operation on 'f->Q.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
generate.c:153:17: note: in expansion of macro 'EXPAND'
  153 |     block *p = &EXPAND(f->Q);
      |                 ^~~~~~
cstring.h:20:30: warning: operation on 'f->Q.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
generate.c:160:13: note: in expansion of macro 'EXPAND'
  160 |     memset(&EXPAND(f->Q), 0, sizeof(block));
      |             ^~~~~~
markdown.c: In function 'isopentag':
markdown.c:151:10: warning: suggest parentheses around assignment used as truth value [-Wparentheses]
  151 |     if ( ret = bsearch(&key,blocktags,SZTAGS,sizeof key, (stfu)casort))
      |          ^~~
generate.c: In function 'emmatch':
cstring.h:20:30: warning: operation on 'start->b_text.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
generate.c:246:17: note: in expansion of macro 'EXPAND'
  246 |                 EXPAND(start->b_text) = start->b_char;
      |                 ^~~~~~
generate.c: In function 'reparse':
cstring.h:20:30: warning: operation on 'sub.in.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
generate.c:289:5: note: in expansion of macro 'EXPAND'
  289 |     EXPAND(sub.in) = 0;
      |     ^~~~~~
markdown.c: In function 'listblock':
markdown.c:623:14: warning: suggest parentheses around assignment used as truth value [-Wparentheses]
  623 |         if ( para = (q != text) ) {
      |              ^~~~
In file included from markdown.c:16:
markdown.c: In function 'addfootnote':
cstring.h:20:30: warning: operation on 'f->footnotes->size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
markdown.c:660:23: note: in expansion of macro 'EXPAND'
  660 |     Footnote *foot = &EXPAND(*f->footnotes);
      |                       ^~~~~~
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
markdown.c:662:5: note: in expansion of macro 'CREATE'
  662 |     CREATE(foot->tag);
      |     ^~~~~~
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
markdown.c:663:5: note: in expansion of macro 'CREATE'
  663 |     CREATE(foot->link);
      |     ^~~~~~
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
markdown.c:664:5: note: in expansion of macro 'CREATE'
  664 |     CREATE(foot->title);
      |     ^~~~~~
cstring.h:20:30: warning: operation on 'foot->tag.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
markdown.c:668:9: note: in expansion of macro 'EXPAND'
  668 |         EXPAND(foot->tag) = T(p->text)[j];
      |         ^~~~~~
cstring.h:20:30: warning: operation on 'foot->tag.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
markdown.c:670:5: note: in expansion of macro 'EXPAND'
  670 |     EXPAND(foot->tag) = 0;
      |     ^~~~~~
cstring.h:20:30: warning: operation on 'foot->link.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
markdown.c:675:9: note: in expansion of macro 'EXPAND'
  675 |         EXPAND(foot->link) = T(p->text)[j++];
      |         ^~~~~~
cstring.h:20:30: warning: operation on 'foot->link.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
markdown.c:676:5: note: in expansion of macro 'EXPAND'
  676 |     EXPAND(foot->link) = 0;
      |     ^~~~~~
cstring.h:20:30: warning: operation on 'foot->title.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
markdown.c:703:13: note: in expansion of macro 'EXPAND'
  703 |             EXPAND(foot->title) = T(p->text)[j++];
      |             ^~~~~~
cstring.h:20:30: warning: operation on 'foot->title.size' may be undefined [-Wsequence-point]
   20 | #define EXPAND(x)       (S(x)++)[(S(x) < (x).alloc) \
      |                         ~~~~~^~~
markdown.c:709:9: note: in expansion of macro 'EXPAND'
  709 |         EXPAND(foot->title) = 0;
      |         ^~~~~~
markdown.c: In function 'mkd_compile':
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
markdown.c:856:5: note: in expansion of macro 'CREATE'
  856 |     CREATE(doc->ctx->in);
      |     ^~~~~~
cstring.h:19:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 | #define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
      |                                ^
markdown.c:858:5: note: in expansion of macro 'CREATE'
  858 |     CREATE(*doc->ctx->footnotes);
      |     ^~~~~~
ldiscount.c: In function 'ldiscount':
ldiscount.c:110:20: warning: passing argument 1 of 'mkd_string' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
  110 |   doc = mkd_string(str, len, MKD_TABSTOP|MKD_NOHEADER);
      |                    ^~~
In file included from ldiscount.c:7:
markdown.h:108:29: note: expected 'char *' but argument is of type 'const char *'
  108 | extern Document *mkd_string(char*,int, int);
      |                             ^~~~~
gcc -o discount.so -shared docheader.o dumptree.o generate.o markdown.o mkdio.o resource.o ldiscount.o 
>>> lua-discount: Entering fakeroot...
>>> lua-discount-doc*: Running split function doc...
'usr/share/licenses' -> '/tmp/pkg/lua-discount-doc/usr/share/licenses'
>>> lua-discount-doc*: Preparing subpackage lua-discount-doc...
>>> lua-discount-doc*: Running postcheck for lua-discount-doc
>>> lua5.1-discount*: Running split function _split...
>>> lua5.1-discount*: Preparing subpackage lua5.1-discount...
>>> lua5.1-discount*: Stripping binaries
>>> lua5.1-discount*: Running postcheck for lua5.1-discount
>>> lua5.2-discount*: Running split function _split...
>>> lua5.2-discount*: Preparing subpackage lua5.2-discount...
>>> lua5.2-discount*: Stripping binaries
>>> lua5.2-discount*: Running postcheck for lua5.2-discount
>>> lua5.3-discount*: Running split function _split...
>>> lua5.3-discount*: Preparing subpackage lua5.3-discount...
>>> lua5.3-discount*: Stripping binaries
>>> lua5.3-discount*: Running postcheck for lua5.3-discount
>>> lua5.4-discount*: Running split function _split...
>>> lua5.4-discount*: Preparing subpackage lua5.4-discount...
>>> lua5.4-discount*: Stripping binaries
>>> lua5.4-discount*: Running postcheck for lua5.4-discount
>>> lua-discount*: Running postcheck for lua-discount
>>> lua-discount*: Preparing package lua-discount...
>>> lua-discount*: Stripping binaries
>>> WARNING: lua-discount*: No arch specific binaries found so arch should probably be set to "noarch"
>>> lua-discount-doc*: Scanning shared objects
>>> lua-discount*: Scanning shared objects
>>> lua5.1-discount*: Scanning shared objects
>>> lua5.2-discount*: Scanning shared objects
>>> lua5.3-discount*: Scanning shared objects
>>> lua5.4-discount*: Scanning shared objects
>>> lua-discount-doc*: Tracing dependencies...
>>> lua-discount-doc*: Package size: 2.4 KB
>>> lua-discount-doc*: Compressing data...
>>> lua-discount-doc*: Create checksum...
>>> lua-discount-doc*: Create lua-discount-doc-1.2.10.1-r8.apk
>>> lua-discount*: Tracing dependencies...
>>> lua-discount*: Package size: 1.0 B
>>> lua-discount*: Compressing data...
>>> lua-discount*: Create checksum...
>>> lua-discount*: Create lua-discount-1.2.10.1-r8.apk
>>> lua5.1-discount*: Tracing dependencies...
	so:libc.musl-x86_64.so.1
>>> lua5.1-discount*: Package size: 46.6 KB
>>> lua5.1-discount*: Compressing data...
>>> lua5.1-discount*: Create checksum...
>>> lua5.1-discount*: Create lua5.1-discount-1.2.10.1-r8.apk
>>> lua5.2-discount*: Tracing dependencies...
	so:libc.musl-x86_64.so.1
>>> lua5.2-discount*: Package size: 46.6 KB
>>> lua5.2-discount*: Compressing data...
>>> lua5.2-discount*: Create checksum...
>>> lua5.2-discount*: Create lua5.2-discount-1.2.10.1-r8.apk
>>> lua5.3-discount*: Tracing dependencies...
	so:libc.musl-x86_64.so.1
>>> lua5.3-discount*: Package size: 46.6 KB
>>> lua5.3-discount*: Compressing data...
>>> lua5.3-discount*: Create checksum...
>>> lua5.3-discount*: Create lua5.3-discount-1.2.10.1-r8.apk
>>> lua5.4-discount*: Tracing dependencies...
	so:libc.musl-x86_64.so.1
>>> lua5.4-discount*: Package size: 46.6 KB
>>> lua5.4-discount*: Compressing data...
>>> lua5.4-discount*: Create checksum...
>>> lua5.4-discount*: Create lua5.4-discount-1.2.10.1-r8.apk
>>> lua-discount: Updating the main/x86_64 repository index...
>>> lua-discount: Signing the index...
>>> lua-discount: Cleaning up srcdir
>>> lua-discount: Cleaning up build chroot
>>> lua-discount: Cleaning up pkgdir
