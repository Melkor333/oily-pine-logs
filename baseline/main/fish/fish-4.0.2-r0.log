>>> fish: Validating /home/packager/oily-pine/main/fish/APKBUILD...
>>> fish: Cleaning up srcdir
>>> fish: Cleaning up pkgdir
>>> fish: Cleaning up tmpdir
>>> fish: Fetching https://github.com/fish-shell/fish-shell/releases/download/4.0.2/fish-4.0.2.tar.xz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
  4 2983k    4  141k    0     0   148k      0  0:00:20 --:--:--  0:00:20  148k100 2983k  100 2983k    0     0  2753k      0  0:00:01  0:00:01 --:--:-- 21.6M
>>> fish: Fetching https://github.com/fish-shell/fish-shell/releases/download/4.0.2/fish-4.0.2.tar.xz
>>> fish: Checking sha512sums...
fish-4.0.2.tar.xz: OK
ignore-test_history_races.patch: OK
disable-flaky-tests.patch: OK
README.alpine: OK
cargo: OK
>>> fish: Preparing build chroot...
fetch http://dl-cdn.alpinelinux.org/alpine/edge/main/x86_64/APKINDEX.tar.gz
(1/169) Installing musl (1.2.5-r10)
(2/169) Installing libcrypto3 (3.5.0-r0)
(3/169) Installing ca-certificates-bundle (20241121-r2)
(4/169) Installing libssl3 (3.5.0-r0)
(5/169) Installing zlib (1.3.1-r2)
(6/169) Installing libapk2 (2.14.9-r2)
(7/169) Installing apk-tools (2.14.9-r2)
(8/169) Installing libcap2 (2.76-r0)
(9/169) Installing libcap-getcap (2.76-r0)
(10/169) Installing fakeroot (1.37.1.1-r0)
(11/169) Installing scanelf (1.3.8-r1)
(12/169) Installing musl-utils (1.2.5-r10)
(13/169) Installing libgcc (14.3.0-r1)
(14/169) Installing libstdc++ (14.3.0-r1)
(15/169) Installing lzip (1.25-r0)
(16/169) Installing openssl (3.5.0-r0)
(17/169) Installing patch (2.8-r0)
(18/169) Installing pkgconf (2.4.3-r0)
(19/169) Installing acl-libs (2.3.2-r1)
(20/169) Installing tar (1.35-r3)
(21/169) Installing busybox (1.37.0-r18)
Executing busybox-1.37.0-r18.post-install
(22/169) Installing ssl_client (1.37.0-r18)
(23/169) Installing busybox-binsh (1.37.0-r18)
(24/169) Installing abuild (3.15.0-r0)
Executing abuild-3.15.0-r0.pre-install
(25/169) Installing abuild-sudo (3.15.0-r0)
(26/169) Installing alpine-baselayout-data (3.7.0-r0)
(27/169) Installing alpine-baselayout (3.7.0-r0)
Executing alpine-baselayout-3.7.0-r0.pre-install
Executing alpine-baselayout-3.7.0-r0.post-install
(28/169) Installing bridge (1.5-r5)
(29/169) Installing ifupdown-ng (0.12.1-r7)
(30/169) Installing openrc-user (0.62.2-r2)
(31/169) Installing openrc (0.62.2-r2)
Executing openrc-0.62.2-r2.post-install
(32/169) Installing mdev-conf (4.8-r0)
(33/169) Installing busybox-mdev-openrc (1.37.0-r18)
(34/169) Installing alpine-conf (3.20.0-r0)
(35/169) Installing alpine-keys (2.5-r0)
(36/169) Installing alpine-release (3.22.0-r0)
(37/169) Installing busybox-openrc (1.37.0-r18)
(38/169) Installing busybox-suid (1.37.0-r18)
(39/169) Installing alpine-base (3.22.0-r0)
(40/169) Installing ncurses-terminfo-base (6.5_p20250503-r0)
(41/169) Installing libncursesw (6.5_p20250503-r0)
(42/169) Installing readline (8.2.13-r1)
(43/169) Installing bash (5.2.37-r0)
Executing bash-5.2.37-r0.post-install
(44/169) Installing jansson (2.14.1-r0)
(45/169) Installing zstd-libs (1.5.7-r0)
(46/169) Installing binutils (2.44-r0)
(47/169) Installing libmagic (5.46-r2)
(48/169) Installing file (5.46-r2)
(49/169) Installing libgomp (14.3.0-r1)
(50/169) Installing libatomic (14.3.0-r1)
(51/169) Installing gmp (6.3.0-r3)
(52/169) Installing isl26 (0.26-r1)
(53/169) Installing mpfr4 (4.2.1_p1-r0)
(54/169) Installing mpc1 (1.3.1-r1)
(55/169) Installing gcc (14.3.0-r1)
(56/169) Installing libstdc++-dev (14.3.0-r1)
(57/169) Installing musl-dev (1.2.5-r10)
(58/169) Installing g++ (14.3.0-r1)
(59/169) Installing make (4.4.1-r3)
(60/169) Installing fortify-headers (1.1-r5)
(61/169) Installing build-base (0.5-r3)
(62/169) Installing libffi (3.4.8-r0)
(63/169) Installing xz-libs (5.8.1-r0)
(64/169) Installing libxml2 (2.13.8-r0)
(65/169) Installing llvm20-libs (20.1.6-r0)
(66/169) Installing scudo-malloc (20.1.6-r0)
(67/169) Installing rust (1.87.0-r0)
(68/169) Installing brotli-libs (1.1.0-r2)
(69/169) Installing c-ares (1.34.5-r0)
(70/169) Installing libunistring (1.3-r0)
(71/169) Installing libidn2 (2.3.7-r0)
(72/169) Installing nghttp2-libs (1.65.0-r0)
(73/169) Installing libpsl (0.21.5-r3)
(74/169) Installing libcurl (8.14.0-r2)
(75/169) Installing cargo (1.87.0-r0)
(76/169) Installing cargo-auditable (0.6.7-r0)
(77/169) Installing libbz2 (1.0.8-r6)
(78/169) Installing libexpat (2.7.1-r0)
(79/169) Installing lz4-libs (1.10.0-r0)
(80/169) Installing libarchive (3.8.0-r0)
(81/169) Installing rhash-libs (1.4.5-r0)
(82/169) Installing libuv (1.51.0-r0)
(83/169) Installing cmake (4.0.2-r0)
(84/169) Installing doxygen (1.13.2-r0)
(85/169) Installing xz (5.8.1-r0)
(86/169) Installing gettext-asprintf (0.24.1-r0)
(87/169) Installing libintl (0.24.1-r0)
(88/169) Installing gettext-libs (0.24.1-r0)
(89/169) Installing gettext-envsubst (0.24.1-r0)
(90/169) Installing gettext (0.24.1-r0)
(91/169) Installing gettext-dev (0.24.1-r0)
(92/169) Installing pcre2 (10.43-r1)
(93/169) Installing git (2.49.0-r0)
(94/169) Installing git-init-template (2.49.0-r0)
(95/169) Installing ncurses-terminfo (6.5_p20250503-r0)
(96/169) Installing bsd-compat-headers (0.7.2-r6)
(97/169) Installing libformw (6.5_p20250503-r0)
(98/169) Installing libmenuw (6.5_p20250503-r0)
(99/169) Installing libpanelw (6.5_p20250503-r0)
(100/169) Installing libncurses++ (6.5_p20250503-r0)
(101/169) Installing ncurses-dev (6.5_p20250503-r0)
(102/169) Installing libedit (20250104.3.1-r1)
(103/169) Installing libedit-dev (20250104.3.1-r1)
(104/169) Installing zlib-dev (1.3.1-r2)
(105/169) Installing libpcre2-16 (10.43-r1)
(106/169) Installing libpcre2-32 (10.43-r1)
(107/169) Installing pcre2-dev (10.43-r1)
(108/169) Installing gdbm (1.24-r0)
(109/169) Installing mpdecimal (4.0.1-r0)
(110/169) Installing sqlite-libs (3.50.0-r0)
(111/169) Installing python3 (3.12.10-r1)
(112/169) Installing python3-pycache-pyc0 (3.12.10-r1)
(113/169) Installing pyc (3.12.10-r1)
(114/169) Installing py3-ptyprocess (0.7.0-r6)
(115/169) Installing py3-ptyprocess-pyc (0.7.0-r6)
(116/169) Installing py3-pexpect-pyc (4.9-r1)
(117/169) Installing python3-pyc (3.12.10-r1)
(118/169) Installing py3-pexpect (4.9-r1)
(119/169) Installing py3-tz (2025.2-r0)
(120/169) Installing py3-tz-pyc (2025.2-r0)
(121/169) Installing py3-parsing (3.2.3-r0)
(122/169) Installing py3-parsing-pyc (3.2.3-r0)
(123/169) Installing py3-packaging (25.0-r0)
(124/169) Installing py3-packaging-pyc (25.0-r0)
(125/169) Installing py3-setuptools (80.9.0-r0)
(126/169) Installing py3-setuptools-pyc (80.9.0-r0)
(127/169) Installing py3-babel (2.17.0-r0)
(128/169) Installing py3-babel-pyc (2.17.0-r0)
(129/169) Installing py3-docutils (0.21.2-r0)
(130/169) Installing py3-docutils-pyc (0.21.2-r0)
(131/169) Installing py3-imagesize (1.4.1-r4)
(132/169) Installing py3-imagesize-pyc (1.4.1-r4)
(133/169) Installing py3-markupsafe (3.0.2-r0)
(134/169) Installing py3-markupsafe-pyc (3.0.2-r0)
(135/169) Installing py3-jinja2 (3.1.6-r0)
(136/169) Installing py3-jinja2-pyc (3.1.6-r0)
(137/169) Installing py3-pygments (2.19.1-r1)
(138/169) Installing py3-pygments-pyc (2.19.1-r1)
(139/169) Installing py3-certifi (2025.4.26-r0)
(140/169) Installing py3-certifi-pyc (2025.4.26-r0)
(141/169) Installing py3-charset-normalizer (3.4.2-r0)
(142/169) Installing py3-charset-normalizer-pyc (3.4.2-r0)
(143/169) Installing py3-idna (3.10-r0)
(144/169) Installing py3-idna-pyc (3.10-r0)
(145/169) Installing py3-urllib3 (1.26.20-r0)
(146/169) Installing py3-urllib3-pyc (1.26.20-r0)
(147/169) Installing py3-requests (2.32.3-r0)
(148/169) Installing py3-requests-pyc (2.32.3-r0)
(149/169) Installing py3-snowballstemmer (2.2.0-r5)
(150/169) Installing py3-snowballstemmer-pyc (2.2.0-r5)
(151/169) Installing py3-alabaster (1.0.0-r0)
(152/169) Installing py3-alabaster-pyc (1.0.0-r0)
(153/169) Installing py3-roman-numerals (3.1.0-r0)
(154/169) Installing py3-roman-numerals-pyc (3.1.0-r0)
(155/169) Installing py3-sphinxcontrib-applehelp (1.0.4-r3)
(156/169) Installing py3-sphinxcontrib-applehelp-pyc (1.0.4-r3)
(157/169) Installing py3-sphinxcontrib-devhelp (1.0.5-r2)
(158/169) Installing py3-sphinxcontrib-devhelp-pyc (1.0.5-r2)
(159/169) Installing py3-sphinxcontrib-htmlhelp (2.0.1-r3)
(160/169) Installing py3-sphinxcontrib-htmlhelp-pyc (2.0.1-r3)
(161/169) Installing py3-sphinxcontrib-jsmath (1.0.1-r8)
(162/169) Installing py3-sphinxcontrib-jsmath-pyc (1.0.1-r8)
(163/169) Installing py3-sphinxcontrib-serializinghtml (1.1.9-r2)
(164/169) Installing py3-sphinxcontrib-serializinghtml-pyc (1.1.9-r2)
(165/169) Installing py3-sphinxcontrib-qthelp (2.0.0-r0)
(166/169) Installing py3-sphinxcontrib-qthelp-pyc (2.0.0-r0)
(167/169) Installing py3-sphinx (8.2.3-r1)
(168/169) Installing py3-sphinx-pyc (8.2.3-r1)
(169/169) Installing samurai (1.2-r7)
Executing busybox-1.37.0-r18.trigger
OK: 850 MiB in 169 packages
>>> fish: Fetching https://github.com/fish-shell/fish-shell/releases/download/4.0.2/fish-4.0.2.tar.xz
>>> fish: Checking sha512sums...
fish-4.0.2.tar.xz: OK
ignore-test_history_races.patch: OK
disable-flaky-tests.patch: OK
README.alpine: OK
cargo: OK
>>> fish: Unpacking /var/cache/distfiles/fish-4.0.2.tar.xz...
>>> fish: ignore-test_history_races.patch
patching file src/tests/history.rs
>>> fish: disable-flaky-tests.patch
patching file tests/pexpects/bind.py
patching file tests/pexpects/commandline.py
patching file tests/pexpects/fkr.py
-- The C compiler identification is GNU 14.3.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Found Gettext: /usr/bin/msgmerge (found version "0.24.1")
-- Trying to use PCRE2 from the system
-- Rust Target: x86_64-alpine-linux-musl
-- Determining required link libraries for target x86_64-alpine-linux-musl
-- Required static libs for target x86_64-alpine-linux-musl: gcc_s;c
-- Found Rust: /usr/bin/rustc (found version "1.87.0")
-- The following features have been enabled:

 * gettext, translate messages with gettext
 * Documentation, user manual and documentation

-- The following OPTIONAL packages have been found:

 * Gettext

-- The following REQUIRED packages have been found:

 * Rust

-- Configuring done (0.4s)
-- Generating done (0.0s)
-- Build files have been written to: /tmp/src/fish-4.0.2/build
    Updating crates.io index
    Updating git repository `https://github.com/fish-shell/rust-pcre2`
 Downloading crates ...
  Downloaded serial_test v1.0.0
  Downloaded phf_codegen v0.11.2
  Downloaded equivalent v1.0.1
  Downloaded rust-embed-utils v8.5.0
  Downloaded cfg_aliases v0.2.1
  Downloaded phf_generator v0.11.2
  Downloaded fnv v1.0.7
  Downloaded phf v0.11.2
  Downloaded siphasher v0.3.11
  Downloaded cfg-if v1.0.0
  Downloaded serial_test_derive v1.0.0
  Downloaded pkg-config v0.3.31
  Downloaded rsconf v0.2.2
  Downloaded crypto-common v0.1.6
  Downloaded block-buffer v0.10.4
  Downloaded foldhash v0.1.3
  Downloaded errno v0.3.9
  Downloaded dashmap v5.5.3
  Downloaded rust-embed-impl v8.5.0
  Downloaded widestring v1.1.0
  Downloaded walkdir v2.5.0
  Downloaded parking_lot_core v0.9.10
  Downloaded lru v0.12.5
  Downloaded lazy_static v1.5.0
  Downloaded scopeguard v1.2.0
  Downloaded digest v0.10.7
  Downloaded cpufeatures v0.2.14
  Downloaded smallvec v1.13.2
  Downloaded phf_shared v0.11.2
  Downloaded once_cell v1.20.2
  Downloaded jobserver v0.1.32
  Downloaded version_check v0.9.5
  Downloaded sha2 v0.10.8
  Downloaded log v0.4.22
  Downloaded bitflags v2.6.0
  Downloaded allocator-api2 v0.2.18
  Downloaded cc v1.1.30
  Downloaded minimal-lexical v0.2.1
  Downloaded nom v7.1.3
  Downloaded hashbrown v0.15.0
  Downloaded rand v0.8.5
  Downloaded hashbrown v0.14.5
  Downloaded num-traits v0.2.19
  Downloaded memchr v2.7.4
  Downloaded syn v1.0.109
  Downloaded typenum v1.17.0
  Downloaded parking_lot v0.12.3
  Downloaded syn v2.0.79
  Downloaded proc-macro2 v1.0.87
  Downloaded unicode-ident v1.0.13
  Downloaded nix v0.29.0
  Downloaded terminfo v0.9.0
  Downloaded rand_core v0.6.4
  Downloaded shlex v1.3.0
  Downloaded autocfg v1.4.0
  Downloaded lock_api v0.4.12
  Downloaded quote v1.0.37
  Downloaded same-file v1.0.6
  Downloaded generic-array v0.14.7
  Downloaded libc v0.2.159
  Downloaded rust-embed v8.5.0
[1/2] Re-checking globbed directories...
[1/16] Building C object CMakeFiles/fish_test_helper.dir/src/fish_test_helper.c.o
[2/16] cd /tmp/src/fish-4.0.2 && /tmp/src/fish-4.0.2/build_tools/git_version_gen.sh /tmp/src/fish-4.0.2/build
[3/16] cd /tmp/src/fish-4.0.2 && /usr/bin/cmake -E env FISH_BUILD_DIR=/tmp/src/fish-4.0.2/build PREFIX=/usr CMAKE_WITH_GETTEXT=1 CMAKE=1 DOCDIR=/usr/share/doc/fish DATADIR=/usr/share SYSCONFDIR=/etc BINDIR=/usr/bin LOCALEDIR=/usr/share/locale CARGO_TARGET_DIR=/tmp/src/fish-4.0.2/build/cargo/build CARGO_BUILD_RUSTC=/usr/bin/rustc RUSTFLAGS=\ -Clink-arg=-Wl,-z,pack-relative-relocs\ -g /tmp/src/cargo build --bin fish  --profile=release-with-debug --target x86_64-alpine-linux-musl --no-default-features && /usr/bin/cmake -E copy /tmp/src/fish-4.0.2/build/cargo/build/x86_64-alpine-linux-musl/release-with-debug/fish /tmp/src/fish-4.0.2/build
   Compiling libc v0.2.159
   Compiling shlex v1.3.0
   Compiling siphasher v0.3.11
   Compiling rand_core v0.6.4
   Compiling rsconf v0.2.2
   Compiling pkg-config v0.3.31
   Compiling autocfg v1.4.0
   Compiling cfg_aliases v0.2.1
   Compiling foldhash v0.1.3
   Compiling minimal-lexical v0.2.1
   Compiling equivalent v1.0.1
   Compiling memchr v2.7.4
   Compiling allocator-api2 v0.2.18
   Compiling cfg-if v1.0.0
   Compiling nix v0.29.0
   Compiling bitflags v2.6.0
   Compiling fnv v1.0.7
   Compiling phf_shared v0.11.2
   Compiling widestring v1.1.0
   Compiling rand v0.8.5
   Compiling log v0.4.22
   Compiling lazy_static v1.5.0
   Compiling phf v0.11.2
   Compiling once_cell v1.20.2
   Compiling nom v7.1.3
   Compiling hashbrown v0.15.0
   Compiling phf_generator v0.11.2
   Compiling num-traits v0.2.19
   Compiling phf_codegen v0.11.2
   Compiling terminfo v0.9.0
   Compiling lru v0.12.5
   Compiling jobserver v0.1.32
   Compiling fish-printf v0.2.1 (/tmp/src/fish-4.0.2/printf)
   Compiling errno v0.3.9
   Compiling cc v1.1.30
   Compiling pcre2-sys v0.2.9 (https://github.com/fish-shell/rust-pcre2?tag=0.2.9-utf32#85b7afba)
   Compiling fish v4.0.2 (/tmp/src/fish-4.0.2)
   Compiling pcre2 v0.2.9 (https://github.com/fish-shell/rust-pcre2?tag=0.2.9-utf32#85b7afba)
warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1086 |   implement_acceptor_for_branch!(Redirection, (oper: TokenRedirection), (target: String_));
     |   ---------------------------------------------------------------------------------------- in this macro invocation
     |
     = note: `#[warn(unused_must_use)]` on by default
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1103 | / define_list_node!(
1104 | |     VariableAssignmentList,
1105 | |     variable_assignment_list,
1106 | |     VariableAssignment
1107 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1126 | / implement_acceptor_for_branch!(
1127 | |     ArgumentOrRedirection,
1128 | |     (contents: (Box<ArgumentOrRedirectionVariant>))
1129 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1147 | / define_list_node!(
1148 | |     ArgumentOrRedirectionList,
1149 | |     argument_or_redirection_list,
1150 | |     ArgumentOrRedirection
1151 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1170 |   implement_acceptor_for_branch!(Statement, (contents: (Box<StatementVariant>)));
     |   ------------------------------------------------------------------------------ in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1199 | / implement_acceptor_for_branch!(
1200 | |     JobPipeline,
1201 | |     (time: (Option<KeywordTime>)),
1202 | |     (variables: (VariableAssignmentList)),
...    |
1205 | |     (bg: (Option<TokenBackground>)),
1206 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1234 | / implement_acceptor_for_branch!(
1235 | |     JobConjunction,
1236 | |     (decorator: (Option<JobConjunctionDecorator>)),
1237 | |     (job: (JobPipeline)),
1238 | |     (continuations: (JobConjunctionContinuationList)),
1239 | |     (semi_nl: (Option<SemiNl>)),
1240 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1278 | / implement_acceptor_for_branch!(
1279 | |     ForHeader,
1280 | |     (kw_for: (KeywordFor)),
1281 | |     (var_name: (String_)),
...    |
1284 | |     (semi_nl: (SemiNl)),
1285 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1306 | / implement_acceptor_for_branch!(
1307 | |     WhileHeader,
1308 | |     (kw_while: (KeywordWhile)),
1309 | |     (condition: (JobConjunction)),
1310 | |     (andor_tail: (AndorJobList)),
1311 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1333 | / implement_acceptor_for_branch!(
1334 | |     FunctionHeader,
1335 | |     (kw_function: (KeywordFunction)),
1336 | |     (first_arg: (Argument)),
1337 | |     (args: (ArgumentList)),
1338 | |     (semi_nl: (SemiNl)),
1339 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1360 | / implement_acceptor_for_branch!(
1361 | |     BeginHeader,
1362 | |     (kw_begin: (KeywordBegin)),
1363 | |     (semi_nl: (Option<SemiNl>))
1364 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1389 | / implement_acceptor_for_branch!(
1390 | |     BlockStatement,
1391 | |     (header: (Box<BlockStatementHeaderVariant>)),
1392 | |     (jobs: (JobList)),
1393 | |     (end: (KeywordEnd)),
1394 | |     (args_or_redirs: (ArgumentOrRedirectionList)),
1395 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1420 | / implement_acceptor_for_branch!(
1421 | |     IfClause,
1422 | |     (kw_if: (KeywordIf)),
1423 | |     (condition: (JobConjunction)),
1424 | |     (andor_tail: (AndorJobList)),
1425 | |     (body: (JobList)),
1426 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1447 | / implement_acceptor_for_branch!(
1448 | |     ElseifClause,
1449 | |     (kw_else: (KeywordElse)),
1450 | |     (if_clause: (IfClause)),
1451 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1469 |   define_list_node!(ElseifClauseList, elseif_clause_list, ElseifClause);
     |   --------------------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1490 | / implement_acceptor_for_branch!(
1491 | |     ElseClause,
1492 | |     (kw_else: (KeywordElse)),
1493 | |     (semi_nl: (SemiNl)),
1494 | |     (body: (JobList)),
1495 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1527 | / implement_acceptor_for_branch!(
1528 | |     IfStatement,
1529 | |     (if_clause: (IfClause)),
1530 | |     (elseif_clauses: (ElseifClauseList)),
...    |
1533 | |     (args_or_redirs: (ArgumentOrRedirectionList)),
1534 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1556 | / implement_acceptor_for_branch!(
1557 | |     CaseItem,
1558 | |     (kw_case: (KeywordCase)),
1559 | |     (arguments: (ArgumentList)),
1560 | |     (semi_nl: (SemiNl)),
1561 | |     (body: (JobList)),
1562 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1591 | / implement_acceptor_for_branch!(
1592 | |     SwitchStatement,
1593 | |     (kw_switch: (KeywordSwitch)),
1594 | |     (argument: (Argument)),
...    |
1598 | |     (args_or_redirs: (ArgumentOrRedirectionList)),
1599 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1624 | / implement_acceptor_for_branch!(
1625 | |     DecoratedStatement,
1626 | |     (opt_decoration: (Option<DecoratedStatementDecorator>)),
1627 | |     (command: (String_)),
1628 | |     (args_or_redirs: (ArgumentOrRedirectionList)),
1629 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1652 | / implement_acceptor_for_branch!(
1653 | |     NotStatement,
1654 | |     (kw: (KeywordNot)),
1655 | |     (time: (Option<KeywordTime>)),
1656 | |     (variables: (VariableAssignmentList)),
1657 | |     (contents: (Statement)),
1658 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1679 | / implement_acceptor_for_branch!(
1680 | |     JobContinuation,
1681 | |     (pipe: (TokenPipe)),
1682 | |     (newlines: (MaybeNewlines)),
1683 | |     (variables: (VariableAssignmentList)),
1684 | |     (statement: (Statement)),
1685 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1702 |   define_list_node!(JobContinuationList, job_continuation_list, JobContinuation);
     |   ------------------------------------------------------------------------------ in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1728 | / implement_acceptor_for_branch!(
1729 | |     JobConjunctionContinuation,
1730 | |     (conjunction: (TokenConjunction)),
1731 | |     (newlines: (MaybeNewlines)),
1732 | |     (job: (JobPipeline)),
1733 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1760 |   implement_acceptor_for_branch!(AndorJob, (job: (JobConjunction)));
     |   ----------------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1784 |   define_list_node!(AndorJobList, andor_job_list, AndorJob);
     |   --------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1805 |   implement_acceptor_for_branch!(FreestandingArgumentList, (arguments: (ArgumentList)));
     |   ------------------------------------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1817 | / define_list_node!(
1818 | |     JobConjunctionContinuationList,
1819 | |     job_conjunction_continuation_list,
1820 | |     JobConjunctionContinuation
1821 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1835 |   define_list_node!(ArgumentList, argument_list, Argument);
     |   -------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1848 |   define_list_node!(JobList, job_list, JobConjunction);
     |   ---------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1860 |   define_list_node!(CaseItemList, case_item_list, CaseItem);
     |   --------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:3721:9
     |
3721 |         self.visit_mut(&mut *result);
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
help: use `let _ = ...` to ignore the resulting value
     |
3721 |         let _ = self.visit_mut(&mut *result);
     |         +++++++

warning: unused `ControlFlow` that must be used
   --> src/reader.rs:983:9
    |
983 |         data.handle_char_event(Some(ch));
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: use `let _ = ...` to ignore the resulting value
    |
983 |         let _ = data.handle_char_event(Some(ch));
    |         +++++++

warning: `fish` (lib) generated 33 warnings
warning: unused import: `wcs2osstring`
  --> src/bin/fish.rs:33:23
   |
33 |         str2wcstring, wcs2osstring, wcs2string, PACKAGE_NAME, PROFILING_ACTIVE, PROGRAM_NAME,
   |                       ^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: function `install` is never used
   --> src/bin/fish.rs:195:4
    |
195 | fn install(_confirm: bool, _dir: PathBuf) -> bool {
    |    ^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: `fish` (bin "fish") generated 2 warnings (run `cargo fix --bin "fish"` to apply 1 suggestion)
    Finished `release-with-debug` profile [optimized + debuginfo] target(s) in 1m 02s
[14/16] cd /tmp/src/fish-4.0.2 && /usr/bin/cmake -E env FISH_BUILD_DIR=/tmp/src/fish-4.0.2/build PREFIX=/usr CMAKE_WITH_GETTEXT=1 CMAKE=1 DOCDIR=/usr/share/doc/fish DATADIR=/usr/share SYSCONFDIR=/etc BINDIR=/usr/bin LOCALEDIR=/usr/share/locale CARGO_TARGET_DIR=/tmp/src/fish-4.0.2/build/cargo/build CARGO_BUILD_RUSTC=/usr/bin/rustc RUSTFLAGS=\ -Clink-arg=-Wl,-z,pack-relative-relocs\ -g /tmp/src/cargo build --bin fish_key_reader  --profile=release-with-debug --target x86_64-alpine-linux-musl --no-default-features && /usr/bin/cmake -E copy /tmp/src/fish-4.0.2/build/cargo/build/x86_64-alpine-linux-musl/release-with-debug/fish_key_reader /tmp/src/fish-4.0.2/build
warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1086 |   implement_acceptor_for_branch!(Redirection, (oper: TokenRedirection), (target: String_));
     |   ---------------------------------------------------------------------------------------- in this macro invocation
     |
     = note: `#[warn(unused_must_use)]` on by default
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1103 | / define_list_node!(
1104 | |     VariableAssignmentList,
1105 | |     variable_assignment_list,
1106 | |     VariableAssignment
1107 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1126 | / implement_acceptor_for_branch!(
1127 | |     ArgumentOrRedirection,
1128 | |     (contents: (Box<ArgumentOrRedirectionVariant>))
1129 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1147 | / define_list_node!(
1148 | |     ArgumentOrRedirectionList,
1149 | |     argument_or_redirection_list,
1150 | |     ArgumentOrRedirection
1151 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1170 |   implement_acceptor_for_branch!(Statement, (contents: (Box<StatementVariant>)));
     |   ------------------------------------------------------------------------------ in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1199 | / implement_acceptor_for_branch!(
1200 | |     JobPipeline,
1201 | |     (time: (Option<KeywordTime>)),
1202 | |     (variables: (VariableAssignmentList)),
...    |
1205 | |     (bg: (Option<TokenBackground>)),
1206 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1234 | / implement_acceptor_for_branch!(
1235 | |     JobConjunction,
1236 | |     (decorator: (Option<JobConjunctionDecorator>)),
1237 | |     (job: (JobPipeline)),
1238 | |     (continuations: (JobConjunctionContinuationList)),
1239 | |     (semi_nl: (Option<SemiNl>)),
1240 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1278 | / implement_acceptor_for_branch!(
1279 | |     ForHeader,
1280 | |     (kw_for: (KeywordFor)),
1281 | |     (var_name: (String_)),
...    |
1284 | |     (semi_nl: (SemiNl)),
1285 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1306 | / implement_acceptor_for_branch!(
1307 | |     WhileHeader,
1308 | |     (kw_while: (KeywordWhile)),
1309 | |     (condition: (JobConjunction)),
1310 | |     (andor_tail: (AndorJobList)),
1311 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1333 | / implement_acceptor_for_branch!(
1334 | |     FunctionHeader,
1335 | |     (kw_function: (KeywordFunction)),
1336 | |     (first_arg: (Argument)),
1337 | |     (args: (ArgumentList)),
1338 | |     (semi_nl: (SemiNl)),
1339 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1360 | / implement_acceptor_for_branch!(
1361 | |     BeginHeader,
1362 | |     (kw_begin: (KeywordBegin)),
1363 | |     (semi_nl: (Option<SemiNl>))
1364 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1389 | / implement_acceptor_for_branch!(
1390 | |     BlockStatement,
1391 | |     (header: (Box<BlockStatementHeaderVariant>)),
1392 | |     (jobs: (JobList)),
1393 | |     (end: (KeywordEnd)),
1394 | |     (args_or_redirs: (ArgumentOrRedirectionList)),
1395 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1420 | / implement_acceptor_for_branch!(
1421 | |     IfClause,
1422 | |     (kw_if: (KeywordIf)),
1423 | |     (condition: (JobConjunction)),
1424 | |     (andor_tail: (AndorJobList)),
1425 | |     (body: (JobList)),
1426 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1447 | / implement_acceptor_for_branch!(
1448 | |     ElseifClause,
1449 | |     (kw_else: (KeywordElse)),
1450 | |     (if_clause: (IfClause)),
1451 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1469 |   define_list_node!(ElseifClauseList, elseif_clause_list, ElseifClause);
     |   --------------------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1490 | / implement_acceptor_for_branch!(
1491 | |     ElseClause,
1492 | |     (kw_else: (KeywordElse)),
1493 | |     (semi_nl: (SemiNl)),
1494 | |     (body: (JobList)),
1495 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1527 | / implement_acceptor_for_branch!(
1528 | |     IfStatement,
1529 | |     (if_clause: (IfClause)),
1530 | |     (elseif_clauses: (ElseifClauseList)),
...    |
1533 | |     (args_or_redirs: (ArgumentOrRedirectionList)),
1534 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1556 | / implement_acceptor_for_branch!(
1557 | |     CaseItem,
1558 | |     (kw_case: (KeywordCase)),
1559 | |     (arguments: (ArgumentList)),
1560 | |     (semi_nl: (SemiNl)),
1561 | |     (body: (JobList)),
1562 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1591 | / implement_acceptor_for_branch!(
1592 | |     SwitchStatement,
1593 | |     (kw_switch: (KeywordSwitch)),
1594 | |     (argument: (Argument)),
...    |
1598 | |     (args_or_redirs: (ArgumentOrRedirectionList)),
1599 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1624 | / implement_acceptor_for_branch!(
1625 | |     DecoratedStatement,
1626 | |     (opt_decoration: (Option<DecoratedStatementDecorator>)),
1627 | |     (command: (String_)),
1628 | |     (args_or_redirs: (ArgumentOrRedirectionList)),
1629 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1652 | / implement_acceptor_for_branch!(
1653 | |     NotStatement,
1654 | |     (kw: (KeywordNot)),
1655 | |     (time: (Option<KeywordTime>)),
1656 | |     (variables: (VariableAssignmentList)),
1657 | |     (contents: (Statement)),
1658 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1679 | / implement_acceptor_for_branch!(
1680 | |     JobContinuation,
1681 | |     (pipe: (TokenPipe)),
1682 | |     (newlines: (MaybeNewlines)),
1683 | |     (variables: (VariableAssignmentList)),
1684 | |     (statement: (Statement)),
1685 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1702 |   define_list_node!(JobContinuationList, job_continuation_list, JobContinuation);
     |   ------------------------------------------------------------------------------ in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1728 | / implement_acceptor_for_branch!(
1729 | |     JobConjunctionContinuation,
1730 | |     (conjunction: (TokenConjunction)),
1731 | |     (newlines: (MaybeNewlines)),
1732 | |     (job: (JobPipeline)),
1733 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1760 |   implement_acceptor_for_branch!(AndorJob, (job: (JobConjunction)));
     |   ----------------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1784 |   define_list_node!(AndorJobList, andor_job_list, AndorJob);
     |   --------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1805 |   implement_acceptor_for_branch!(FreestandingArgumentList, (arguments: (ArgumentList)));
     |   ------------------------------------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1817 | / define_list_node!(
1818 | |     JobConjunctionContinuationList,
1819 | |     job_conjunction_continuation_list,
1820 | |     JobConjunctionContinuation
1821 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1835 |   define_list_node!(ArgumentList, argument_list, Argument);
     |   -------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1848 |   define_list_node!(JobList, job_list, JobConjunction);
     |   ---------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1860 |   define_list_node!(CaseItemList, case_item_list, CaseItem);
     |   --------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:3721:9
     |
3721 |         self.visit_mut(&mut *result);
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
help: use `let _ = ...` to ignore the resulting value
     |
3721 |         let _ = self.visit_mut(&mut *result);
     |         +++++++

warning: unused `ControlFlow` that must be used
   --> src/reader.rs:983:9
    |
983 |         data.handle_char_event(Some(ch));
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: use `let _ = ...` to ignore the resulting value
    |
983 |         let _ = data.handle_char_event(Some(ch));
    |         +++++++

warning: `fish` (lib) generated 33 warnings
   Compiling fish v4.0.2 (/tmp/src/fish-4.0.2)
    Finished `release-with-debug` profile [optimized + debuginfo] target(s) in 9.65s
[15/16] cd /tmp/src/fish-4.0.2 && /usr/bin/cmake -E env FISH_BUILD_DIR=/tmp/src/fish-4.0.2/build PREFIX=/usr CMAKE_WITH_GETTEXT=1 CMAKE=1 DOCDIR=/usr/share/doc/fish DATADIR=/usr/share SYSCONFDIR=/etc BINDIR=/usr/bin LOCALEDIR=/usr/share/locale CARGO_TARGET_DIR=/tmp/src/fish-4.0.2/build/cargo/build CARGO_BUILD_RUSTC=/usr/bin/rustc RUSTFLAGS=\ -Clink-arg=-Wl,-z,pack-relative-relocs\ -g /tmp/src/cargo build --bin fish_indent  --profile=release-with-debug --target x86_64-alpine-linux-musl --no-default-features && /usr/bin/cmake -E copy /tmp/src/fish-4.0.2/build/cargo/build/x86_64-alpine-linux-musl/release-with-debug/fish_indent /tmp/src/fish-4.0.2/build
warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1086 |   implement_acceptor_for_branch!(Redirection, (oper: TokenRedirection), (target: String_));
     |   ---------------------------------------------------------------------------------------- in this macro invocation
     |
     = note: `#[warn(unused_must_use)]` on by default
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1103 | / define_list_node!(
1104 | |     VariableAssignmentList,
1105 | |     variable_assignment_list,
1106 | |     VariableAssignment
1107 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1126 | / implement_acceptor_for_branch!(
1127 | |     ArgumentOrRedirection,
1128 | |     (contents: (Box<ArgumentOrRedirectionVariant>))
1129 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1147 | / define_list_node!(
1148 | |     ArgumentOrRedirectionList,
1149 | |     argument_or_redirection_list,
1150 | |     ArgumentOrRedirection
1151 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1170 |   implement_acceptor_for_branch!(Statement, (contents: (Box<StatementVariant>)));
     |   ------------------------------------------------------------------------------ in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1199 | / implement_acceptor_for_branch!(
1200 | |     JobPipeline,
1201 | |     (time: (Option<KeywordTime>)),
1202 | |     (variables: (VariableAssignmentList)),
...    |
1205 | |     (bg: (Option<TokenBackground>)),
1206 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1234 | / implement_acceptor_for_branch!(
1235 | |     JobConjunction,
1236 | |     (decorator: (Option<JobConjunctionDecorator>)),
1237 | |     (job: (JobPipeline)),
1238 | |     (continuations: (JobConjunctionContinuationList)),
1239 | |     (semi_nl: (Option<SemiNl>)),
1240 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1278 | / implement_acceptor_for_branch!(
1279 | |     ForHeader,
1280 | |     (kw_for: (KeywordFor)),
1281 | |     (var_name: (String_)),
...    |
1284 | |     (semi_nl: (SemiNl)),
1285 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1306 | / implement_acceptor_for_branch!(
1307 | |     WhileHeader,
1308 | |     (kw_while: (KeywordWhile)),
1309 | |     (condition: (JobConjunction)),
1310 | |     (andor_tail: (AndorJobList)),
1311 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1333 | / implement_acceptor_for_branch!(
1334 | |     FunctionHeader,
1335 | |     (kw_function: (KeywordFunction)),
1336 | |     (first_arg: (Argument)),
1337 | |     (args: (ArgumentList)),
1338 | |     (semi_nl: (SemiNl)),
1339 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1360 | / implement_acceptor_for_branch!(
1361 | |     BeginHeader,
1362 | |     (kw_begin: (KeywordBegin)),
1363 | |     (semi_nl: (Option<SemiNl>))
1364 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1389 | / implement_acceptor_for_branch!(
1390 | |     BlockStatement,
1391 | |     (header: (Box<BlockStatementHeaderVariant>)),
1392 | |     (jobs: (JobList)),
1393 | |     (end: (KeywordEnd)),
1394 | |     (args_or_redirs: (ArgumentOrRedirectionList)),
1395 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1420 | / implement_acceptor_for_branch!(
1421 | |     IfClause,
1422 | |     (kw_if: (KeywordIf)),
1423 | |     (condition: (JobConjunction)),
1424 | |     (andor_tail: (AndorJobList)),
1425 | |     (body: (JobList)),
1426 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1447 | / implement_acceptor_for_branch!(
1448 | |     ElseifClause,
1449 | |     (kw_else: (KeywordElse)),
1450 | |     (if_clause: (IfClause)),
1451 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1469 |   define_list_node!(ElseifClauseList, elseif_clause_list, ElseifClause);
     |   --------------------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1490 | / implement_acceptor_for_branch!(
1491 | |     ElseClause,
1492 | |     (kw_else: (KeywordElse)),
1493 | |     (semi_nl: (SemiNl)),
1494 | |     (body: (JobList)),
1495 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1527 | / implement_acceptor_for_branch!(
1528 | |     IfStatement,
1529 | |     (if_clause: (IfClause)),
1530 | |     (elseif_clauses: (ElseifClauseList)),
...    |
1533 | |     (args_or_redirs: (ArgumentOrRedirectionList)),
1534 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1556 | / implement_acceptor_for_branch!(
1557 | |     CaseItem,
1558 | |     (kw_case: (KeywordCase)),
1559 | |     (arguments: (ArgumentList)),
1560 | |     (semi_nl: (SemiNl)),
1561 | |     (body: (JobList)),
1562 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1591 | / implement_acceptor_for_branch!(
1592 | |     SwitchStatement,
1593 | |     (kw_switch: (KeywordSwitch)),
1594 | |     (argument: (Argument)),
...    |
1598 | |     (args_or_redirs: (ArgumentOrRedirectionList)),
1599 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1624 | / implement_acceptor_for_branch!(
1625 | |     DecoratedStatement,
1626 | |     (opt_decoration: (Option<DecoratedStatementDecorator>)),
1627 | |     (command: (String_)),
1628 | |     (args_or_redirs: (ArgumentOrRedirectionList)),
1629 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1652 | / implement_acceptor_for_branch!(
1653 | |     NotStatement,
1654 | |     (kw: (KeywordNot)),
1655 | |     (time: (Option<KeywordTime>)),
1656 | |     (variables: (VariableAssignmentList)),
1657 | |     (contents: (Statement)),
1658 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1679 | / implement_acceptor_for_branch!(
1680 | |     JobContinuation,
1681 | |     (pipe: (TokenPipe)),
1682 | |     (newlines: (MaybeNewlines)),
1683 | |     (variables: (VariableAssignmentList)),
1684 | |     (statement: (Statement)),
1685 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1702 |   define_list_node!(JobContinuationList, job_continuation_list, JobContinuation);
     |   ------------------------------------------------------------------------------ in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1728 | / implement_acceptor_for_branch!(
1729 | |     JobConjunctionContinuation,
1730 | |     (conjunction: (TokenConjunction)),
1731 | |     (newlines: (MaybeNewlines)),
1732 | |     (job: (JobPipeline)),
1733 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1760 |   implement_acceptor_for_branch!(AndorJob, (job: (JobConjunction)));
     |   ----------------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1784 |   define_list_node!(AndorJobList, andor_job_list, AndorJob);
     |   --------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1805 |   implement_acceptor_for_branch!(FreestandingArgumentList, (arguments: (ArgumentList)));
     |   ------------------------------------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1817 | / define_list_node!(
1818 | |     JobConjunctionContinuationList,
1819 | |     job_conjunction_continuation_list,
1820 | |     JobConjunctionContinuation
1821 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1835 |   define_list_node!(ArgumentList, argument_list, Argument);
     |   -------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1848 |   define_list_node!(JobList, job_list, JobConjunction);
     |   ---------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1860 |   define_list_node!(CaseItemList, case_item_list, CaseItem);
     |   --------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:3721:9
     |
3721 |         self.visit_mut(&mut *result);
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
help: use `let _ = ...` to ignore the resulting value
     |
3721 |         let _ = self.visit_mut(&mut *result);
     |         +++++++

warning: unused `ControlFlow` that must be used
   --> src/reader.rs:983:9
    |
983 |         data.handle_char_event(Some(ch));
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: use `let _ = ...` to ignore the resulting value
    |
983 |         let _ = data.handle_char_event(Some(ch));
    |         +++++++

warning: `fish` (lib) generated 33 warnings
   Compiling fish v4.0.2 (/tmp/src/fish-4.0.2)
    Finished `release-with-debug` profile [optimized + debuginfo] target(s) in 25.90s
[16/16] Building HTML documentation with Sphinx
ninja: entering directory 'build'
[1/2] Re-checking globbed directories...
[1/5] Running utility command for tests_dir
[2/5] Running utility command for funcs_dir
[3/5] cd /tmp/src/fish-4.0.2 && /usr/bin/cmake -E env FISH_BUILD_DIR=/tmp/src/fish-4.0.2/build PREFIX=/usr CMAKE_WITH_GETTEXT=1 CMAKE=1 DOCDIR=/usr/share/doc/fish DATADIR=/usr/share SYSCONFDIR=/etc BINDIR=/usr/bin LOCALEDIR=/usr/share/locale CARGO_TARGET_DIR=/tmp/src/fish-4.0.2/build/cargo/build CARGO_BUILD_RUSTC=/usr/bin/rustc RUSTFLAGS=\ -Clink-arg=-Wl,-z,pack-relative-relocs\ -g /tmp/src/cargo build --bin fish  --profile=release-with-debug --target x86_64-alpine-linux-musl --no-default-features && /usr/bin/cmake -E copy /tmp/src/fish-4.0.2/build/cargo/build/x86_64-alpine-linux-musl/release-with-debug/fish /tmp/src/fish-4.0.2/build
warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1086 |   implement_acceptor_for_branch!(Redirection, (oper: TokenRedirection), (target: String_));
     |   ---------------------------------------------------------------------------------------- in this macro invocation
     |
     = note: `#[warn(unused_must_use)]` on by default
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1103 | / define_list_node!(
1104 | |     VariableAssignmentList,
1105 | |     variable_assignment_list,
1106 | |     VariableAssignment
1107 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1126 | / implement_acceptor_for_branch!(
1127 | |     ArgumentOrRedirection,
1128 | |     (contents: (Box<ArgumentOrRedirectionVariant>))
1129 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1147 | / define_list_node!(
1148 | |     ArgumentOrRedirectionList,
1149 | |     argument_or_redirection_list,
1150 | |     ArgumentOrRedirection
1151 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1170 |   implement_acceptor_for_branch!(Statement, (contents: (Box<StatementVariant>)));
     |   ------------------------------------------------------------------------------ in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1199 | / implement_acceptor_for_branch!(
1200 | |     JobPipeline,
1201 | |     (time: (Option<KeywordTime>)),
1202 | |     (variables: (VariableAssignmentList)),
...    |
1205 | |     (bg: (Option<TokenBackground>)),
1206 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1234 | / implement_acceptor_for_branch!(
1235 | |     JobConjunction,
1236 | |     (decorator: (Option<JobConjunctionDecorator>)),
1237 | |     (job: (JobPipeline)),
1238 | |     (continuations: (JobConjunctionContinuationList)),
1239 | |     (semi_nl: (Option<SemiNl>)),
1240 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1278 | / implement_acceptor_for_branch!(
1279 | |     ForHeader,
1280 | |     (kw_for: (KeywordFor)),
1281 | |     (var_name: (String_)),
...    |
1284 | |     (semi_nl: (SemiNl)),
1285 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1306 | / implement_acceptor_for_branch!(
1307 | |     WhileHeader,
1308 | |     (kw_while: (KeywordWhile)),
1309 | |     (condition: (JobConjunction)),
1310 | |     (andor_tail: (AndorJobList)),
1311 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1333 | / implement_acceptor_for_branch!(
1334 | |     FunctionHeader,
1335 | |     (kw_function: (KeywordFunction)),
1336 | |     (first_arg: (Argument)),
1337 | |     (args: (ArgumentList)),
1338 | |     (semi_nl: (SemiNl)),
1339 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1360 | / implement_acceptor_for_branch!(
1361 | |     BeginHeader,
1362 | |     (kw_begin: (KeywordBegin)),
1363 | |     (semi_nl: (Option<SemiNl>))
1364 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1389 | / implement_acceptor_for_branch!(
1390 | |     BlockStatement,
1391 | |     (header: (Box<BlockStatementHeaderVariant>)),
1392 | |     (jobs: (JobList)),
1393 | |     (end: (KeywordEnd)),
1394 | |     (args_or_redirs: (ArgumentOrRedirectionList)),
1395 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1420 | / implement_acceptor_for_branch!(
1421 | |     IfClause,
1422 | |     (kw_if: (KeywordIf)),
1423 | |     (condition: (JobConjunction)),
1424 | |     (andor_tail: (AndorJobList)),
1425 | |     (body: (JobList)),
1426 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1447 | / implement_acceptor_for_branch!(
1448 | |     ElseifClause,
1449 | |     (kw_else: (KeywordElse)),
1450 | |     (if_clause: (IfClause)),
1451 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1469 |   define_list_node!(ElseifClauseList, elseif_clause_list, ElseifClause);
     |   --------------------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1490 | / implement_acceptor_for_branch!(
1491 | |     ElseClause,
1492 | |     (kw_else: (KeywordElse)),
1493 | |     (semi_nl: (SemiNl)),
1494 | |     (body: (JobList)),
1495 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1527 | / implement_acceptor_for_branch!(
1528 | |     IfStatement,
1529 | |     (if_clause: (IfClause)),
1530 | |     (elseif_clauses: (ElseifClauseList)),
...    |
1533 | |     (args_or_redirs: (ArgumentOrRedirectionList)),
1534 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1556 | / implement_acceptor_for_branch!(
1557 | |     CaseItem,
1558 | |     (kw_case: (KeywordCase)),
1559 | |     (arguments: (ArgumentList)),
1560 | |     (semi_nl: (SemiNl)),
1561 | |     (body: (JobList)),
1562 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1591 | / implement_acceptor_for_branch!(
1592 | |     SwitchStatement,
1593 | |     (kw_switch: (KeywordSwitch)),
1594 | |     (argument: (Argument)),
...    |
1598 | |     (args_or_redirs: (ArgumentOrRedirectionList)),
1599 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1624 | / implement_acceptor_for_branch!(
1625 | |     DecoratedStatement,
1626 | |     (opt_decoration: (Option<DecoratedStatementDecorator>)),
1627 | |     (command: (String_)),
1628 | |     (args_or_redirs: (ArgumentOrRedirectionList)),
1629 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1652 | / implement_acceptor_for_branch!(
1653 | |     NotStatement,
1654 | |     (kw: (KeywordNot)),
1655 | |     (time: (Option<KeywordTime>)),
1656 | |     (variables: (VariableAssignmentList)),
1657 | |     (contents: (Statement)),
1658 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1679 | / implement_acceptor_for_branch!(
1680 | |     JobContinuation,
1681 | |     (pipe: (TokenPipe)),
1682 | |     (newlines: (MaybeNewlines)),
1683 | |     (variables: (VariableAssignmentList)),
1684 | |     (statement: (Statement)),
1685 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1702 |   define_list_node!(JobContinuationList, job_continuation_list, JobContinuation);
     |   ------------------------------------------------------------------------------ in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1728 | / implement_acceptor_for_branch!(
1729 | |     JobConjunctionContinuation,
1730 | |     (conjunction: (TokenConjunction)),
1731 | |     (newlines: (MaybeNewlines)),
1732 | |     (job: (JobPipeline)),
1733 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1760 |   implement_acceptor_for_branch!(AndorJob, (job: (JobConjunction)));
     |   ----------------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1784 |   define_list_node!(AndorJobList, andor_job_list, AndorJob);
     |   --------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1805 |   implement_acceptor_for_branch!(FreestandingArgumentList, (arguments: (ArgumentList)));
     |   ------------------------------------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1817 | / define_list_node!(
1818 | |     JobConjunctionContinuationList,
1819 | |     job_conjunction_continuation_list,
1820 | |     JobConjunctionContinuation
1821 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1835 |   define_list_node!(ArgumentList, argument_list, Argument);
     |   -------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1848 |   define_list_node!(JobList, job_list, JobConjunction);
     |   ---------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1860 |   define_list_node!(CaseItemList, case_item_list, CaseItem);
     |   --------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:3721:9
     |
3721 |         self.visit_mut(&mut *result);
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
help: use `let _ = ...` to ignore the resulting value
     |
3721 |         let _ = self.visit_mut(&mut *result);
     |         +++++++

warning: unused `ControlFlow` that must be used
   --> src/reader.rs:983:9
    |
983 |         data.handle_char_event(Some(ch));
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: use `let _ = ...` to ignore the resulting value
    |
983 |         let _ = data.handle_char_event(Some(ch));
    |         +++++++

warning: `fish` (lib) generated 33 warnings
warning: unused import: `wcs2osstring`
  --> src/bin/fish.rs:33:23
   |
33 |         str2wcstring, wcs2osstring, wcs2string, PACKAGE_NAME, PROFILING_ACTIVE, PROGRAM_NAME,
   |                       ^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: function `install` is never used
   --> src/bin/fish.rs:195:4
    |
195 | fn install(_confirm: bool, _dir: PathBuf) -> bool {
    |    ^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: `fish` (bin "fish") generated 2 warnings (run `cargo fix --bin "fish"` to apply 1 suggestion)
    Finished `release-with-debug` profile [optimized + debuginfo] target(s) in 0.03s
[4/5] cd /tmp/src/fish-4.0.2/build && /usr/bin/cmake -E make_directory /tmp/src/fish-4.0.2/build/test/buildroot && env DESTDIR=/tmp/src/fish-4.0.2/build/test/buildroot /usr/bin/cmake --build /tmp/src/fish-4.0.2/build --target install && /usr/bin/cmake -E copy /tmp/src/fish-4.0.2/build/fish_test_helper /tmp/src/fish-4.0.2/build/test/buildroot//usr/bin && /usr/bin/cmake -E create_symlink /tmp/src/fish-4.0.2/build/test/buildroot//usr /tmp/src/fish-4.0.2/build/test/root
[1/2] Re-checking globbed directories...
[1/7] cd /tmp/src/fish-4.0.2 && /tmp/src/fish-4.0.2/build_tools/git_version_gen.sh /tmp/src/fish-4.0.2/build
[2/7] cd /tmp/src/fish-4.0.2 && /usr/bin/cmake -E env FISH_BUILD_DIR=/tmp/src/fish-4.0.2/build PREFIX=/usr CMAKE_WITH_GETTEXT=1 CMAKE=1 DOCDIR=/usr/share/doc/fish DATADIR=/usr/share SYSCONFDIR=/etc BINDIR=/usr/bin LOCALEDIR=/usr/share/locale CARGO_TARGET_DIR=/tmp/src/fish-4.0.2/build/cargo/build CARGO_BUILD_RUSTC=/usr/bin/rustc RUSTFLAGS=\ -Clink-arg=-Wl,-z,pack-relative-relocs\ -g /tmp/src/cargo build --bin fish  --profile=release-with-debug --target x86_64-alpine-linux-musl --no-default-features && /usr/bin/cmake -E copy /tmp/src/fish-4.0.2/build/cargo/build/x86_64-alpine-linux-musl/release-with-debug/fish /tmp/src/fish-4.0.2/build
warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1086 |   implement_acceptor_for_branch!(Redirection, (oper: TokenRedirection), (target: String_));
     |   ---------------------------------------------------------------------------------------- in this macro invocation
     |
     = note: `#[warn(unused_must_use)]` on by default
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1103 | / define_list_node!(
1104 | |     VariableAssignmentList,
1105 | |     variable_assignment_list,
1106 | |     VariableAssignment
1107 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1126 | / implement_acceptor_for_branch!(
1127 | |     ArgumentOrRedirection,
1128 | |     (contents: (Box<ArgumentOrRedirectionVariant>))
1129 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1147 | / define_list_node!(
1148 | |     ArgumentOrRedirectionList,
1149 | |     argument_or_redirection_list,
1150 | |     ArgumentOrRedirection
1151 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1170 |   implement_acceptor_for_branch!(Statement, (contents: (Box<StatementVariant>)));
     |   ------------------------------------------------------------------------------ in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1199 | / implement_acceptor_for_branch!(
1200 | |     JobPipeline,
1201 | |     (time: (Option<KeywordTime>)),
1202 | |     (variables: (VariableAssignmentList)),
...    |
1205 | |     (bg: (Option<TokenBackground>)),
1206 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1234 | / implement_acceptor_for_branch!(
1235 | |     JobConjunction,
1236 | |     (decorator: (Option<JobConjunctionDecorator>)),
1237 | |     (job: (JobPipeline)),
1238 | |     (continuations: (JobConjunctionContinuationList)),
1239 | |     (semi_nl: (Option<SemiNl>)),
1240 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1278 | / implement_acceptor_for_branch!(
1279 | |     ForHeader,
1280 | |     (kw_for: (KeywordFor)),
1281 | |     (var_name: (String_)),
...    |
1284 | |     (semi_nl: (SemiNl)),
1285 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1306 | / implement_acceptor_for_branch!(
1307 | |     WhileHeader,
1308 | |     (kw_while: (KeywordWhile)),
1309 | |     (condition: (JobConjunction)),
1310 | |     (andor_tail: (AndorJobList)),
1311 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1333 | / implement_acceptor_for_branch!(
1334 | |     FunctionHeader,
1335 | |     (kw_function: (KeywordFunction)),
1336 | |     (first_arg: (Argument)),
1337 | |     (args: (ArgumentList)),
1338 | |     (semi_nl: (SemiNl)),
1339 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1360 | / implement_acceptor_for_branch!(
1361 | |     BeginHeader,
1362 | |     (kw_begin: (KeywordBegin)),
1363 | |     (semi_nl: (Option<SemiNl>))
1364 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1389 | / implement_acceptor_for_branch!(
1390 | |     BlockStatement,
1391 | |     (header: (Box<BlockStatementHeaderVariant>)),
1392 | |     (jobs: (JobList)),
1393 | |     (end: (KeywordEnd)),
1394 | |     (args_or_redirs: (ArgumentOrRedirectionList)),
1395 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1420 | / implement_acceptor_for_branch!(
1421 | |     IfClause,
1422 | |     (kw_if: (KeywordIf)),
1423 | |     (condition: (JobConjunction)),
1424 | |     (andor_tail: (AndorJobList)),
1425 | |     (body: (JobList)),
1426 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1447 | / implement_acceptor_for_branch!(
1448 | |     ElseifClause,
1449 | |     (kw_else: (KeywordElse)),
1450 | |     (if_clause: (IfClause)),
1451 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1469 |   define_list_node!(ElseifClauseList, elseif_clause_list, ElseifClause);
     |   --------------------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1490 | / implement_acceptor_for_branch!(
1491 | |     ElseClause,
1492 | |     (kw_else: (KeywordElse)),
1493 | |     (semi_nl: (SemiNl)),
1494 | |     (body: (JobList)),
1495 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1527 | / implement_acceptor_for_branch!(
1528 | |     IfStatement,
1529 | |     (if_clause: (IfClause)),
1530 | |     (elseif_clauses: (ElseifClauseList)),
...    |
1533 | |     (args_or_redirs: (ArgumentOrRedirectionList)),
1534 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1556 | / implement_acceptor_for_branch!(
1557 | |     CaseItem,
1558 | |     (kw_case: (KeywordCase)),
1559 | |     (arguments: (ArgumentList)),
1560 | |     (semi_nl: (SemiNl)),
1561 | |     (body: (JobList)),
1562 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1591 | / implement_acceptor_for_branch!(
1592 | |     SwitchStatement,
1593 | |     (kw_switch: (KeywordSwitch)),
1594 | |     (argument: (Argument)),
...    |
1598 | |     (args_or_redirs: (ArgumentOrRedirectionList)),
1599 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1624 | / implement_acceptor_for_branch!(
1625 | |     DecoratedStatement,
1626 | |     (opt_decoration: (Option<DecoratedStatementDecorator>)),
1627 | |     (command: (String_)),
1628 | |     (args_or_redirs: (ArgumentOrRedirectionList)),
1629 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1652 | / implement_acceptor_for_branch!(
1653 | |     NotStatement,
1654 | |     (kw: (KeywordNot)),
1655 | |     (time: (Option<KeywordTime>)),
1656 | |     (variables: (VariableAssignmentList)),
1657 | |     (contents: (Statement)),
1658 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1679 | / implement_acceptor_for_branch!(
1680 | |     JobContinuation,
1681 | |     (pipe: (TokenPipe)),
1682 | |     (newlines: (MaybeNewlines)),
1683 | |     (variables: (VariableAssignmentList)),
1684 | |     (statement: (Statement)),
1685 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1702 |   define_list_node!(JobContinuationList, job_continuation_list, JobContinuation);
     |   ------------------------------------------------------------------------------ in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1728 | / implement_acceptor_for_branch!(
1729 | |     JobConjunctionContinuation,
1730 | |     (conjunction: (TokenConjunction)),
1731 | |     (newlines: (MaybeNewlines)),
1732 | |     (job: (JobPipeline)),
1733 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1760 |   implement_acceptor_for_branch!(AndorJob, (job: (JobConjunction)));
     |   ----------------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1784 |   define_list_node!(AndorJobList, andor_job_list, AndorJob);
     |   --------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1805 |   implement_acceptor_for_branch!(FreestandingArgumentList, (arguments: (ArgumentList)));
     |   ------------------------------------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1817 | / define_list_node!(
1818 | |     JobConjunctionContinuationList,
1819 | |     job_conjunction_continuation_list,
1820 | |     JobConjunctionContinuation
1821 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1835 |   define_list_node!(ArgumentList, argument_list, Argument);
     |   -------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1848 |   define_list_node!(JobList, job_list, JobConjunction);
     |   ---------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1860 |   define_list_node!(CaseItemList, case_item_list, CaseItem);
     |   --------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:3721:9
     |
3721 |         self.visit_mut(&mut *result);
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
help: use `let _ = ...` to ignore the resulting value
     |
3721 |         let _ = self.visit_mut(&mut *result);
     |         +++++++

warning: unused `ControlFlow` that must be used
   --> src/reader.rs:983:9
    |
983 |         data.handle_char_event(Some(ch));
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: use `let _ = ...` to ignore the resulting value
    |
983 |         let _ = data.handle_char_event(Some(ch));
    |         +++++++

warning: `fish` (lib) generated 33 warnings
warning: unused import: `wcs2osstring`
  --> src/bin/fish.rs:33:23
   |
33 |         str2wcstring, wcs2osstring, wcs2string, PACKAGE_NAME, PROFILING_ACTIVE, PROGRAM_NAME,
   |                       ^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: function `install` is never used
   --> src/bin/fish.rs:195:4
    |
195 | fn install(_confirm: bool, _dir: PathBuf) -> bool {
    |    ^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: `fish` (bin "fish") generated 2 warnings (run `cargo fix --bin "fish"` to apply 1 suggestion)
    Finished `release-with-debug` profile [optimized + debuginfo] target(s) in 0.03s
[4/7] cd /tmp/src/fish-4.0.2 && /usr/bin/cmake -E env FISH_BUILD_DIR=/tmp/src/fish-4.0.2/build PREFIX=/usr CMAKE_WITH_GETTEXT=1 CMAKE=1 DOCDIR=/usr/share/doc/fish DATADIR=/usr/share SYSCONFDIR=/etc BINDIR=/usr/bin LOCALEDIR=/usr/share/locale CARGO_TARGET_DIR=/tmp/src/fish-4.0.2/build/cargo/build CARGO_BUILD_RUSTC=/usr/bin/rustc RUSTFLAGS=\ -Clink-arg=-Wl,-z,pack-relative-relocs\ -g /tmp/src/cargo build --bin fish_key_reader  --profile=release-with-debug --target x86_64-alpine-linux-musl --no-default-features && /usr/bin/cmake -E copy /tmp/src/fish-4.0.2/build/cargo/build/x86_64-alpine-linux-musl/release-with-debug/fish_key_reader /tmp/src/fish-4.0.2/build
warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1086 |   implement_acceptor_for_branch!(Redirection, (oper: TokenRedirection), (target: String_));
     |   ---------------------------------------------------------------------------------------- in this macro invocation
     |
     = note: `#[warn(unused_must_use)]` on by default
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1103 | / define_list_node!(
1104 | |     VariableAssignmentList,
1105 | |     variable_assignment_list,
1106 | |     VariableAssignment
1107 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1126 | / implement_acceptor_for_branch!(
1127 | |     ArgumentOrRedirection,
1128 | |     (contents: (Box<ArgumentOrRedirectionVariant>))
1129 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1147 | / define_list_node!(
1148 | |     ArgumentOrRedirectionList,
1149 | |     argument_or_redirection_list,
1150 | |     ArgumentOrRedirection
1151 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1170 |   implement_acceptor_for_branch!(Statement, (contents: (Box<StatementVariant>)));
     |   ------------------------------------------------------------------------------ in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1199 | / implement_acceptor_for_branch!(
1200 | |     JobPipeline,
1201 | |     (time: (Option<KeywordTime>)),
1202 | |     (variables: (VariableAssignmentList)),
...    |
1205 | |     (bg: (Option<TokenBackground>)),
1206 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1234 | / implement_acceptor_for_branch!(
1235 | |     JobConjunction,
1236 | |     (decorator: (Option<JobConjunctionDecorator>)),
1237 | |     (job: (JobPipeline)),
1238 | |     (continuations: (JobConjunctionContinuationList)),
1239 | |     (semi_nl: (Option<SemiNl>)),
1240 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1278 | / implement_acceptor_for_branch!(
1279 | |     ForHeader,
1280 | |     (kw_for: (KeywordFor)),
1281 | |     (var_name: (String_)),
...    |
1284 | |     (semi_nl: (SemiNl)),
1285 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1306 | / implement_acceptor_for_branch!(
1307 | |     WhileHeader,
1308 | |     (kw_while: (KeywordWhile)),
1309 | |     (condition: (JobConjunction)),
1310 | |     (andor_tail: (AndorJobList)),
1311 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1333 | / implement_acceptor_for_branch!(
1334 | |     FunctionHeader,
1335 | |     (kw_function: (KeywordFunction)),
1336 | |     (first_arg: (Argument)),
1337 | |     (args: (ArgumentList)),
1338 | |     (semi_nl: (SemiNl)),
1339 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1360 | / implement_acceptor_for_branch!(
1361 | |     BeginHeader,
1362 | |     (kw_begin: (KeywordBegin)),
1363 | |     (semi_nl: (Option<SemiNl>))
1364 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1389 | / implement_acceptor_for_branch!(
1390 | |     BlockStatement,
1391 | |     (header: (Box<BlockStatementHeaderVariant>)),
1392 | |     (jobs: (JobList)),
1393 | |     (end: (KeywordEnd)),
1394 | |     (args_or_redirs: (ArgumentOrRedirectionList)),
1395 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1420 | / implement_acceptor_for_branch!(
1421 | |     IfClause,
1422 | |     (kw_if: (KeywordIf)),
1423 | |     (condition: (JobConjunction)),
1424 | |     (andor_tail: (AndorJobList)),
1425 | |     (body: (JobList)),
1426 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1447 | / implement_acceptor_for_branch!(
1448 | |     ElseifClause,
1449 | |     (kw_else: (KeywordElse)),
1450 | |     (if_clause: (IfClause)),
1451 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1469 |   define_list_node!(ElseifClauseList, elseif_clause_list, ElseifClause);
     |   --------------------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1490 | / implement_acceptor_for_branch!(
1491 | |     ElseClause,
1492 | |     (kw_else: (KeywordElse)),
1493 | |     (semi_nl: (SemiNl)),
1494 | |     (body: (JobList)),
1495 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1527 | / implement_acceptor_for_branch!(
1528 | |     IfStatement,
1529 | |     (if_clause: (IfClause)),
1530 | |     (elseif_clauses: (ElseifClauseList)),
...    |
1533 | |     (args_or_redirs: (ArgumentOrRedirectionList)),
1534 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1556 | / implement_acceptor_for_branch!(
1557 | |     CaseItem,
1558 | |     (kw_case: (KeywordCase)),
1559 | |     (arguments: (ArgumentList)),
1560 | |     (semi_nl: (SemiNl)),
1561 | |     (body: (JobList)),
1562 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1591 | / implement_acceptor_for_branch!(
1592 | |     SwitchStatement,
1593 | |     (kw_switch: (KeywordSwitch)),
1594 | |     (argument: (Argument)),
...    |
1598 | |     (args_or_redirs: (ArgumentOrRedirectionList)),
1599 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1624 | / implement_acceptor_for_branch!(
1625 | |     DecoratedStatement,
1626 | |     (opt_decoration: (Option<DecoratedStatementDecorator>)),
1627 | |     (command: (String_)),
1628 | |     (args_or_redirs: (ArgumentOrRedirectionList)),
1629 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1652 | / implement_acceptor_for_branch!(
1653 | |     NotStatement,
1654 | |     (kw: (KeywordNot)),
1655 | |     (time: (Option<KeywordTime>)),
1656 | |     (variables: (VariableAssignmentList)),
1657 | |     (contents: (Statement)),
1658 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1679 | / implement_acceptor_for_branch!(
1680 | |     JobContinuation,
1681 | |     (pipe: (TokenPipe)),
1682 | |     (newlines: (MaybeNewlines)),
1683 | |     (variables: (VariableAssignmentList)),
1684 | |     (statement: (Statement)),
1685 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1702 |   define_list_node!(JobContinuationList, job_continuation_list, JobContinuation);
     |   ------------------------------------------------------------------------------ in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1728 | / implement_acceptor_for_branch!(
1729 | |     JobConjunctionContinuation,
1730 | |     (conjunction: (TokenConjunction)),
1731 | |     (newlines: (MaybeNewlines)),
1732 | |     (job: (JobPipeline)),
1733 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1760 |   implement_acceptor_for_branch!(AndorJob, (job: (JobConjunction)));
     |   ----------------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1784 |   define_list_node!(AndorJobList, andor_job_list, AndorJob);
     |   --------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1805 |   implement_acceptor_for_branch!(FreestandingArgumentList, (arguments: (ArgumentList)));
     |   ------------------------------------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1817 | / define_list_node!(
1818 | |     JobConjunctionContinuationList,
1819 | |     job_conjunction_continuation_list,
1820 | |     JobConjunctionContinuation
1821 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1835 |   define_list_node!(ArgumentList, argument_list, Argument);
     |   -------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1848 |   define_list_node!(JobList, job_list, JobConjunction);
     |   ---------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1860 |   define_list_node!(CaseItemList, case_item_list, CaseItem);
     |   --------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:3721:9
     |
3721 |         self.visit_mut(&mut *result);
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
help: use `let _ = ...` to ignore the resulting value
     |
3721 |         let _ = self.visit_mut(&mut *result);
     |         +++++++

warning: unused `ControlFlow` that must be used
   --> src/reader.rs:983:9
    |
983 |         data.handle_char_event(Some(ch));
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: use `let _ = ...` to ignore the resulting value
    |
983 |         let _ = data.handle_char_event(Some(ch));
    |         +++++++

warning: `fish` (lib) generated 33 warnings
    Finished `release-with-debug` profile [optimized + debuginfo] target(s) in 0.03s
[5/7] cd /tmp/src/fish-4.0.2 && /usr/bin/cmake -E env FISH_BUILD_DIR=/tmp/src/fish-4.0.2/build PREFIX=/usr CMAKE_WITH_GETTEXT=1 CMAKE=1 DOCDIR=/usr/share/doc/fish DATADIR=/usr/share SYSCONFDIR=/etc BINDIR=/usr/bin LOCALEDIR=/usr/share/locale CARGO_TARGET_DIR=/tmp/src/fish-4.0.2/build/cargo/build CARGO_BUILD_RUSTC=/usr/bin/rustc RUSTFLAGS=\ -Clink-arg=-Wl,-z,pack-relative-relocs\ -g /tmp/src/cargo build --bin fish_indent  --profile=release-with-debug --target x86_64-alpine-linux-musl --no-default-features && /usr/bin/cmake -E copy /tmp/src/fish-4.0.2/build/cargo/build/x86_64-alpine-linux-musl/release-with-debug/fish_indent /tmp/src/fish-4.0.2/build
warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1086 |   implement_acceptor_for_branch!(Redirection, (oper: TokenRedirection), (target: String_));
     |   ---------------------------------------------------------------------------------------- in this macro invocation
     |
     = note: `#[warn(unused_must_use)]` on by default
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1103 | / define_list_node!(
1104 | |     VariableAssignmentList,
1105 | |     variable_assignment_list,
1106 | |     VariableAssignment
1107 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1126 | / implement_acceptor_for_branch!(
1127 | |     ArgumentOrRedirection,
1128 | |     (contents: (Box<ArgumentOrRedirectionVariant>))
1129 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1147 | / define_list_node!(
1148 | |     ArgumentOrRedirectionList,
1149 | |     argument_or_redirection_list,
1150 | |     ArgumentOrRedirection
1151 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1170 |   implement_acceptor_for_branch!(Statement, (contents: (Box<StatementVariant>)));
     |   ------------------------------------------------------------------------------ in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1199 | / implement_acceptor_for_branch!(
1200 | |     JobPipeline,
1201 | |     (time: (Option<KeywordTime>)),
1202 | |     (variables: (VariableAssignmentList)),
...    |
1205 | |     (bg: (Option<TokenBackground>)),
1206 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1234 | / implement_acceptor_for_branch!(
1235 | |     JobConjunction,
1236 | |     (decorator: (Option<JobConjunctionDecorator>)),
1237 | |     (job: (JobPipeline)),
1238 | |     (continuations: (JobConjunctionContinuationList)),
1239 | |     (semi_nl: (Option<SemiNl>)),
1240 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1278 | / implement_acceptor_for_branch!(
1279 | |     ForHeader,
1280 | |     (kw_for: (KeywordFor)),
1281 | |     (var_name: (String_)),
...    |
1284 | |     (semi_nl: (SemiNl)),
1285 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1306 | / implement_acceptor_for_branch!(
1307 | |     WhileHeader,
1308 | |     (kw_while: (KeywordWhile)),
1309 | |     (condition: (JobConjunction)),
1310 | |     (andor_tail: (AndorJobList)),
1311 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1333 | / implement_acceptor_for_branch!(
1334 | |     FunctionHeader,
1335 | |     (kw_function: (KeywordFunction)),
1336 | |     (first_arg: (Argument)),
1337 | |     (args: (ArgumentList)),
1338 | |     (semi_nl: (SemiNl)),
1339 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1360 | / implement_acceptor_for_branch!(
1361 | |     BeginHeader,
1362 | |     (kw_begin: (KeywordBegin)),
1363 | |     (semi_nl: (Option<SemiNl>))
1364 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1389 | / implement_acceptor_for_branch!(
1390 | |     BlockStatement,
1391 | |     (header: (Box<BlockStatementHeaderVariant>)),
1392 | |     (jobs: (JobList)),
1393 | |     (end: (KeywordEnd)),
1394 | |     (args_or_redirs: (ArgumentOrRedirectionList)),
1395 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1420 | / implement_acceptor_for_branch!(
1421 | |     IfClause,
1422 | |     (kw_if: (KeywordIf)),
1423 | |     (condition: (JobConjunction)),
1424 | |     (andor_tail: (AndorJobList)),
1425 | |     (body: (JobList)),
1426 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1447 | / implement_acceptor_for_branch!(
1448 | |     ElseifClause,
1449 | |     (kw_else: (KeywordElse)),
1450 | |     (if_clause: (IfClause)),
1451 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1469 |   define_list_node!(ElseifClauseList, elseif_clause_list, ElseifClause);
     |   --------------------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1490 | / implement_acceptor_for_branch!(
1491 | |     ElseClause,
1492 | |     (kw_else: (KeywordElse)),
1493 | |     (semi_nl: (SemiNl)),
1494 | |     (body: (JobList)),
1495 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1527 | / implement_acceptor_for_branch!(
1528 | |     IfStatement,
1529 | |     (if_clause: (IfClause)),
1530 | |     (elseif_clauses: (ElseifClauseList)),
...    |
1533 | |     (args_or_redirs: (ArgumentOrRedirectionList)),
1534 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1556 | / implement_acceptor_for_branch!(
1557 | |     CaseItem,
1558 | |     (kw_case: (KeywordCase)),
1559 | |     (arguments: (ArgumentList)),
1560 | |     (semi_nl: (SemiNl)),
1561 | |     (body: (JobList)),
1562 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1591 | / implement_acceptor_for_branch!(
1592 | |     SwitchStatement,
1593 | |     (kw_switch: (KeywordSwitch)),
1594 | |     (argument: (Argument)),
...    |
1598 | |     (args_or_redirs: (ArgumentOrRedirectionList)),
1599 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1624 | / implement_acceptor_for_branch!(
1625 | |     DecoratedStatement,
1626 | |     (opt_decoration: (Option<DecoratedStatementDecorator>)),
1627 | |     (command: (String_)),
1628 | |     (args_or_redirs: (ArgumentOrRedirectionList)),
1629 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1652 | / implement_acceptor_for_branch!(
1653 | |     NotStatement,
1654 | |     (kw: (KeywordNot)),
1655 | |     (time: (Option<KeywordTime>)),
1656 | |     (variables: (VariableAssignmentList)),
1657 | |     (contents: (Statement)),
1658 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1679 | / implement_acceptor_for_branch!(
1680 | |     JobContinuation,
1681 | |     (pipe: (TokenPipe)),
1682 | |     (newlines: (MaybeNewlines)),
1683 | |     (variables: (VariableAssignmentList)),
1684 | |     (statement: (Statement)),
1685 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1702 |   define_list_node!(JobContinuationList, job_continuation_list, JobContinuation);
     |   ------------------------------------------------------------------------------ in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1728 | / implement_acceptor_for_branch!(
1729 | |     JobConjunctionContinuation,
1730 | |     (conjunction: (TokenConjunction)),
1731 | |     (newlines: (MaybeNewlines)),
1732 | |     (job: (JobPipeline)),
1733 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1760 |   implement_acceptor_for_branch!(AndorJob, (job: (JobConjunction)));
     |   ----------------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1784 |   define_list_node!(AndorJobList, andor_job_list, AndorJob);
     |   --------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:793:9
     |
793  | /         loop {
794  | |             visitor_accept_field_impl!($visit, $self, $visitor, $reversed, $fields);
795  | |             break VisitResult::Continue(());
796  | |         }
     | |_________^
...
1805 |   implement_acceptor_for_branch!(FreestandingArgumentList, (arguments: (ArgumentList)));
     |   ------------------------------------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `visitor_accept_field` which comes from the expansion of the macro `implement_acceptor_for_branch` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
793  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1817 | / define_list_node!(
1818 | |     JobConjunctionContinuationList,
1819 | |     job_conjunction_continuation_list,
1820 | |     JobConjunctionContinuation
1821 | | );
     | |_- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1835 |   define_list_node!(ArgumentList, argument_list, Argument);
     |   -------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1848 |   define_list_node!(JobList, job_list, JobConjunction);
     |   ---------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:694:9
     |
694  | /         loop {
695  | |             let mut result = VisitResult::Continue(());
...    |
713  | |             break result;
714  | |         }
     | |_________^
...
1860 |   define_list_node!(CaseItemList, case_item_list, CaseItem);
     |   --------------------------------------------------------- in this macro invocation
     |
     = note: this warning originates in the macro `accept_list_visitor` which comes from the expansion of the macro `define_list_node` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use `let _ = ...` to ignore the resulting value
     |
694  |         let _ = loop {
     |         +++++++

warning: unused `ControlFlow` that must be used
    --> src/ast.rs:3721:9
     |
3721 |         self.visit_mut(&mut *result);
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
help: use `let _ = ...` to ignore the resulting value
     |
3721 |         let _ = self.visit_mut(&mut *result);
     |         +++++++

warning: unused `ControlFlow` that must be used
   --> src/reader.rs:983:9
    |
983 |         data.handle_char_event(Some(ch));
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: use `let _ = ...` to ignore the resulting value
    |
983 |         let _ = data.handle_char_event(Some(ch));
    |         +++++++

warning: `fish` (lib) generated 33 warnings
    Finished `release-with-debug` profile [optimized + debuginfo] target(s) in 0.03s
[6/7] Building HTML documentation with Sphinx
[7/7] Install the project...
-- Install configuration: "RelWithDebInfo"
[5/5] cd /tmp/src/fish-4.0.2/build && env FISH_FORCE_COLOR=1 FISH_SOURCE_DIR=/tmp/src/fish-4.0.2 /usr/bin/ctest --force-new-ctest-process --output-on-failure --progress
Test project /tmp/src/fish-4.0.2/build
        Start   1: abbr.fish
        Start   2: alias.fish
        Start   3: andandoror.fish
        Start   4: andor.fish
        Start   5: argparse.fish
        Start   6: bad-option.fish
        Start   7: basic.fish
        Start   8: bind.fish
        Start   9: braces.fish
        Start  10: broken-config.fish
        Start  11: buildinfo.fish
        Start  12: builtinbuiltin.fish
        Start  13: caller-exit.fish
        Start  14: caller-observer.fish
        Start  15: cd.fish
        Start  16: check-all-fish-files.fish
  1/188 Test   #6: bad-option.fish ..........................   Passed    0.06 sec
        Start  17: check-completions.fish
  2/188 Test  #11: buildinfo.fish ...........................   Passed    0.07 sec
        Start  18: check-translations.fish
  3/188 Test  #13: caller-exit.fish .........................   Passed    0.08 sec
        Start  19: cmdsub-limit.fish
  4/188 Test  #10: broken-config.fish .......................   Passed    0.09 sec
        Start  20: cmdsub.fish
  5/188 Test   #9: braces.fish ..............................   Passed    0.09 sec
        Start  21: colon-delimited-var.fish
  6/188 Test  #12: builtinbuiltin.fish ......................   Passed    0.09 sec
        Start  22: command-1.fish
  7/188 Test  #14: caller-observer.fish .....................   Passed    0.09 sec
        Start  23: command-2.fish
  8/188 Test   #5: argparse.fish ............................   Passed    0.09 sec
        Start  24: command-not-found.fish
  9/188 Test   #3: andandoror.fish ..........................   Passed    0.10 sec
        Start  25: command-vars-persist.fish
 10/188 Test   #1: abbr.fish ................................   Passed    0.11 sec
        Start  26: commandline.fish
 11/188 Test   #4: andor.fish ...............................   Passed    0.11 sec
        Start  27: complete-group-order.fish
 12/188 Test   #8: bind.fish ................................   Passed    0.12 sec
        Start  28: complete.fish
 13/188 Test  #21: colon-delimited-var.fish .................   Passed    0.06 sec
        Start  29: complete_directories.fish
 14/188 Test   #2: alias.fish ...............................   Passed    0.16 sec
        Start  30: completion-autoload-tombstone.fish
 15/188 Test  #27: complete-group-order.fish ................   Passed    0.06 sec
        Start  31: contains_opt.fish
 16/188 Test  #20: cmdsub.fish ..............................   Passed    0.08 sec
        Start  32: count.fish
 17/188 Test   #7: basic.fish ...............................   Passed    0.18 sec
        Start  33: create-base-directories.fish
 18/188 Test  #19: cmdsub-limit.fish ........................   Passed    0.10 sec
        Start  34: deep-cmdsub.fish
 19/188 Test  #22: command-1.fish ...........................   Passed    0.09 sec
        Start  35: default-setup-path.fish
 20/188 Test  #23: command-2.fish ...........................   Passed    0.09 sec
        Start  36: directory-redirect.fish
 21/188 Test  #24: command-not-found.fish ...................   Passed    0.10 sec
        Start  37: disown-parent.fish
 22/188 Test  #25: command-vars-persist.fish ................   Passed    0.09 sec
        Start  38: empty.fish
 23/188 Test  #26: commandline.fish .........................   Passed    0.10 sec
        Start  39: env.fish
 24/188 Test  #30: completion-autoload-tombstone.fish .......   Passed    0.06 sec
        Start  40: eval.fish
 25/188 Test  #29: complete_directories.fish ................   Passed    0.11 sec
        Start  41: exec.fish
 26/188 Test  #32: count.fish ...............................   Passed    0.10 sec
        Start  42: exit-status-with-closing-stderr.fish
 27/188 Test  #31: contains_opt.fish ........................   Passed    0.10 sec
        Start  43: expansion.fish
 28/188 Test  #39: env.fish .................................   Passed    0.07 sec
        Start  44: fds.fish
 29/188 Test  #35: default-setup-path.fish ..................   Passed    0.09 sec
        Start  45: features-ampersand-nobg-in-token1.fish
 30/188 Test  #36: directory-redirect.fish ..................   Passed    0.09 sec
        Start  46: features-nocaret1.fish
 31/188 Test  #33: create-base-directories.fish .............   Passed    0.10 sec
        Start  47: features-nocaret2.fish
 32/188 Test  #38: empty.fish ...............................   Passed    0.10 sec
        Start  48: features-nocaret3.fish
 33/188 Test  #34: deep-cmdsub.fish .........................   Passed    0.12 sec
        Start  49: features-nocaret4.fish
 34/188 Test  #28: complete.fish ............................   Passed    0.19 sec
        Start  50: features-percent-self1.fish
 35/188 Test  #40: eval.fish ................................   Passed    0.11 sec
        Start  51: features-percent-self2.fish
 36/188 Test  #41: exec.fish ................................   Passed    0.07 sec
 37/188 Test  #42: exit-status-with-closing-stderr.fish .....   Passed    0.07 sec
        Start  52: features-qmark1.fish
        Start  53: features-qmark2.fish
 38/188 Test  #44: fds.fish .................................   Passed    0.08 sec
        Start  54: features-string-backslashes-off.fish
 39/188 Test  #45: features-ampersand-nobg-in-token1.fish ...   Passed    0.08 sec
        Start  55: features-string-backslashes.fish
 40/188 Test  #47: features-nocaret2.fish ...................   Passed    0.08 sec
        Start  56: fish_add_path.fish
 41/188 Test  #46: features-nocaret1.fish ...................   Passed    0.10 sec
        Start  57: fish_exit.fish
 42/188 Test  #43: expansion.fish ...........................   Passed    0.12 sec
        Start  58: fish_user_paths.fish
 43/188 Test  #48: features-nocaret3.fish ...................   Passed    0.10 sec
        Start  59: for.fish
 44/188 Test  #53: features-qmark2.fish .....................   Passed    0.07 sec
        Start  60: function-definition.fish
 45/188 Test  #51: features-percent-self2.fish ..............   Passed    0.07 sec
        Start  61: function.fish
 46/188 Test  #49: features-nocaret4.fish ...................   Passed    0.10 sec
        Start  62: functions.fish
 47/188 Test  #50: features-percent-self1.fish ..............   Passed    0.10 sec
        Start  63: git.fish
 48/188 Test  #55: features-string-backslashes.fish .........   Passed    0.07 sec
        Start  64: glob.fish
 49/188 Test  #52: features-qmark1.fish .....................   Passed    0.09 sec
        Start  65: history.fish
 50/188 Test  #54: features-string-backslashes-off.fish .....   Passed    0.10 sec
        Start  66: indent.fish
 51/188 Test  #56: fish_add_path.fish .......................   Passed    0.09 sec
        Start  67: init-command-2.fish
 52/188 Test  #57: fish_exit.fish ...........................   Passed    0.10 sec
        Start  68: init-command-mix-ordering.fish
 53/188 Test  #58: fish_user_paths.fish .....................   Passed    0.10 sec
        Start  69: init-command-mix.fish
 54/188 Test  #61: function.fish ............................   Passed    0.09 sec
        Start  70: init-command.fish
 55/188 Test  #59: for.fish .................................   Passed    0.10 sec
        Start  71: init-unreadable-cwd.fish
 56/188 Test  #60: function-definition.fish .................   Passed    0.10 sec
        Start  72: invocation.fish
 57/188 Test  #64: glob.fish ................................   Passed    0.09 sec
        Start  73: job-control-noninteractive.fish
 58/188 Test  #65: history.fish .............................   Passed    0.09 sec
        Start  74: job-control-not-a-tty.fish
 59/188 Test  #62: functions.fish ...........................   Passed    0.12 sec
        Start  75: job-ids.fish
 60/188 Test  #67: init-command-2.fish ......................   Passed    0.10 sec
        Start  76: jobs-are-escaped.fish
 61/188 Test  #69: init-command-mix.fish ....................   Passed    0.08 sec
        Start  77: jobs.fish
 62/188 Test  #68: init-command-mix-ordering.fish ...........   Passed    0.10 sec
        Start  78: line-continuation.fish
 63/188 Test  #74: job-control-not-a-tty.fish ...............   Passed    0.07 sec
        Start  79: line-number.fish
 64/188 Test  #70: init-command.fish ........................   Passed    0.10 sec
        Start  80: locale-numeric.fish
 65/188 Test  #71: init-unreadable-cwd.fish .................   Passed    0.10 sec
 66/188 Test  #75: job-ids.fish .............................   Passed    0.07 sec
        Start  81: locale.fish
        Start  82: loops.fish
 67/188 Test  #73: job-control-noninteractive.fish ..........   Passed    0.10 sec
        Start  83: math.fish
 68/188 Test  #66: indent.fish ..............................   Passed    0.20 sec
        Start  84: no-config.fish
 69/188 Test  #72: invocation.fish ..........................   Passed    0.14 sec
        Start  85: no-execute.fish
 70/188 Test  #76: jobs-are-escaped.fish ....................   Passed    0.10 sec
        Start  86: noshebang.fish
 71/188 Test  #80: locale-numeric.fish ......................***Skipped   0.06 sec
        Start  87: not.fish
 72/188 Test  #78: line-continuation.fish ...................   Passed    0.10 sec
 73/188 Test  #79: line-number.fish .........................   Passed    0.10 sec
        Start  88: nuls.fish
        Start  89: path.fish
 74/188 Test  #81: locale.fish ..............................   Passed    0.09 sec
        Start  90: pipeline-pgroup.fish
 75/188 Test  #83: math.fish ................................   Passed    0.08 sec
        Start  91: pipestatus.fish
 76/188 Test  #82: loops.fish ...............................   Passed    0.10 sec
        Start  92: print-help.fish
 77/188 Test  #84: no-config.fish ...........................   Passed    0.06 sec
        Start  93: printf.fish
 78/188 Test  #17: check-completions.fish ...................   Passed    0.65 sec
        Start  94: prompt.fish
 79/188 Test  #85: no-execute.fish ..........................   Passed    0.08 sec
        Start  95: psub.fish
 80/188 Test  #87: not.fish .................................   Passed    0.10 sec
        Start  96: random.fish
 81/188 Test  #91: pipestatus.fish ..........................   Passed    0.07 sec
        Start  97: rc-returned.fish
 82/188 Test  #94: prompt.fish ..............................   Passed    0.06 sec
        Start  98: read.fish
 83/188 Test  #88: nuls.fish ................................   Passed    0.09 sec
        Start  99: realpath.fish
 84/188 Test  #37: disown-parent.fish .......................   Passed    0.60 sec
        Start 100: redirect.fish
 85/188 Test  #92: print-help.fish ..........................***Skipped   0.09 sec
        Start 101: regex-import.fish
 86/188 Test  #90: pipeline-pgroup.fish .....................   Passed    0.11 sec
        Start 102: return.fish
 87/188 Test  #93: printf.fish ..............................   Passed    0.10 sec
        Start 103: scoping.fish
 88/188 Test  #97: rc-returned.fish .........................   Passed    0.08 sec
        Start 104: self-signal-usr1.fish
 89/188 Test  #99: realpath.fish ............................   Passed    0.08 sec
        Start 105: set.fish
 90/188 Test  #95: psub.fish ................................   Passed    0.13 sec
        Start 106: setenv.fish
 91/188 Test #101: regex-import.fish ........................   Passed    0.07 sec
        Start 107: sigint.fish
 92/188 Test  #96: random.fish ..............................   Passed    0.11 sec
        Start 108: sigint2.fish
 93/188 Test #103: scoping.fish .............................   Passed    0.07 sec
        Start 109: signal.fish
 94/188 Test #100: redirect.fish ............................   Passed    0.12 sec
        Start 110: slices.fish
 95/188 Test #104: self-signal-usr1.fish ....................   Passed    0.07 sec
        Start 111: source.fish
 96/188 Test #102: return.fish ..............................   Passed    0.12 sec
        Start 112: stack-overflow.fish
 97/188 Test #106: setenv.fish ..............................   Passed    0.07 sec
        Start 113: status-command.fish
 98/188 Test  #98: read.fish ................................   Passed    0.16 sec
        Start 114: status-value.fish
 99/188 Test #109: signal.fish ..............................   Passed    0.09 sec
        Start 115: status.fish
100/188 Test #111: source.fish ..............................   Passed    0.06 sec
        Start 116: string-advanced.fish
101/188 Test #112: stack-overflow.fish ......................   Passed    0.07 sec
        Start 117: string.fish
102/188 Test #113: status-command.fish ......................   Passed    0.07 sec
        Start 118: switch.fish
103/188 Test #110: slices.fish ..............................   Passed    0.10 sec
        Start 119: symlinks-not-overwritten.fish
104/188 Test #114: status-value.fish ........................   Passed    0.08 sec
        Start 120: syntax-error-location.fish
105/188 Test  #15: cd.fish ..................................   Passed    1.02 sec
        Start 121: test-posix.fish
106/188 Test #115: status.fish ..............................   Passed    0.07 sec
        Start 122: test.fish
107/188 Test #116: string-advanced.fish .....................   Passed    0.09 sec
        Start 123: threads.fish
108/188 Test  #63: git.fish .................................   Passed    0.66 sec
        Start 124: time.fish
109/188 Test #119: symlinks-not-overwritten.fish ............   Passed    0.07 sec
        Start 125: tmux-abbr.fish
110/188 Test #121: test-posix.fish ..........................   Passed    0.06 sec
        Start 126: tmux-autosuggestion.fish
111/188 Test #118: switch.fish ..............................   Passed    0.09 sec
        Start 127: tmux-bind.fish
112/188 Test #122: test.fish ................................   Passed    0.07 sec
        Start 128: tmux-bind2.fish
113/188 Test #105: set.fish .................................   Passed    0.26 sec
        Start 129: tmux-commandline.fish
114/188 Test  #18: check-translations.fish ..................   Passed    1.04 sec
        Start 130: tmux-complete.fish
115/188 Test #120: syntax-error-location.fish ...............   Passed    0.13 sec
116/188 Test #126: tmux-autosuggestion.fish .................***Skipped   0.06 sec
        Start 131: tmux-complete2.fish
        Start 132: tmux-history-search.fish
117/188 Test #127: tmux-bind.fish ...........................***Skipped   0.06 sec
        Start 133: tmux-job.fish
118/188 Test #125: tmux-abbr.fish ...........................***Skipped   0.06 sec
        Start 134: tmux-multiline-prompt.fish
119/188 Test #124: time.fish ................................   Passed    0.11 sec
        Start 135: tmux-prompt.fish
120/188 Test #130: tmux-complete.fish .......................***Skipped   0.06 sec
        Start 136: tmux-signal.fish
121/188 Test #128: tmux-bind2.fish ..........................***Skipped   0.09 sec
        Start 137: tmux-transient.fish
122/188 Test #134: tmux-multiline-prompt.fish ...............***Skipped   0.05 sec
        Start 138: trace.fish
123/188 Test #129: tmux-commandline.fish ....................***Skipped   0.09 sec
        Start 139: trap.fish
124/188 Test #131: tmux-complete2.fish ......................***Skipped   0.06 sec
        Start 140: trap_print.fish
125/188 Test #107: sigint.fish ..............................   Passed    0.35 sec
        Start 141: type.fish
126/188 Test #108: sigint2.fish .............................   Passed    0.35 sec
        Start 142: ulimit.fish
127/188 Test #123: threads.fish .............................   Passed    0.16 sec
        Start 143: umask.fish
128/188 Test #133: tmux-job.fish ............................***Skipped   0.09 sec
        Start 144: variable-assignment.fish
129/188 Test #135: tmux-prompt.fish .........................***Skipped   0.06 sec
        Start 145: vars_as_commands.fish
130/188 Test #132: tmux-history-search.fish .................***Skipped   0.09 sec
        Start 146: version.fish
131/188 Test #136: tmux-signal.fish .........................***Skipped   0.07 sec
        Start 147: wait.fish
132/188 Test #140: trap_print.fish ..........................   Passed    0.07 sec
        Start 148: wildcard.fish
133/188 Test #138: trace.fish ...............................   Passed    0.08 sec
        Start 149: wraps.fish
134/188 Test #137: tmux-transient.fish ......................***Skipped   0.09 sec
        Start 150: zero_based_array.fish
135/188 Test #145: vars_as_commands.fish ....................   Passed    0.07 sec
        Start 151: abbrs.py
136/188 Test #142: ulimit.fish ..............................   Passed    0.09 sec
        Start 152: bind.py
137/188 Test #141: type.fish ................................   Passed    0.10 sec
        Start 153: bind_mode_events.py
138/188 Test #144: variable-assignment.fish .................   Passed    0.09 sec
        Start 154: cancel_event.py
139/188 Test #146: version.fish .............................   Passed    0.09 sec
        Start 155: commandline.py
140/188 Test #149: wraps.fish ...............................   Passed    0.06 sec
        Start 156: complete-group-order.py
141/188 Test #150: zero_based_array.fish ....................   Passed    0.06 sec
        Start 157: complete.py
142/188 Test #143: umask.fish ...............................   Passed    0.13 sec
        Start 158: cursor_selection.py
143/188 Test #148: wildcard.fish ............................   Passed    0.10 sec
        Start 159: disable_mouse.py
144/188 Test #152: bind.py ..................................   Passed    0.14 sec
        Start 160: eval-stack-overflow.py
145/188 Test #155: commandline.py ...........................   Passed    0.13 sec
        Start 161: exit.py
146/188 Test  #86: noshebang.fish ...........................   Passed    0.82 sec
        Start 162: exit_handlers.py
147/188 Test #117: string.fish ..............................   Passed    0.54 sec
        Start 163: exit_nohang.py
148/188 Test #156: complete-group-order.py ..................   Passed    0.24 sec
        Start 164: fg.py
149/188 Test #154: cancel_event.py ..........................   Passed    0.28 sec
        Start 165: fkr.py
150/188 Test #158: cursor_selection.py ......................   Passed    0.29 sec
        Start 166: generic.py
151/188 Test  #16: check-all-fish-files.fish ................   Passed    1.67 sec
        Start 167: histfile.py
152/188 Test #161: exit.py ..................................   Passed    0.25 sec
        Start 168: history.py
153/188 Test #151: abbrs.py .................................   Passed    0.40 sec
        Start 169: isatty.py
154/188 Test #165: fkr.py ...................................   Passed    0.11 sec
        Start 170: job_summary.py
155/188 Test #160: eval-stack-overflow.py ...................   Passed    0.28 sec
        Start 171: nullterm.py
156/188 Test #162: exit_handlers.py .........................   Passed    0.27 sec
        Start 172: pipeline.py
157/188 Test #166: generic.py ...............................   Passed    0.25 sec
        Start 173: postexec.py
158/188 Test #171: nullterm.py ..............................   Passed    0.23 sec
        Start 174: private_mode.py
159/188 Test #169: isatty.py ................................   Passed    0.27 sec
        Start 175: prompt_redraw_loop.py
160/188 Test #168: history.py ...............................   Passed    0.33 sec
        Start 176: read.py
161/188 Test #167: histfile.py ..............................   Passed    0.38 sec
        Start 177: set_color.py
162/188 Test #159: disable_mouse.py .........................   Passed    0.76 sec
        Start 178: sigint.py
163/188 Test #173: postexec.py ..............................   Passed    0.27 sec
        Start 179: signals.py
164/188 Test #157: complete.py ..............................   Passed    0.83 sec
        Start 180: status.py
165/188 Test #175: prompt_redraw_loop.py ....................   Passed    0.23 sec
        Start 181: stdin_nonblocking.py
166/188 Test #177: set_color.py .............................   Passed    0.23 sec
        Start 182: terminal.py
167/188 Test #176: read.py ..................................   Passed    0.31 sec
        Start 183: torn_escapes.py
168/188 Test #139: trap.fish ................................   Passed    1.17 sec
        Start 184: tty_ownership.py
169/188 Test #180: status.py ................................   Passed    0.23 sec
        Start 185: undo.py
170/188 Test #170: job_summary.py ...........................   Passed    0.85 sec
        Start 186: wait.py
171/188 Test #184: tty_ownership.py .........................   Passed    0.23 sec
        Start 187: wildcard_tab.py
172/188 Test #185: undo.py ..................................   Passed    0.22 sec
        Start 188: cargo-test
173/188 Test #181: stdin_nonblocking.py .....................   Passed    0.43 sec
174/188 Test #178: sigint.py ................................   Passed    0.53 sec
175/188 Test  #89: path.fish ................................   Passed    2.08 sec
176/188 Test #163: exit_nohang.py ...........................   Passed    1.36 sec
177/188 Test #174: private_mode.py ..........................   Passed    1.18 sec
178/188 Test #183: torn_escapes.py ..........................   Passed    1.49 sec
179/188 Test #147: wait.fish ................................   Passed    2.70 sec
180/188 Test #187: wildcard_tab.py ..........................   Passed    1.94 sec
181/188 Test #172: pipeline.py ..............................   Passed    2.81 sec
182/188 Test #186: wait.py ..................................   Passed    3.09 sec
183/188 Test  #77: jobs.fish ................................   Passed    5.39 sec
184/188 Test #182: terminal.py ..............................   Passed    4.29 sec
185/188 Test #164: fg.py ....................................   Passed    5.20 sec
186/188 Test #179: signals.py ...............................   Passed   12.60 sec
187/188 Test #153: bind_mode_events.py ......................   Passed   40.27 sec
188/188 Test #188: cargo-test ...............................   Passed   47.70 sec

100% tests passed, 0 tests failed out of 188

Total Test time (real) =  50.32 sec

The following tests did not run:
	 80 - locale-numeric.fish (Skipped)
	 92 - print-help.fish (Skipped)
	125 - tmux-abbr.fish (Skipped)
	126 - tmux-autosuggestion.fish (Skipped)
	127 - tmux-bind.fish (Skipped)
	128 - tmux-bind2.fish (Skipped)
	129 - tmux-commandline.fish (Skipped)
	130 - tmux-complete.fish (Skipped)
	131 - tmux-complete2.fish (Skipped)
	132 - tmux-history-search.fish (Skipped)
	133 - tmux-job.fish (Skipped)
	134 - tmux-multiline-prompt.fish (Skipped)
	135 - tmux-prompt.fish (Skipped)
	136 - tmux-signal.fish (Skipped)
	137 - tmux-transient.fish (Skipped)
>>> fish: Entering fakeroot...
-- Install configuration: "RelWithDebInfo"
>>> fish-dev*: Running split function dev...
'usr/lib/pkgconfig' -> '/tmp/pkg/fish-dev/usr/lib/pkgconfig'
>>> fish-dev*: Preparing subpackage fish-dev...
>>> fish-dev*: Stripping binaries
>>> fish-dev*: Running postcheck for fish-dev
>>> fish-doc*: Running split function doc...
'usr/share/doc' -> '/tmp/pkg/fish-doc/usr/share/doc'
'usr/share/man' -> '/tmp/pkg/fish-doc/usr/share/man'
'usr/share/fish/man' -> '/tmp/pkg/fish-doc/usr/share/fish/man'
>>> fish-doc*: Preparing subpackage fish-doc...
>>> fish-doc*: Running postcheck for fish-doc
>>> fish-tools*: Running split function tools...
'usr/share/fish/tools' -> '/tmp/pkg/fish-tools/usr/share/fish/tools'
>>> fish-tools*: Preparing subpackage fish-tools...
>>> fish-tools*: Running postcheck for fish-tools
>>> fish-lang*: Running split function lang...
'usr/share/locale' -> '/tmp/pkg/fish-lang/usr/share/locale'
>>> fish-lang*: Preparing subpackage fish-lang...
>>> fish-lang*: Running postcheck for fish-lang
>>> fish*: Running postcheck for fish
>>> WARNING: fish*: Found /usr/share/fish/completions
             fish completions for programs should be located in /usr/share/fish/vendor_completions.d
>>> WARNING: fish*: Found /usr/share/fish/completions
             Add $pkgname-fish-completion to subpackages
>>> fish*: Preparing package fish...
>>> fish*: Stripping binaries
>>> fish*: Script found. /bin/sh added as a dependency for fish-4.0.2-r0.apk
>>> fish*: Adding .post-install
>>> fish*: Adding .post-upgrade
>>> fish*: Adding .pre-deinstall
>>> fish-dev*: Scanning shared objects
>>> fish-doc*: Scanning shared objects
>>> fish-lang*: Scanning shared objects
>>> fish-tools*: Scanning shared objects
>>> fish*: Scanning shared objects
>>> fish-dev*: Tracing dependencies...
	fish-tools
	pkgconfig
>>> fish-dev*: Package size: 279.0 B
>>> fish-dev*: Compressing data...
>>> fish-dev*: Create checksum...
>>> fish-dev*: Create fish-dev-4.0.2-r0.apk
>>> WARNING: fish-doc*: The -doc subpackage is unusually large, consider splitting it
>>> fish-doc*: Tracing dependencies...
>>> fish-doc*: Package size: 6.5 MB
>>> fish-doc*: Compressing data...
>>> fish-doc*: Create checksum...
>>> fish-doc*: Create fish-doc-4.0.2-r0.apk
>>> fish-lang*: Tracing dependencies...
>>> fish-lang*: Package size: 1.3 MB
>>> fish-lang*: Compressing data...
>>> fish-lang*: Create checksum...
>>> fish-lang*: Create fish-lang-4.0.2-r0.apk
>>> fish-tools*: Tracing dependencies...
	fish
	python3
	cmd:man
>>> fish-tools*: Package size: 278.8 KB
>>> fish-tools*: Compressing data...
>>> fish-tools*: Create checksum...
>>> fish-tools*: Create fish-tools-4.0.2-r0.apk
>>> fish*: Tracing dependencies...
	ncurses-terminfo
	/bin/sh
	so:libc.musl-x86_64.so.1
	so:libgcc_s.so.1
	so:libintl.so.8
>>> fish*: Package size: 10.5 MB
>>> fish*: Compressing data...
>>> fish*: Create checksum...
>>> fish*: Create fish-4.0.2-r0.apk
>>> fish: Updating the main/x86_64 repository index...
>>> fish: Signing the index...
>>> fish: Cleaning up srcdir
>>> fish: Cleaning up build chroot
>>> fish: Cleaning up pkgdir
