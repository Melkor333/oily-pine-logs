pigz: not found
>>> ruby-net-imap: Building main/ruby-net-imap 0.5.8-r0 (using abuild 3.14.1-r4) started Fri, 23 May 2025 03:27:37 +0000
>>> ruby-net-imap: Validating /home/packager/aports/main/ruby-net-imap/APKBUILD...
>>> ruby-net-imap: Analyzing dependencies...
>>> ruby-net-imap: Installing for build: build-base ruby ruby-rdoc ruby-base64 ruby-rake ruby-test-unit ruby-test-unit-ruby-core
(1/13) Installing ca-certificates (20241121-r2)
(2/13) Installing libffi (3.4.7-r0)
(3/13) Installing yaml (0.2.5-r2)
(4/13) Installing ruby-libs (3.3.8-r0)
(5/13) Installing libucontext (1.3.2-r0)
(6/13) Installing ruby (3.3.8-r0)
(7/13) Installing ruby-rdoc (3.3.8-r0)
(8/13) Installing ruby-base64 (0.2.0-r1)
(9/13) Installing ruby-rake (13.2.1-r1)
(10/13) Installing ruby-power_assert (2.0.5-r0)
(11/13) Installing ruby-test-unit (3.6.8-r0)
(12/13) Installing ruby-test-unit-ruby-core (1.0.6-r0)
(13/13) Installing .makedepends-ruby-net-imap (20250523.032738)
Executing ca-certificates-20241121-r2.trigger
Executing busybox-1.37.0-r12.trigger
OK: 332 MiB in 127 packages
>>> ruby-net-imap: Cleaning up srcdir
>>> ruby-net-imap: Cleaning up pkgdir
>>> ruby-net-imap: Cleaning up tmpdir
>>> ruby-net-imap: Fetching https://github.com/ruby/net-imap/archive/v0.5.8/net-imap-0.5.8.tar.gz
Connecting to github.com (140.82.121.3:443)
Connecting to codeload.github.com (140.82.121.10:443)
saving to '/var/cache/distfiles/net-imap-0.5.8.tar.gz.part'
net-imap-0.5.8.tar.g 100% |********************************|  292k  0:00:00 ETA
'/var/cache/distfiles/net-imap-0.5.8.tar.gz.part' saved
>>> ruby-net-imap: Fetching https://github.com/ruby/net-imap/archive/v0.5.8/net-imap-0.5.8.tar.gz
>>> ruby-net-imap: Checking sha512sums...
net-imap-0.5.8.tar.gz: OK
gemspec.patch: OK
no-simplecov.patch: OK
>>> ruby-net-imap: Unpacking /var/cache/distfiles/net-imap-0.5.8.tar.gz...
>>> ruby-net-imap: gemspec.patch
patching file net-imap.gemspec
>>> ruby-net-imap: no-simplecov.patch
patching file test/lib/helper.rb
WARNING:  description and summary are identical
WARNING:  open-ended dependency on net-protocol (>= 0) is not recommended
  use a bounded requirement, such as "~> x.y"
WARNING:  open-ended dependency on date (>= 0) is not recommended
  use a bounded requirement, such as "~> x.y"
WARNING:  You have specified the uri:
  https://github.com/ruby/net-imap
for all of the following keys:
  homepage_uri
  source_code_uri
Only the first one will be shown on rubygems.org
WARNING:  See https://guides.rubygems.org/specification-reference/ for help
  Successfully built RubyGem
  Name: net-imap
  Version: 0.5.8
  File: net-imap-0.5.8.gem
Loaded suite /usr/lib/ruby/gems/3.3.0/gems/rake-13.2.1/lib/rake/rake_test_loader
Started
ConfigTest: 
  test: #clone:							.: (0.000555)
  test: #debug:							.: (0.000307)
  test: #dup:							.: (0.000178)
  test: #freeze:						.: (0.000174)
  test: #inherited? and #reset(attr):				.: (0.000317)
  test: #load_defaults:						.: (0.000704)
  test: #max_response_size=(Integer | nil):			.: (0.000214)
  test: #new and inheritance:					.: (0.000277)
  test: #reset all attributes:					.: (0.000172)
  test: #to_h:							.: (0.000206)
  test: #update:						.: (0.000140)
  test: #update with invalid key name:				.: (0.000185)
  test: #update with invalid value:				.: (0.000196)
  test: #with:							.: (0.000321)
  test: .[] for all version_defaults:				.: (0.000314)
  test: .[] for all x.y versions:				.: (0.000370)
  test: .[] key errors:						.: (0.000225)
  test: .[] range errors:					.: (0.000398)
  test: .[] with a hash:					.: (0.000202)
  test: .[] with object responding to to_sym, to_r, or to_f:	.: (0.000291)
  test: .[] with string names:					.: (0.000175)
  test: .[] with symbol names:					.: (0.000202)
  test: .default:						.: (0.000125)
  test: .global:						.: (0.000175)
  test: .new always sets a parent:				.: (0.000265)
  test: .new(parent, ...) and inheritance:			.: (0.000296)
  test: .version_defaults are all frozen, and inherit debug from global:.: (0.023853)
  test: Config[:default] and Config[:current] both hold default config:	.: (0.000275)
  test: Net::IMAP.config:					.: (0.000125)
  test: boolean type constraints and conversion:		.: (0.000165)
  test: enum type constraint:					.: (0.000388)
  test: integer type constraints and conversion:		.: (0.000238)
ConnectionStateTest: 
  test: #authenticated?:					.: (0.000332)
  test: #deconstruct:						.: (0.000169)
  test: #deconstruct_keys:					.: (0.000250)
  test: #logout?:						.: (0.000159)
  test: #name:							.: (0.000178)
  test: #not_authenticated?:					.: (0.000171)
  test: #selected?:						.: (0.000172)
  test: #to_sym:						.: (0.000177)
DeprecatedClientOptionsTest: 
  InitializeTests: 
    test: Convert deprecated usessl (= false) with warning:	.: (0.054973)
    test: Convert deprecated usessl (= true) and certs, with warning:	.: (0.157729)
    test: Convert deprecated usessl (= true) and verify (= false), with warning:.: (0.143939)
    test: Convert obsolete options hash to keywords:		.: (0.059500)
    test: Convert obsolete port argument to :port keyword:	.: (0.051289)
    test: combined options hash and keyword args raises ArgumentError:	.: (0.012052)
    test: combined options hash and ssl args raises ArgumentError:	.: (0.019479)
  StartTLSTests: 
    test: Convert deprecated certs, verify with warning:	.: (0.051942)
    test: Convert obsolete options hash to keywords:		.: (0.080420)
    test: combined options hash and keyword args raises ArgumentError:	.: (0.018845)
    test: combined options hash and ssl args raises ArgumentError:	.: (0.032550)
ESearchResultTest: 
  test: #data.assoc('UNKNOWN') returns ExtensionData value:	.: (0.001346)
  test: #partial returns PARTIAL value (RFC9394: PARTIAL):	.: (0.000586)
  test: #tag:							.: (0.000172)
  test: #to_a:							.: (0.000391)
  test: #uid:							.: (0.000204)
  test: simple RFC4731 and RFC9051 return data accessors:	.: (0.000557)
FetchDataTest: 
  test: #binary(1, 2, 3, offset: 1) returns the BINARY[1.2.3]<1> attr:	.: (0.000329)
  test: #binary_size(1, 2, 3) returns the BINARY.SIZE[1.2.3] attr:	.: (0.000165)
  test: #emailid returns EMAILID value (RFC8474: OBJECTID):	.: (0.000108)
  test: #header returns the BODY[HEADER] attr:			.: (0.000119)
  test: #header(1, 2, 3) returns the BODY[1.2.3.HEADER] attr:	.: (0.000117)
  test: #header(1, 2, oFfset: 456) returns the BODY[1.2.HEADER]<456> attr:	.: (0.000116)
  test: #header_fields(*) => BODY[HEADER.FIELDS (*)] attr:	.: (0.000161)
  test: #header_fields(*, offset:) => BODY[part.HEADER.FIELDS (*)]<offset>:	.: (0.000165)
  test: #header_fields(*, part:) => BODY[part.HEADER.FIELDS (*)] attr:	.: (0.000235)
  test: #header_fields_not(*) => BODY[HEADER.FIELDS.NOT (*)] attr:	.: (0.000156)
  test: #header_fields_not(*, offset:) => BODY[part.HEADER.FIELDS.NOT (*)]<offset>:	.: (0.000163)
  test: #header_fields_not(*, part:) => BODY[part.HEADER.FIELDS.NOT (*)] attr:	.: (0.000234)
  test: #internaldate parses a datetime value:			.: (0.001165)
  test: #message returns the BODY[] attr:			.: (0.000141)
  test: #message(offset:) returns the BODY[]<offset> attr:	.: (0.000115)
  test: #mime(1, 2, 3) returns the BODY[1.2.3.MIME] attr:	.: (0.000130)
  test: #mime(1, 2, oFfset: 456) returns the BODY[1.2.MIME]<456> attr:	.: (0.000120)
  test: #modseq returns MODSEQ value (RFC7162: CONDSTORE):	.: (0.000108)
  test: #part(1, 2, 3) returns the BODY[1.2.3] attr:		.: (0.000363)
  test: #part(1, 2, oFfset: 456) returns the BODY[1.2]<456> attr:	.: (0.000119)
  test: #seqno:							.: (0.000111)
  test: #text returns the BODY[TEXT] attr:			.: (0.000112)
  test: #text(1, 2, 3) returns the BODY[1.2.3.TEXT] attr:	.: (0.000118)
  test: #text(1, 2, 3, oFfset: 456) returns the BODY[1.2.3.TEXT]<456> attr:	.: (0.000114)
  test: #threadid returns THREADID value (RFC8474: OBJECTID):	.: (0.000096)
  test: #uid:							.: (0.000106)
  test: simple RFC3501 and RFC9051 attrs accessors:		.: (0.000262)
  test: simple RFC822 attrs accessors (deprecated by RFC9051):	.: (0.000137)
IMAPAuthenticatorsTest: 
  test: .authenticator mechanism name can be a symbol:		.: (0.000495)
  test: .authenticator mechanism name is case insensitive:	.: (0.000195)
  test: SASL::Authenticators.normalize_name:			.: (0.000154)
  test_anonymous_length_over_255:				.: (0.000486)
  test_anonymous_matches_mechanism:				.: (0.000159)
  test_anonymous_response:					.: (0.000278)
  test_anonymous_stringprep:					.: (0.000328)
  test_cram_md5_authenticator:					.: (0.000883)
  test_cram_md5_authenticator_deprecated:			.: (0.000325)
  test_cram_md5_authenticator_matches_mechanism:		.: (0.000263)
  test_cram_md5_does_not_support_initial_response:		.: (0.000243)
  test_digest_md5_authenticator:				.: (0.001664)
  test_digest_md5_authenticator_deprecated:			.: (0.000506)
  test_digest_md5_authenticator_empty_challenge:		.: (0.004709)
  test_digest_md5_authenticator_empty_challenge_commas:		.: (0.000786)
  test_digest_md5_authenticator_empty_qop:			.: (0.000622)
  test_digest_md5_authenticator_garbage:			.: (0.000764)
  test_digest_md5_authenticator_garbage_no_equal_sign:		.: (0.000811)
  test_digest_md5_authenticator_illinear:			.: (0.006423)
  test_digest_md5_authenticator_matches_mechanism:		.: (0.000419)
  test_digest_md5_authenticator_missing_nonce:			.: (0.000770)
  test_digest_md5_authenticator_qdstr_with_comma:		.: (0.000600)
  test_digest_md5_authenticator_realm_and_digest_uri:		.: (0.031001)
  test_digest_md5_does_not_support_initial_response:		.: (0.000475)
  test_external_invalid:					.: (0.000241)
  test_external_matches_mechanism:				.: (0.000134)
  test_external_response:					.: (0.000274)
  test_external_utf8:						.: (0.000143)
  test_login_authenticator_deprecated:				.: (0.000183)
  test_login_authenticator_matches_mechanism:			.: (0.000135)
  test_login_does_not_support_initial_response:			.: (0.000118)
  test_login_responses:						.: (0.000141)
  test_net_imap_authenticator_deprecated:			.: (0.000178)
  test_oauthbearer_authenticator_matches_mechanism:		.: (0.000143)
  test_oauthbearer_response:					.: (0.000310)
  test_plain_authenticator_matches_mechanism:			.: (0.000128)
  test_plain_authzid:						.: (0.000124)
  test_plain_kw_params:						.: (0.000149)
  test_plain_no_null_chars:					.: (0.000447)
  test_plain_response:						.: (0.000116)
  test_plain_supports_initial_response:				.: (0.000105)
  test_plain_username_kw_sets_both_authcid_and_authzid:		.: (0.000108)
  test_scram_kwargs:						.: (0.000197)
  test_scram_sha1_authenticator:				.: (0.009078)
  test_scram_sha1_authenticator_matches_mechanism:		.: (0.000226)
  test_scram_sha256_authenticator:				.: (0.017352)
  test_scram_sha256_authenticator_matches_mechanism:		.: (0.000255)
  test_xoauth2_authenticator_matches_mechanism:			.: (0.000144)
  test_xoauth2_kwargs:						.: (0.000197)
  test_xoauth2_response:					.: (0.000125)
  test_xoauth2_supports_initial_response:			.: (0.000121)
IMAPCapabilitiesTest: 
  test: #auth_capable?(name) checks cached capabilities for AUTH=name:	.: (0.139738)
  test: #auth_mechanisms reports cached capabilities with AUTH={name}:	.: (0.107861)
  test: #capabilities cache IGNORES tagged OK response to STARTTLS:	.: (0.164395)
  test: #capabilities cache is NOT cleared after #authenticate fails:	.: (0.087637)
  test: #capabilities cache is NOT cleared after #login fails:	.: (0.087856)
  test: #capabilities cache is cleared after #authenticate:	.: (0.179884)
  test: #capabilities cache is cleared after #login:		.: (0.187672)
  test: #capabilities cache is cleared after #starttls:		.: (0.164315)
  test: #capabilities cache is retained after selecting a mailbox:	.: (0.123598)
  test: #capabilities caches greeting capabilities (PREAUTH):	.: (0.016965)
  test: #capabilities caches greeting capabilities (cleartext):	.: (0.055026)
  test: #capabilities caches greeting capabilities (implicit TLS):	.: (0.119787)
  test: #capabilities caches tagged OK response to AUTHENTICATE:.: (0.075703)
  test: #capabilities caches tagged OK response to LOGIN:	.: (0.091849)
  test: #capabilities returns cached CAPABILITY data:		.: (0.119905)
  test: #capability caches its result:				.: (0.121388)
  test: #capable?(name) checks cached CAPABILITY data for name:	.: (0.122333)
  test: #clear_cached_capabilities clears cached capabilities:	.: (0.111908)
IMAPConnectionStateTest: 
  test: #connection_state after #disconnect:			.: (0.035334)
  test: #connection_state after #logout:			.: (0.043598)
  test: #connection_state after #logout!:			.: (0.047888)
  test: #connection_state after AUTHENTICATE, SELECT, CLOSE successes:	.: (0.224387)
  test: #connection_state after LOGIN, EXAMINE, UNSELECT successes:	.: (0.191859)
  test: #connection_state after PREAUTH:			.: (0.180032)
  test: #connection_state after [CLOSED] response code:		.: (0.280631)
  test: #connection_state after failed LOGIN or AUTHENTICATE:	.: (0.210949)
  test: #connection_state after failed SELECT or EXAMINE:	.: (0.301429)
IMAPDataEncodingTest: 
  test_decode_date:						.: (0.000376)
  test_decode_datetime:						.: (0.000230)
  test_decode_time:						.: (0.000327)
  test_decode_utf7:						.: (0.013112)
  test_encode_date:						.: (0.000277)
  test_encode_datetime:						.: (0.000189)
  test_encode_utf7:						.: (0.001262)
IMAPErrorsTest: 
  test: ResponseTooLargeError:					.: (0.000532)
IMAPLoginTest: 
  test: #login doesn't send CAPABILITY when it is already cached:	.: (0.094873)
  test: #login first checks capabilities for LOGINDISABLED (failure):	.: (0.122740)
  test: #login first checks capabilities for LOGINDISABLED (success):	.: (0.148732)
  test: #login raises LoginDisabledError when LOGINDISABLED:	.: (0.018998)
  test: #login raises LoginDisabledError without sending CAPABILITY when config.enforce_logindisabled is :when_capabilities_cached:	.: (0.032647)
  test: #login sends LOGIN without asking CAPABILITY when config.enforce_logindisabled is :when_capabilities_cached:	.: (0.203092)
  test: #login sends LOGIN without asking CAPABILITY when config.enforce_logindisabled is false:.: (0.076294)
IMAPMaxResponseSizeTest: 
  test: #max_response_size closes connection for too long line:	.: (0.015660)
  test: #max_response_size closes connection for too long literal:	.: (0.043617)
  test: #max_response_size reading literals:			.: (0.103766)
IMAPRegexpsTest: 
  test_linear_time[Net::IMAP::FakeServer::CommandReader#get_command: /\{(\d+)(\+)?\}\r\n\z/n]:	.: (0.000261)
  test_linear_time[Net::IMAP::FakeServer::CommandReader#scan_astrings: /"((?:[^"\\]|\\["\\])+)"|(\S+)/n]:	.: (0.000109)
  test_linear_time[Net::IMAP::FakeServer::CommandReader#scan_astrings: /\\([\\"])/n]:	.: (0.000095)
  test_linear_time[Net::IMAP::FakeServer::CommandReader#parse: /\A([^ ]+) ((?:UID )?\w+)(?: (.+))?\r\n\z/min]:	.: (0.000098)
  test_linear_time[Net::IMAP::FakeServer::ResponseWriter#resp_code: /\A\[/]:	.: (0.000090)
  test_linear_time[Net::IMAP::ResponseReader#get_literal_size: /\{(\d+)\}\r\n\z/n]:	.: (0.000085)
  test_linear_time[Net::IMAP::SASL::Authenticators#add_authenticator: /[^a-zA-Z0-9]/]:	.: (0.000103)
  test_linear_time[Net::IMAP::SASL::GS2Header::NO_NULL_CHARS]:	.: (0.000089)
  test_linear_time[Net::IMAP::SASL::GS2Header::RFC5801_SASLNAME]:	.: (0.000082)
  test_linear_time[Net::IMAP::SASL::ExternalAuthenticator#initialize: /\u0000/]:.: (0.000083)
  test_linear_time[Net::IMAP::SASL::ScramAuthenticator#parse_challenge: /=/]:	.: (0.000085)
  test_linear_time[Net::IMAP::SASL::ScramAuthenticator#parse_challenge: /,/]:	.: (0.000083)
  test_linear_time[Net::IMAP::SASL::DigestMD5Authenticator#process: /rspauth=/]:.: (0.000084)
  test_linear_time[Net::IMAP::SASL::DigestMD5Authenticator#parse_challenge: /\A"(.*)"\z/mn]:	.: (0.000083)
  test_linear_time[Net::IMAP::SASL::DigestMD5Authenticator#parse_challenge: /\\(.)/mn]:	.: (0.000082)
  test_linear_time[Net::IMAP::SASL::DigestMD5Authenticator#compute_a2: /^auth-(?:conf|int)$/]:	.: (0.000082)
  test_linear_time[Net::IMAP::SASL::DigestMD5Authenticator#qdval: /([\\"])/]:	.: (0.000083)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_C_1_2]:	.: (0.000084)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_C_2_1]:	.: (0.000105)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_C_2_2]:	.: (0.024345)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_C_3]:	.: (0.000124)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_C_4]:	.: (0.000088)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_C_5]:	.: (0.000088)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_C_6]:	.: (0.000084)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_C_7]:	.: (0.000085)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_C_8]:	.: (0.000085)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_C_9]:	.: (0.000086)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_D_1]:	.: (0.000084)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_D_1_NEGATED]:	.: (0.000084)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_D_2]:	.: (0.000085)
  test_linear_time[Net::IMAP::StringPrep::Tables::BIDI_FAILS_REQ3]:	.: (0.000084)
  test_linear_time[Net::IMAP::StringPrep::Tables::BIDI_FAILS_REQ2]:	.: (0.000084)
  test_linear_time[Net::IMAP::StringPrep::Tables::BIDI_FAILURE]:.: (0.000084)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_A_1]:	.: (0.000083)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_B_1]:	.: (0.000082)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_B_2]:	.: (0.000083)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_B_3]:	.: (0.000083)
  test_linear_time[Net::IMAP::StringPrep::Tables::IN_C_1_1]:	.: (0.000082)
  test_linear_time[Net::IMAP::StringPrep::SASLprep::PROHIBITED_STORED]:	.: (0.000085)
  test_linear_time[Net::IMAP::StringPrep::SASLprep::ASCII_NO_CTRLS]:	.: (0.000084)
  test_linear_time[Net::IMAP::StringPrep::SASLprep::MAP_TO_NOTHING]:	.: (0.000082)
  test_linear_time[Net::IMAP::StringPrep::SASLprep::MAP_TO_SPACE]:	.: (0.000082)
  test_linear_time[Net::IMAP::StringPrep::SASLprep::PROHIBITED]:.: (0.000086)
  test_linear_time[Net::IMAP::StringPrep::SASLprep.saslprep: /invalid byte sequence|incompatible encoding/]:	.: (0.000099)
  test_linear_time[Net::IMAP::StringPrep::SASLprep#saslprep: /invalid byte sequence|incompatible encoding/]:	.: (0.000105)
  test_linear_time[Net::IMAP::StringPrep.check_prohibited!: /^C/]:	.: (0.000085)
  test_linear_time[Net::IMAP::StringPrep#check_prohibited!: /^C/]:	.: (0.000084)
  test_linear_time[Net::IMAP::Config::AttrAccessors.attributes: /=\z/]:	.: (0.000084)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC5234::ALPHA]:.: (0.000086)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC5234::CTL]:	.: (0.000085)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC5234::DIGIT]:.: (0.000101)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC5234::DQUOTE]:	.: (0.000101)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC5234::CRLF]:	.: (0.000096)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC5234::HEXDIG]:	.: (0.000098)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC5234::OCTET]:.: (0.000095)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC5234::CHAR]:	.: (0.000099)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC5234::SP]:	.: (0.000101)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC3629::UTF8_2]:	.: (0.000100)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC3629::UTF8_3]:	.: (0.000097)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC3629::UTF8_4]:	.: (0.000099)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC3629::UTF8_CHAR]:	.: (0.000099)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC3629::UTF8_OCTETS]:	.: (0.000100)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC3629::UTF8_1]:	.: (0.000104)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RFC3629::UTF8_TAIL]:	.: (0.000098)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::CHAR8]:	.: (0.000101)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::LIST_WILDCARDS]:.: (0.000106)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::QUOTED_SPECIALS]:	.: (0.000105)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::RESP_SPECIALS]:	.: (0.000104)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::ATOM_SPECIALS]:	.: (0.000098)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::ASTRING_SPECIALS]:	.: (0.000105)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::ASTRING_CHAR]:	.: (0.000098)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::ATOM_CHAR]:	.: (0.000098)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::ASTRING_CHARS]:	.: (0.000099)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::ATOMISH]:	.: (0.000097)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::TAG]:	.: (0.000096)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::TEXT_CHAR]:	.: (0.000096)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::CODE_TEXT_CHAR]:.: (0.000100)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::CODE_TEXT]:	.: (0.000100)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::FLAG]:	.: (0.000102)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::FLAG_EXTENSION]:.: (0.000101)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::FLAG_KEYWORD]:	.: (0.000100)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::FLAG_PERM]:	.: (0.000100)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::MBX_FLAG]:	.: (0.000100)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::FLAG_LIST]:	.: (0.000102)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::FLAG_PERM_LIST]:.: (0.000102)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::MBX_LIST_FLAGS]:.: (0.000105)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::QUIRKY_FLAG]:	.: (0.000105)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::QUIRKY_FLAGS_LIST]:	.: (0.000113)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::QUOTED_CHAR_safe]:	.: (0.000102)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::QUOTED_CHAR_esc]:	.: (0.000099)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::QUOTED_CHAR_rev1]:	.: (0.000100)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::QUOTED_CHAR_rev2]:	.: (0.000100)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::QUOTED_rev1]:	.: (0.000117)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::QUOTED_rev2]:	.: (0.000096)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::TEXT_rev1]:	.: (0.000098)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::TEXT_rev2]:	.: (0.000098)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::TAGGED_LABEL_FCHAR]:	.: (0.000100)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::TAGGED_LABEL_CHAR]:	.: (0.000102)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::TAGGED_EXT_LABEL]:	.: (0.000098)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::NZ_NUMBER]:	.: (0.000099)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::SEQ_NUMBER]:	.: (0.000102)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::SEQ_RANGE]:	.: (0.000101)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::SEQUENCE_SET_ITEM]:	.: (0.000098)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::SEQUENCE_SET]:	.: (0.000096)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::PARTIAL_RANGE_FIRST]:	.: (0.000098)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::PARTIAL_RANGE_LAST]:	.: (0.000095)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::SEQUENCE_SET_STR]:	.: (0.000092)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::PARTIAL_RANGE]:	.: (0.000097)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::ATOM]:	.: (0.000094)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::LITERAL]:	.: (0.000095)
  test_linear_time[Net::IMAP::ResponseParser::Patterns::LITERAL8]:	.: (0.000100)
  test_linear_time[Net::IMAP::ResponseParser::BEG_REGEXP]:	.: (0.000101)
  test_linear_time[Net::IMAP::ResponseParser::DATA_REGEXP]:	.: (0.000097)
  test_linear_time[Net::IMAP::ResponseParser::TEXT_REGEXP]:	.: (0.000096)
  test_linear_time[Net::IMAP::ResponseParser::CTEXT_REGEXP]:	.: (0.000096)
  test_linear_time[Net::IMAP::ResponseParser::ParserUtils::Generator#def_char_matchers: /\A[A-Z]/]:	.: (0.000101)
  test_linear_time[Net::IMAP::ResponseParser::ParserUtils::Generator#def_token_matchers: /\A[A-Z]/]:	.: (0.000097)
  test_linear_time[Net::IMAP::ResponseParser::ADDRESS_REGEXP]:	.: (0.000152)
  test_linear_time[Net::IMAP::ResponseParser::SPACES_REGEXP]:	.: (0.000099)
  test_linear_time[Net::IMAP::ResponseParser::RE_RESPONSE_TYPE]:.: (0.000113)
  test_linear_time[Net::IMAP::ResponseParser#next_token: /\S*/n]:	.: (0.000097)
  test_linear_time[Net::IMAP::ResponseParser#esearch_response: /\G UID\b/i]:	.: (0.000104)
  test_linear_time[Net::IMAP::ResponseParser#msg_att: /\ABODY\[/in]:	.: (0.000099)
  test_linear_time[Net::IMAP::ResponseParser#msg_att: /\ABINARY\[/in]:	.: (0.000098)
  test_linear_time[Net::IMAP::ResponseParser#msg_att: /\ABINARY\.SIZE\[/in]:	.: (0.000100)
  test_linear_time[Net::IMAP::ResponseParser#msg_att__label: /\A(?:RFC822(?:\.HEADER|\.TEXT)?)\z/in]:	.: (0.000098)
  test_linear_time[Net::IMAP::ResponseParser#body_type_1part: /\G(?:
            (?<TEXT>     "TEXT"    \s "[^"]+"             )
            |(?<MESSAGE> "MESSAGE" \s "(?:RFC822|GLOBAL)" )
            |(?<BASIC>   "[^"]+"   \s "[^"]+"             )
            |(?<MIXED>   "MIXED"                          )
           )/ixn]:	.: (0.000108)
  test_linear_time[Net::IMAP::TestData#test_define_edge_cases: /duplicate member/]:	.: (0.000099)
  test_linear_time[Net::IMAP::StringFormatter::LITERAL_REGEX]:	.: (0.000102)
  test_linear_time[Net::IMAP::SequenceSet#nz_number: /\A[1-9]\d*\z/]:	.: (0.000099)
  test_linear_time[Net::IMAP.decode_utf7: /&([A-Za-z0-9+,]+)?-/n]:	.: (0.000097)
  test_linear_time[Net::IMAP.encode_utf7: /(&)|[^\x20-\x7e]+/]:	.: (0.000105)
  test_linear_time[Net::IMAP#auth_mechanisms: /\AAUTH=/i]:	.: (0.000102)
  test_linear_time[Net::IMAP#get_response: /^/n]:		.: (0.000098)
  test_linear_time[Net::IMAP#search_args: /\ACHARSET\b/i]:	.: (0.000090)
  test_linear_time[Net::IMAP#search_args: /\ACHARSET\z/i]:	.: (0.000146)
  test_linear_time[Net::IMAP#send_string_data: /[\r\n]/n]:	.: (0.000095)
  test_linear_time[Net::IMAP#send_string_data: /[(){ \x00-\x1f\x7f%*"\\]/n]:	.: (0.000097)
  test_linear_time[Net::IMAP#send_quoted_string: /["\\]/]:	.: (0.000096)
  test_linear_time[Net::IMAP#put_string: /\n/n]:		.: (0.000107)
  test_linear_time[Net::IMAP#put_string: /\n\z/n]:		.: (0.000101)
  test_linear_time[Net::IMAP#get_tagged_response: /\A(?:OK)\z/in]:	.: (0.000103)
  test_linear_time[Net::IMAP#get_tagged_response: /\A(?:NO)\z/in]:	.: (0.000099)
  test_linear_time[Net::IMAP#get_tagged_response: /\A(?:BAD)\z/in]:	.: (0.000100)
IMAPResponseHandlersTest: 
  test: #add_response_handlers:					.: (0.132571)
  test: ::new with response_handlers kwarg:			.: (0.106422)
IMAPResponseParserTest: 
  test: APPENDUID with '*':					.: (0.000616)
  test: APPENDUID with parser_use_deprecated_uidplus_data = :up_to_max_size:	.: (0.000640)
  test: APPENDUID with parser_use_deprecated_uidplus_data = false:	.: (0.000288)
  test: APPENDUID with parser_use_deprecated_uidplus_data = true:	.: (0.001601)
  test: COPYUID with '*':					.: (0.000390)
  test: COPYUID with backwards ranges:				.: (0.000508)
  test: COPYUID with parser_use_deprecated_uidplus_data = :up_to_max_size:	.: (0.000754)
  test: COPYUID with parser_use_deprecated_uidplus_data = false:.: (0.000359)
  test: COPYUID with parser_use_deprecated_uidplus_data = true:	.: (0.001496)
  test: config can be passed in to #initialize:			.: (0.000145)
  test: config will inherits from passed in frozen config:	.: (0.000274)
  test: default config inherits from Config.global:		.: (0.000151)
  test: passing in global config inherits from Config.global:	.: (0.000136)
  test_NAMESPACE_rfc2342_example_5.1:				.: (0.000360)
  test_NAMESPACE_rfc2342_example_5.2:				.: (0.000250)
  test_NAMESPACE_rfc2342_example_5.3:				.: (0.000295)
  test_NAMESPACE_rfc2342_example_5.4:				.: (0.000501)
  test_NAMESPACE_rfc2342_example_5.5:				.: (0.000260)
  test_NAMESPACE_rfc2342_example_5.6:				.: (0.000395)
  test_NAMESPACE_rfc2342_example_5.7:				.: (0.000287)
  test_NAMESPACE_rfc2342_example_5.9:				.: (0.000289)
  test_NAMESPACE_rfc9051_6.3.10_example_8:			.: (0.000282)
  test_RFC7162 CONDSTORE 3.1.10. Example 19 (Interaction with ESEARCH):	.: (0.000405)
  test_RFC7162 CONDSTORE 3.1.10. Example 20 (Interaction with ESEARCH):	.: (0.000387)
  test_RFC7162 CONDSTORE 3.1.2.1. HIGHESTMODSEQ Response Code:	.: (0.000231)
  test_RFC7162 CONDSTORE 3.1.2.2. NOMODSEQ Response Code:	.: (0.000234)
  test_RFC7162 CONDSTORE 3.1.3. Example 3 (FETCH MODSEQ):	.: (0.000235)
  test_RFC7162 CONDSTORE 3.1.3. Example 4 (FETCH MODSEQ):	.: (0.000198)
  test_RFC7162 CONDSTORE 3.1.3. Example 6 (MODIFIED Response Code):	.: (0.000279)
  test_RFC7162 CONDSTORE 3.1.5. MODSEQ Search Criterion in SEARCH:	.: (0.000321)
  test_RFC7162 CONDSTORE 3.1.7. HIGHESTMODSEQ Status Data Items:.: (0.000267)
  test_RFC7162 QRESYNC 3.2.5.1. Modification Sequence and UID Parameters:	.: (0.000305)
  test_RFC7162 QRESYNC 3.2.7. EXPUNGE Command:			.: (0.000235)
  test_RFC9394 PARTIAL 3.1. example 1:				.: (0.000501)
  test_RFC9394 PARTIAL 3.1. example 2:				.: (0.000326)
  test_RFC9394 PARTIAL 3.1. example 3:				.: (0.000292)
  test_RFC9586 UIDONLY 3. UIDREQUIRED response code:		.: (0.000221)
  test_RFC9586 UIDONLY 3.3 UIDFETCH response:			.: (0.000234)
  test_acl_response:						.: (0.000277)
  test_bodystructure_bug11128_ext_mpart_without_lang:		.: (0.005467)
  test_bodystructure_bug7146_msg_delivery_status:		.: (0.000593)
  test_bodystructure_bug7147_message_rfc822_attachment:		.: (0.025779)
  test_bodystructure_bug8167_delivery_status_with_extra_data:	.: (0.001261)
  test_bodystructure_extension_fields:				.: (0.001779)
  test_bodystructure_extra_space:				.: (0.001023)
  test_bodystructure_mixed_boundary:				.: (0.001508)
  test_continuation_request_without_response_text:		.: (0.000212)
  test_fetch_binary_and_binary_size:				.: (0.001258)
  test_fetch_msg_att_HEADER.FIELDS:				.: (0.000347)
  test_fetch_msg_att_HEADER.FIELDS.NOT:				.: (0.000508)
  test_fetch_msg_att_HEADER.FIELDS_quoted:			.: (0.000286)
  test_fetch_msg_att_X-GM-LABELS_1:				.: (0.000333)
  test_fetch_msg_att_X-GM-LABELS_2:				.: (0.004431)
  test_fetch_msg_att_X-GM-LABELS_3:				.: (0.000302)
  test_fetch_msg_att_X-GM-MSGID:				.: (0.000248)
  test_fetch_msg_att_X-GM-THRID:				.: (0.000234)
  test_fetch_msg_att_flags_and_uid:				.: (0.000307)
  test_fetch_msg_att_modseq:					.: (0.000311)
  test_fetch_msg_att_rfc822:					.: (0.000229)
  test_fetch_msg_att_uid:					.: (0.000206)
  test_flags_with_various_flag_types:				.: (0.008445)
  test_greenmail sent "\*" in a FLAGS response:			.: (0.000229)
  test_id_gmail:						.: (0.000379)
  test_id_rfc2971_example_3.1_nil:				.: (0.000172)
  test_id_rfc2971_example_3.2_cyrus:				.: (0.000785)
  test_imaginary_status_response_using_tagged-ext-val:		.: (0.000643)
  test_imap.gmail.com allows invalid atom-specials in flags:	.: (0.000271)
  test_invalid_bodystructure_bug7153_mixed:			.: (0.000256)
  test_invalid_bodystructure_message_sent_as_basic:		.: (0.001126)
  test_invalid_capability_extra_space_at_end:			.: (0.000308)
  test_invalid_fetch_msg_att_extra_space:			.: (0.000195)
  test_invalid_fetch_msg_att_rfc822_with_brackets:		.: (0.000202)
  test_invalid_fetch_msg_att_unknown_fails:			.: (0.000567)
  test_invalid_noop_response_is_ignored:			.: (0.000230)
  test_invalid_noop_response_with_numeric_prefix:		.: (0.000179)
  test_invalid_noop_response_with_numeric_prefix_and_unparseable_data:	.: (0.000166)
  test_invalid_noop_response_with_unparseable_data:		.: (0.000166)
  test_invalid_search_response_multiple_result_with_trailing_space:	.: (0.000196)
  test_invalid_search_response_single_result_with_trailing_space:	.: (0.000177)
  test_invalid_status_response_trailing_space:			.: (0.000257)
  test_invalid_thread_empty_response:				.: (0.000175)
  test_list_with_various_flag_capitalizations:			.: (0.000293)
  test_outlook.com puts an extra SP in ENVELOPE address lists:	.: (0.000932)
  test_resp-cond-auth_without_SP_resp-text:			.: (0.000189)
  test_resp-cond-bye_without_SP_resp-text:			.: (0.000175)
  test_resp-cond-state_without_SP_resp-text:			.: (0.000165)
  test_resp_code_ALREADYEXISTS_rfc9051_7.1_example:		.: (0.000509)
  test_resp_code_APPENDUID_rfc9051_6.3.12_example:		.: (0.000351)
  test_resp_code_APPENDUID_with_MULTIAPPEND_compatibility:	.: (0.000378)
  test_resp_code_AUTHENTICATIONFAILED_rfc9051_7.1_example:	.: (0.000224)
  test_resp_code_AUTHORIZATIONFAILED_rfc9051_7.1_example_1:	.: (0.000209)
  test_resp_code_AUTHORIZATIONFAILED_rfc9051_7.1_example_2:	.: (0.000194)
  test_resp_code_BADCHARSET_rfc9051_6.4.4.4_example_modified:	.: (0.000236)
  test_resp_code_BADCHARSET_with_astrings:			.: (0.000290)
  test_resp_code_CANNOT_rfc9051_7.1_example:			.: (0.000205)
  test_resp_code_CAPABILITY_rfc9051_6.2.2_example:		.: (0.000247)
  test_resp_code_CAPABILITY_with_valid_atoms:			.: (0.000331)
  test_resp_code_CLIENTBUG_rfc9051_7.1_example:			.: (0.000200)
  test_resp_code_CLOSED:					.: (0.000430)
  test_resp_code_CONTACTADMIN_rfc9051_7.1_example:		.: (0.000178)
  test_resp_code_COPYUID_rfc9051_6.3.12_example:		.: (0.000471)
  test_resp_code_COPYUID_with_reversed_ranges_and_mixed_case:	.: (0.000768)
  test_resp_code_CORRUPTION_rfc9051_7.1_example:		.: (0.000214)
  test_resp_code_EXPIRED_rfc9051_7.1_example:			.: (0.000201)
  test_resp_code_EXPUNGEISSUED_rfc9051_7.1_example:		.: (0.000194)
  test_resp_code_HASCHILDREN_rfc9051_7.1_example:		.: (0.000194)
  test_resp_code_INUSE_rfc9051_7.1_example:			.: (0.000196)
  test_resp_code_LIMIT_rfc9051_7.1_example:			.: (0.000199)
  test_resp_code_NONEXISTENT_rfc9051_7.1_example:		.: (0.000182)
  test_resp_code_NOPERM_rfc9051_7.1_example:			.: (0.000194)
  test_resp_code_OVERQUOTA_rfc9051_7.1_example_1:		.: (0.000200)
  test_resp_code_OVERQUOTA_rfc9051_7.1_example_2:		.: (0.000194)
  test_resp_code_PERMANENTFLAGS_rfc3501_6.3.1_example:		.: (0.000217)
  test_resp_code_PERMANENTFLAGS_rfc3501_6.3.2_example:		.: (0.000216)
  test_resp_code_PRIVACYREQUIRED_rfc9051_7.1_example:		.: (0.004248)
  test_resp_code_READ-ONLY_rfc3501_6.3.2_example:		.: (0.000375)
  test_resp_code_READ-WRITE_rfc3501_6.3.1_example:		.: (0.000266)
  test_resp_code_SERVERBUG_rfc9051_7.1_example:			.: (0.000235)
  test_resp_code_UIDNEXT_rfc3501_6.3.1_example:			.: (0.000245)
  test_resp_code_UIDVALIDITY_rfc3501_6.3.1_example:		.: (0.000232)
  test_resp_code_UNAVAILABLE_rfc9051_7.1_example:		.: (0.000224)
  test_resp_code_UNSEEN_rfc3501_6.3.1_example:			.: (0.000226)
  test_resp_text_PERMANENTFLAGS_with_various_flag_types:	.: (0.000252)
  test_resp_text_with_T_LBRA:					.: (0.000203)
  test_response-tagged_without_SP_resp-text:			.: (0.000198)
  test_rfc3501_6.1.1_example_1_capability_response:		.: (0.000270)
  test_rfc3501_6.1.1_example_2_capability_response:		.: (0.000346)
  test_rfc3501_6.2.2_example_continuation_request:		.: (0.000195)
  test_rfc3501_6.3.11_example_continuation_request:		.: (0.000177)
  test_rfc3501_7.1.1_OK_response_example_1:			.: (0.000197)
  test_rfc3501_7.1.1_OK_response_example_2:			.: (0.000213)
  test_rfc3501_7.1.1_OK_response_example_3:			.: (0.000166)
  test_rfc3501_7.1.2_NO_response_example_1:			.: (0.000191)
  test_rfc3501_7.1.2_NO_response_example_4:			.: (0.000167)
  test_rfc3501_7.1.3_BAD_response_example:			.: (0.000178)
  test_rfc3501_7.1.4_PREAUTH_response_example:			.: (0.000172)
  test_rfc3501_7.1.5_BYE_response_example:			.: (0.000174)
  test_rfc3501_7.2.1_CAPABILITY_response_example:		.: (0.000230)
  test_rfc3501_7.2.2_LIST_response_example:			.: (0.000258)
  test_rfc3501_7.2.3_LSUB_response_example:			.: (0.000229)
  test_rfc3501_7.2.4_STATUS_response_example:			.: (0.000229)
  test_rfc3501_7.2.5_SEARCH_response_example:			.: (0.000231)
  test_rfc3501_7.2.6_FLAGS_response_example:			.: (0.000196)
  test_rfc3501_7.3.1_EXISTS_response_example:			.: (0.000163)
  test_rfc3501_7.3.2_RECENT_response_example:			.: (0.000173)
  test_rfc3501_7.4.1_EXPUNGE_response_example:			.: (0.000158)
  test_rfc3501_7.4.2_FETCH_response_example:			.: (0.000240)
  test_rfc3501_7.5_continuation_request_example:		.: (0.000152)
  test_rfc3501_8_example_1_UNSEEN_response_code:		.: (0.000214)
  test_rfc3501_8_example_2_UIDVALIDITY_response_code:		.: (0.000215)
  test_rfc3501_8_example_3_FETCH_ENVELOPE:			.: (0.000978)
  test_rfc3501_8_example_4_FETCH_BODY[HEADER]:			.: (0.000252)
  test_rfc8474_example_4.1_MAILBOXID_response_to_CREATE:	.: (0.000236)
  test_rfc8474_example_4.2_MAILBOXID_untagged_response_to_SELECT:	.: (0.000226)
  test_rfc8474_example_4.3_MAILBOXID_attribute_for_STATUS:	.: (0.000264)
  test_rfc8474_example_5.3_EMAILID_and_THREADID:		.: (0.000271)
  test_rfc8474_example_5.3_no_THREADID_support:			.: (0.000408)
  test_rfc9051_6.4.4.4_ESEARCH_example_1:			.: (0.000369)
  test_rfc9051_6.4.4.4_ESEARCH_example_2:			.: (0.000352)
  test_rfc9051_6.4.4.4_ESEARCH_example_3:			.: (0.000330)
  test_rfc9051_6.4.4.4_ESEARCH_example_4:			.: (0.000323)
  test_rfc9051_6.4.4.4_ESEARCH_example_5:			.: (0.000268)
  test_rfc9051_6.4.4.4_ESEARCH_example_6:			.: (0.000270)
  test_rfc9051_6.4.4.4_ESEARCH_example_7:			.: (0.000282)
  test_rfc9051_6.4.4.4_ESEARCH_example_8:			.: (0.000382)
  test_rfc9051_6.4.4_ESEARCH_example_1:				.: (0.000269)
  test_rfc9051_6.4.4_ESEARCH_example_2:				.: (0.000333)
  test_rfc9051_6.4.4_ESEARCH_example_3:				.: (0.000257)
  test_rfc9051_6.4.4_ESEARCH_example_4:				.: (0.000297)
  test_rfc9051_6.4.4_ESEARCH_example_5:				.: (0.000247)
  test_rfc9051_6.4.4_ESEARCH_example_6:				.: (0.000265)
  test_rfc9051_6.4.4_ESEARCH_example_7:				.: (0.000247)
  test_rfc9051_7.1_ESEARCH_example_1:				.: (0.000351)
  test_rfc9051_7.2.1_ENABLED_example:				.: (0.000215)
  test_rfc9051_7.2.2_capability_example:			.: (0.000279)
  test_rfc9051_7.3.4_ESEARCH_example_1:				.: (0.008519)
  test_rfc9051_7.3.4_ESEARCH_example_2:				.: (0.000610)
  test_rfc9051_7.3.4_ESEARCH_example_3:				.: (0.000386)
  test_rfc9208_4.1.1_example:					.: (0.000360)
  test_rfc9208_4.1.2_example_1:					.: (0.000434)
  test_rfc9208_4.1.2_example_2:					.: (0.000478)
  test_rfc9208_4.1.4_example:					.: (0.000330)
  test_rfc9208_4.2.1_example:					.: (0.000307)
  test_rfc9208_4.2.2_example_1:					.: (0.000277)
  test_rfc9208_4.2.2_example_2:					.: (0.000207)
  test_rfc9208_4.3.1_example_1:					.: (0.000230)
  test_rfc9208_4.3.1_example_2:					.: (0.000232)
  test_search_response_empty:					.: (0.000201)
  test_search_response_multiple_seq_nums_returned:		.: (0.000223)
  test_search_response_single_seq_nums_returned:		.: (0.000195)
  test_search_response_with_condstore_modseq:			.: (0.000234)
  test_status_response_uidnext_uidvalidity:			.: (0.000236)
  test_thread_rfc5256_example1:					.: (0.000985)
  test_thread_rfc5256_example2:					.: (0.001227)
  test_thread_rfc5256_example3:					.: (0.000223)
  test_thread_rfc5256_example4:					.: (0.000328)
  test_thread_rfc5256_example5:					.: (0.000243)
  test_utf8_in_list_mailbox:					.: (0.000288)
  test_utf8_in_resp_text:					.: (0.000219)
  test_xlist_inbox:						.: (0.000277)
IMAPResponsesTest: 
  test: #clear_responses:					.: (0.138046)
  test: #extract_responses:					.: (0.107753)
  test: #responses without type or block:			.: (0.079485)
  test: #responses(&block):					.: (0.120007)
  test: #responses(type, &block):				.: (0.108290)
  test: #responses(type, &nil):					.: (0.135647)
IMAPSequenceSetTest: 
  test: #<<:							.: (0.000797)
  test: #== equality by value (not by identity or representation):	.: (0.000341)
  test: #[negative index]:					.: (0.000828)
  test: #[non-negative index]:					.: (0.002317)
  test: #[range]:						.: (0.074446)
  test: #[start, length]:					.: (0.035605)
  test: #above:							.: (0.001122)
  test: #add:							.: (0.000562)
  test: #add?:							.: (0.000617)
  test: #append:						.: (0.000714)
  test: #at(negative index):					.: (0.000764)
  test: #at(non-negative index):				.: (0.000776)
  test: #below:							.: (0.001076)
  test: #clone:							.: (0.000508)
  test: #clone preserves ractor sharability (deeply frozen):	.: (0.000177)
  test: #count[single number]:					.: (0.000140)
  test: #count[single range]:					.: (0.000133)
  test: #count[simple numbers list]:				.: (0.000144)
  test: #count[numbers and ranges list]:			.: (0.000189)
  test: #count[just *]:						.: (0.000133)
  test: #count[range with *]:					.: (0.000137)
  test: #count[* sorts last]:					.: (0.000155)
  test: #count[out of order]:					.: (0.000168)
  test: #count[adjacent]:					.: (0.000201)
  test: #count[overlapping]:					.: (0.000189)
  test: #count[contained]:					.: (0.000171)
  test: #count[multiple *]:					.: (0.000156)
  test: #count[array]:						.: (0.000247)
  test: #count[nested array]:					.: (0.000250)
  test: #count[Set]:						.: (0.000246)
  test: #count[empty]:						.: (0.000107)
  test: #count_duplicates[single number]:			.: (0.000169)
  test: #count_duplicates[single range]:			.: (0.000159)
  test: #count_duplicates[simple numbers list]:			.: (0.000192)
  test: #count_duplicates[numbers and ranges list]:		.: (0.000363)
  test: #count_duplicates[just *]:				.: (0.000148)
  test: #count_duplicates[range with *]:			.: (0.000152)
  test: #count_duplicates[* sorts last]:			.: (0.000191)
  test: #count_duplicates[out of order]:			.: (0.000239)
  test: #count_duplicates[adjacent]:				.: (0.000287)
  test: #count_duplicates[overlapping]:				.: (0.000265)
  test: #count_duplicates[contained]:				.: (0.000240)
  test: #count_duplicates[multiple *]:				.: (0.000191)
  test: #count_duplicates[array]:				.: (0.000222)
  test: #count_duplicates[nested array]:			.: (0.000239)
  test: #count_duplicates[Set]:					.: (0.000203)
  test: #count_duplicates[empty]:				.: (0.000103)
  test: #count_with_duplicates[single number]:			.: (0.000151)
  test: #count_with_duplicates[single range]:			.: (0.000175)
  test: #count_with_duplicates[simple numbers list]:		.: (0.000174)
  test: #count_with_duplicates[numbers and ranges list]:	.: (0.000213)
  test: #count_with_duplicates[just *]:				.: (0.000116)
  test: #count_with_duplicates[range with *]:			.: (0.000134)
  test: #count_with_duplicates[* sorts last]:			.: (0.000162)
  test: #count_with_duplicates[out of order]:			.: (0.000230)
  test: #count_with_duplicates[adjacent]:			.: (0.000259)
  test: #count_with_duplicates[overlapping]:			.: (0.000233)
  test: #count_with_duplicates[contained]:			.: (0.000226)
  test: #count_with_duplicates[multiple *]:			.: (0.000162)
  test: #count_with_duplicates[array]:				.: (0.000228)
  test: #count_with_duplicates[nested array]:			.: (0.000227)
  test: #count_with_duplicates[Set]:				.: (0.000202)
  test: #count_with_duplicates[empty]:				.: (0.000098)
  test: #cover?:						.: (0.017863)
  test: #deconstruct[single number]:				.: (0.000178)
  test: #deconstruct[single range]:				.: (0.000160)
  test: #deconstruct[simple numbers list]:			.: (0.000181)
  test: #deconstruct[numbers and ranges list]:			.: (0.000210)
  test: #deconstruct[just *]:					.: (0.000138)
  test: #deconstruct[range with *]:				.: (0.000151)
  test: #deconstruct[* sorts last]:				.: (0.000178)
  test: #deconstruct[out of order]:				.: (0.000220)
  test: #deconstruct[adjacent]:					.: (0.000366)
  test: #deconstruct[overlapping]:				.: (0.000215)
  test: #deconstruct[contained]:				.: (0.000195)
  test: #deconstruct[multiple *]:				.: (0.000154)
  test: #deconstruct[array]:					.: (0.000262)
  test: #deconstruct[nested array]:				.: (0.000259)
  test: #deconstruct[Set]:					.: (0.000243)
  test: #deconstruct[empty]:					.: (0.000115)
  test: #delete:						.: (0.001304)
  test: #delete?:						.: (0.000641)
  test: #delete_at:						.: (0.000480)
  test: #disjoint?:						.: (0.000516)
  test: #dup:							.: (0.000349)
  test: #each_element[single number]:				.: (0.000208)
  test: #each_element[single range]:				.: (0.000209)
  test: #each_element[simple numbers list]:			.: (0.000223)
  test: #each_element[numbers and ranges list]:			.: (0.000268)
  test: #each_element[just *]:					.: (0.000190)
  test: #each_element[range with *]:				.: (0.000206)
  test: #each_element[* sorts last]:				.: (0.000221)
  test: #each_element[out of order]:				.: (0.000244)
  test: #each_element[adjacent]:				.: (0.000309)
  test: #each_element[overlapping]:				.: (0.000268)
  test: #each_element[contained]:				.: (0.000259)
  test: #each_element[multiple *]:				.: (0.000225)
  test: #each_element[array]:					.: (0.000350)
  test: #each_element[nested array]:				.: (0.000495)
  test: #each_element[Set]:					.: (0.000329)
  test: #each_element[empty]:					.: (0.000178)
  test: #each_entry[single number]:				.: (0.000263)
  test: #each_entry[single range]:				.: (0.000285)
  test: #each_entry[simple numbers list]:			.: (0.000362)
  test: #each_entry[numbers and ranges list]:			.: (0.000461)
  test: #each_entry[just *]:					.: (0.000203)
  test: #each_entry[range with *]:				.: (0.000245)
  test: #each_entry[* sorts last]:				.: (0.000310)
  test: #each_entry[out of order]:				.: (0.000440)
  test: #each_entry[adjacent]:					.: (0.000542)
  test: #each_entry[overlapping]:				.: (0.000609)
  test: #each_entry[contained]:					.: (0.000482)
  test: #each_entry[multiple *]:				.: (0.000319)
  test: #each_entry[array]:					.: (0.000468)
  test: #each_entry[nested array]:				.: (0.000472)
  test: #each_entry[Set]:					.: (0.000436)
  test: #each_entry[empty]:					.: (0.000179)
  test: #each_number[single number]:				.: (0.000229)
  test: #each_number[single range]:				.: (0.000220)
  test: #each_number[simple numbers list]:			.: (0.000231)
  test: #each_number[numbers and ranges list]:			.: (0.000275)
  test: #each_number[just *]:					.: (0.000244)
  test: #each_number[range with *]:				.: (0.000236)
  test: #each_number[* sorts last]:				.: (0.000232)
  test: #each_number[out of order]:				.: (0.000373)
  test: #each_number[adjacent]:					.: (0.000255)
  test: #each_number[overlapping]:				.: (0.000241)
  test: #each_number[contained]:				.: (0.000228)
  test: #each_number[multiple *]:				.: (0.000207)
  test: #each_number[array]:					.: (0.000267)
  test: #each_number[nested array]:				.: (0.000273)
  test: #each_number[Set]:					.: (0.000246)
  test: #each_number[empty]:					.: (0.000157)
  test: #each_ordered_number[single number]:			.: (0.000234)
  test: #each_ordered_number[single range]:			.: (0.000249)
  test: #each_ordered_number[simple numbers list]:		.: (0.000346)
  test: #each_ordered_number[numbers and ranges list]:		.: (0.000431)
  test: #each_ordered_number[just *]:				.: (0.000234)
  test: #each_ordered_number[range with *]:			.: (0.000298)
  test: #each_ordered_number[* sorts last]:			.: (0.016813)
  test: #each_ordered_number[out of order]:			.: (0.000561)
  test: #each_ordered_number[adjacent]:				.: (0.000463)
  test: #each_ordered_number[overlapping]:			.: (0.000511)
  test: #each_ordered_number[contained]:			.: (0.000499)
  test: #each_ordered_number[multiple *]:			.: (0.000264)
  test: #each_ordered_number[array]:				.: (0.000337)
  test: #each_ordered_number[nested array]:			.: (0.000335)
  test: #each_ordered_number[Set]:				.: (0.000308)
  test: #each_ordered_number[empty]:				.: (0.000186)
  test: #each_range[single number]:				.: (0.000231)
  test: #each_range[single range]:				.: (0.000221)
  test: #each_range[simple numbers list]:			.: (0.000242)
  test: #each_range[numbers and ranges list]:			.: (0.000271)
  test: #each_range[just *]:					.: (0.000202)
  test: #each_range[range with *]:				.: (0.000213)
  test: #each_range[* sorts last]:				.: (0.000242)
  test: #each_range[out of order]:				.: (0.000274)
  test: #each_range[adjacent]:					.: (0.000294)
  test: #each_range[overlapping]:				.: (0.000275)
  test: #each_range[contained]:					.: (0.000269)
  test: #each_range[multiple *]:				.: (0.000231)
  test: #each_range[array]:					.: (0.000367)
  test: #each_range[nested array]:				.: (0.000365)
  test: #each_range[Set]:					.: (0.000337)
  test: #each_range[empty]:					.: (0.000178)
  test: #elements[single number]:				.: (0.000167)
  test: #elements[single range]:				.: (0.000144)
  test: #elements[simple numbers list]:				.: (0.000151)
  test: #elements[numbers and ranges list]:			.: (0.000177)
  test: #elements[just *]:					.: (0.000117)
  test: #elements[range with *]:				.: (0.000121)
  test: #elements[* sorts last]:				.: (0.000144)
  test: #elements[out of order]:				.: (0.000180)
  test: #elements[adjacent]:					.: (0.000200)
  test: #elements[overlapping]:					.: (0.000186)
  test: #elements[contained]:					.: (0.000180)
  test: #elements[multiple *]:					.: (0.000146)
  test: #elements[array]:					.: (0.000237)
  test: #elements[nested array]:				.: (0.000237)
  test: #elements[Set]:						.: (0.000224)
  test: #elements[empty]:					.: (0.000102)
  test: #empty?:						.: (0.000253)
  test: #entries[single number]:				.: (0.000147)
  test: #entries[single range]:					.: (0.000154)
  test: #entries[simple numbers list]:				.: (0.000165)
  test: #entries[numbers and ranges list]:			.: (0.000232)
  test: #entries[just *]:					.: (0.000131)
  test: #entries[range with *]:					.: (0.000149)
  test: #entries[* sorts last]:					.: (0.000179)
  test: #entries[out of order]:					.: (0.000259)
  test: #entries[adjacent]:					.: (0.000275)
  test: #entries[overlapping]:					.: (0.000276)
  test: #entries[contained]:					.: (0.000258)
  test: #entries[multiple *]:					.: (0.000191)
  test: #entries[array]:					.: (0.000235)
  test: #entries[nested array]:					.: (0.000232)
  test: #entries[Set]:						.: (0.000236)
  test: #entries[empty]:					.: (0.000109)
  test: #find_index:						.: (0.013233)
  test: #find_ordered_index:					.: (0.002618)
  test: #freeze:						.: (0.000274)
  test: #freeze makes ractor sharable (deeply frozen):		.: (0.000177)
  test: #full?:							.: (0.000228)
  test: #has_duplicates?[single number]:			.: (0.000172)
  test: #has_duplicates?[single range]:				.: (0.000165)
  test: #has_duplicates?[simple numbers list]:			.: (0.000206)
  test: #has_duplicates?[numbers and ranges list]:		.: (0.000238)
  test: #has_duplicates?[just *]:				.: (0.000148)
  test: #has_duplicates?[range with *]:				.: (0.000157)
  test: #has_duplicates?[* sorts last]:				.: (0.000193)
  test: #has_duplicates?[out of order]:				.: (0.000249)
  test: #has_duplicates?[adjacent]:				.: (0.000288)
  test: #has_duplicates?[overlapping]:				.: (0.000280)
  test: #has_duplicates?[contained]:				.: (0.000252)
  test: #has_duplicates?[multiple *]:				.: (0.000205)
  test: #has_duplicates?[array]:				.: (0.000232)
  test: #has_duplicates?[nested array]:				.: (0.000247)
  test: #has_duplicates?[Set]:					.: (0.000211)
  test: #has_duplicates?[empty]:				.: (0.000107)
  test: #include?:						.: (0.044285)
  test: #include_star?:						.: (0.000291)
  test: #intersect?:						.: (0.000616)
  test: #intersection:						.: (0.000599)
  test: #limit:							.: (0.000582)
  test: #limit with *:						.: (0.000767)
  test: #limit with empty result:				.: (0.000205)
  test: #max:							.: (0.000938)
  test: #merge:							.: (0.001034)
  test: #min:							.: (0.000997)
  test: #minmax:						.: (0.000530)
  test: #normalize[single number]:				.: (0.000165)
  test: #normalize[single range]:				.: (0.000152)
  test: #normalize[simple numbers list]:			.: (0.000174)
  test: #normalize[numbers and ranges list]:			.: (0.000208)
  test: #normalize[just *]:					.: (0.000132)
  test: #normalize[range with *]:				.: (0.000139)
  test: #normalize[* sorts last]:				.: (0.000173)
  test: #normalize[out of order]:				.: (0.000205)
  test: #normalize[adjacent]:					.: (0.022294)
  test: #normalize[overlapping]:				.: (0.000299)
  test: #normalize[contained]:					.: (0.000199)
  test: #normalize[multiple *]:					.: (0.000176)
  test: #normalize[array]:					.: (0.000278)
  test: #normalize[nested array]:				.: (0.000288)
  test: #normalize[Set]:					.: (0.000266)
  test: #normalize[empty]:					.: (0.000113)
  test: #normalize![single number]:				.: (0.000175)
  test: #normalize![single range]:				.: (0.000148)
  test: #normalize![simple numbers list]:			.: (0.000170)
  test: #normalize![numbers and ranges list]:			.: (0.000198)
  test: #normalize![just *]:					.: (0.000130)
  test: #normalize![range with *]:				.: (0.000142)
  test: #normalize![* sorts last]:				.: (0.000164)
  test: #normalize![out of order]:				.: (0.000198)
  test: #normalize![adjacent]:					.: (0.000219)
  test: #normalize![overlapping]:				.: (0.000184)
  test: #normalize![contained]:					.: (0.000196)
  test: #normalize![multiple *]:				.: (0.000160)
  test: #normalize![array]:					.: (0.000260)
  test: #normalize![nested array]:				.: (0.000264)
  test: #normalize![Set]:					.: (0.000232)
  test: #normalize![empty]:					.: (0.000120)
  test: #normalized_string[single number]:			.: (0.000147)
  test: #normalized_string[single range]:			.: (0.000134)
  test: #normalized_string[simple numbers list]:		.: (0.000163)
  test: #normalized_string[numbers and ranges list]:		.: (0.000211)
  test: #normalized_string[just *]:				.: (0.000120)
  test: #normalized_string[range with *]:			.: (0.000129)
  test: #normalized_string[* sorts last]:			.: (0.000155)
  test: #normalized_string[out of order]:			.: (0.000186)
  test: #normalized_string[adjacent]:				.: (0.000204)
  test: #normalized_string[overlapping]:			.: (0.000187)
  test: #normalized_string[contained]:				.: (0.000178)
  test: #normalized_string[multiple *]:				.: (0.000140)
  test: #normalized_string[array]:				.: (0.000245)
  test: #normalized_string[nested array]:			.: (0.000241)
  test: #normalized_string[Set]:				.: (0.000219)
  test: #normalized_string[empty]:				.: (0.000097)
  test: #numbers[single number]:				.: (0.000174)
  test: #numbers[single range]:					.: (0.000132)
  test: #numbers[simple numbers list]:				.: (0.000143)
  test: #numbers[numbers and ranges list]:			.: (0.000166)
  test: #numbers[just *]:					.: (0.000154)
  test: #numbers[range with *]:					.: (0.000140)
  test: #numbers[* sorts last]:					.: (0.000157)
  test: #numbers[out of order]:					.: (0.000171)
  test: #numbers[adjacent]:					.: (0.000195)
  test: #numbers[overlapping]:					.: (0.000180)
  test: #numbers[contained]:					.: (0.000176)
  test: #numbers[multiple *]:					.: (0.000167)
  test: #numbers[array]:					.: (0.000248)
  test: #numbers[nested array]:					.: (0.000252)
  test: #numbers[Set]:						.: (0.000213)
  test: #numbers[empty]:					.: (0.000107)
  test: #ordered_at(negative index):				.: (0.001536)
  test: #ordered_at(non-negative index):			.: (0.001295)
  test: #ranges[single number]:					.: (0.000164)
  test: #ranges[single range]:					.: (0.000191)
  test: #ranges[simple numbers list]:				.: (0.000157)
  test: #ranges[numbers and ranges list]:			.: (0.000176)
  test: #ranges[just *]:					.: (0.000120)
  test: #ranges[range with *]:					.: (0.000142)
  test: #ranges[* sorts last]:					.: (0.000156)
  test: #ranges[out of order]:					.: (0.000188)
  test: #ranges[adjacent]:					.: (0.000212)
  test: #ranges[overlapping]:					.: (0.000197)
  test: #ranges[contained]:					.: (0.000187)
  test: #ranges[multiple *]:					.: (0.000155)
  test: #ranges[array]:						.: (0.000248)
  test: #ranges[nested array]:					.: (0.000251)
  test: #ranges[Set]:						.: (0.000217)
  test: #ranges[empty]:						.: (0.000107)
  test: #slice!:						.: (0.001465)
  test: #string[single number]:					.: (0.000168)
  test: #string[single range]:					.: (0.000137)
  test: #string[simple numbers list]:				.: (0.000155)
  test: #string[numbers and ranges list]:			.: (0.000177)
  test: #string[just *]:					.: (0.000116)
  test: #string[range with *]:					.: (0.000126)
  test: #string[* sorts last]:					.: (0.000149)
  test: #string[out of order]:					.: (0.000179)
  test: #string[adjacent]:					.: (0.000206)
  test: #string[overlapping]:					.: (0.000192)
  test: #string[contained]:					.: (0.000179)
  test: #string[multiple *]:					.: (0.000145)
  test: #string[array]:						.: (0.000264)
  test: #string[nested array]:					.: (0.000263)
  test: #string[Set]:						.: (0.000244)
  test: #string[empty]:						.: (0.000110)
  test: #subtract:						.: (0.001435)
  test: #to_s[single number]:					.: (0.000150)
  test: #to_s[single range]:					.: (0.000137)
  test: #to_s[simple numbers list]:				.: (0.000150)
  test: #to_s[numbers and ranges list]:				.: (0.000173)
  test: #to_s[just *]:						.: (0.000118)
  test: #to_s[range with *]:					.: (0.000128)
  test: #to_s[* sorts last]:					.: (0.000149)
  test: #to_s[out of order]:					.: (0.000179)
  test: #to_s[adjacent]:					.: (0.000205)
  test: #to_s[overlapping]:					.: (0.000226)
  test: #to_s[contained]:					.: (0.000181)
  test: #to_s[multiple *]:					.: (0.000147)
  test: #to_s[array]:						.: (0.000267)
  test: #to_s[nested array]:					.: (0.000265)
  test: #to_s[Set]:						.: (0.000232)
  test: #to_s[empty]:						.: (0.000106)
  test: #to_sequence_set:					.: (0.000223)
  test: #valid_string[single number]:				.: (0.000127)
  test: #valid_string[single range]:				.: (0.000128)
  test: #valid_string[simple numbers list]:			.: (0.000143)
  test: #valid_string[numbers and ranges list]:			.: (0.000164)
  test: #valid_string[just *]:					.: (0.000110)
  test: #valid_string[range with *]:				.: (0.000122)
  test: #valid_string[* sorts last]:				.: (0.000144)
  test: #valid_string[out of order]:				.: (0.000172)
  test: #valid_string[adjacent]:				.: (0.000198)
  test: #valid_string[overlapping]:				.: (0.000194)
  test: #valid_string[contained]:				.: (0.000188)
  test: #valid_string[multiple *]:				.: (0.000144)
  test: #valid_string[array]:					.: (0.000261)
  test: #valid_string[nested array]:				.: (0.000251)
  test: #valid_string[Set]:					.: (0.000208)
  test: #valid_string[empty]:					.: (0.000132)
  test: #xor:							.: (0.001017)
  test: #~ and #complement[single number]:			.: (0.000189)
  test: #~ and #complement[single range]:			.: (0.000174)
  test: #~ and #complement[simple numbers list]:		.: (0.000193)
  test: #~ and #complement[numbers and ranges list]:		.: (0.000225)
  test: #~ and #complement[just *]:				.: (0.000179)
  test: #~ and #complement[range with *]:			.: (0.000189)
  test: #~ and #complement[* sorts last]:			.: (0.000224)
  test: #~ and #complement[out of order]:			.: (0.000263)
  test: #~ and #complement[adjacent]:				.: (0.000268)
  test: #~ and #complement[overlapping]:			.: (0.000259)
  test: #~ and #complement[contained]:				.: (0.000242)
  test: #~ and #complement[multiple *]:				.: (0.000197)
  test: #~ and #complement[array]:				.: (0.000332)
  test: #~ and #complement[nested array]:			.: (0.000327)
  test: #~ and #complement[Set]:				.: (0.000312)
  test: #~ and #complement[empty]:				.: (0.000140)
  test: .[] must not be empty:					.: (0.000459)
  test: .[] returns ractor sharable (deeply frozen):		.: (0.000181)
  test: .[frozen SequenceSet] returns that SequenceSet:		.: (0.000157)
  test: .new, input may be empty:				.: (0.000325)
  test: .new, input must be valid:				.: (0.000943)
  test: .try_convert:						.: (0.000436)
  test: SequenceSet[input][single number]:			.: (0.003201)
  test: SequenceSet[input][single range]:			.: (0.000256)
  test: SequenceSet[input][simple numbers list]:		.: (0.000210)
  test: SequenceSet[input][numbers and ranges list]:		.: (0.000232)
  test: SequenceSet[input][just *]:				.: (0.000164)
  test: SequenceSet[input][range with *]:			.: (0.000183)
  test: SequenceSet[input][* sorts last]:			.: (0.000205)
  test: SequenceSet[input][out of order]:			.: (0.000253)
  test: SequenceSet[input][adjacent]:				.: (0.000260)
  test: SequenceSet[input][overlapping]:			.: (0.000247)
  test: SequenceSet[input][contained]:				.: (0.000219)
  test: SequenceSet[input][multiple *]:				.: (0.000197)
  test: SequenceSet[input][array]:				.: (0.000287)
  test: SequenceSet[input][nested array]:			.: (0.000284)
  test: SequenceSet[input][Set]:				.: (0.000540)
  test: SequenceSet[input][empty]:				.: (0.000139)
  test: frozen error message[#clear]:				.: (0.000297)
  test: frozen error message[#replace seq]:			.: (0.000289)
  test: frozen error message[#replace num]:			.: (0.000241)
  test: frozen error message[#replace str]:			.: (0.000290)
  test: frozen error message[#string=]:				.: (0.000258)
  test: frozen error message[#add]:				.: (0.000257)
  test: frozen error message[#add?]:				.: (0.000260)
  test: frozen error message[#<<]:				.: (0.000242)
  test: frozen error message[#append]:				.: (0.000238)
  test: frozen error message[#delete]:				.: (0.000246)
  test: frozen error message[#delete?]:				.: (0.000252)
  test: frozen error message[#delete_at]:			.: (0.000275)
  test: frozen error message[#slice!]:				.: (0.000261)
  test: frozen error message[#merge]:				.: (0.000255)
  test: frozen error message[#subtract]:			.: (0.000441)
  test: frozen error message[#limit!]:				.: (0.000265)
  test: frozen error message[#complement!]:			.: (0.000270)
  test: frozen error message[#normalize!]:			.: (0.000249)
  test: fuzz test: add numbers and compare to reference Set:	.: (0.907441)
  test: fuzz test: add ranges and compare to reference Set:	.: (0.408485)
  test: fuzz test: set complement identities:			.: (0.049035)
  test: fuzz test: set intersection identities:			.: (0.100477)
  test: fuzz test: set subtraction identities:			.: (0.120135)
  test: fuzz test: set union identities:			.: (0.141411)
  test: fuzz test: set xor identities:				.: (0.150455)
  test: set + other:						.: (0.000905)
  test: set - other:						.: (0.020804)
  test: set == ~~set[single number]:				.: (0.000300)
  test: set == ~~set[single range]:				.: (0.000251)
  test: set == ~~set[simple numbers list]:			.: (0.000289)
  test: set == ~~set[numbers and ranges list]:			.: (0.000338)
  test: set == ~~set[just *]:					.: (0.000231)
  test: set == ~~set[range with *]:				.: (0.000245)
  test: set == ~~set[* sorts last]:				.: (0.000296)
  test: set == ~~set[out of order]:				.: (0.000372)
  test: set == ~~set[adjacent]:					.: (0.000363)
  test: set == ~~set[overlapping]:				.: (0.000329)
  test: set == ~~set[contained]:				.: (0.000315)
  test: set == ~~set[multiple *]:				.: (0.000266)
  test: set == ~~set[array]:					.: (0.000412)
  test: set == ~~set[nested array]:				.: (0.000410)
  test: set == ~~set[Set]:					.: (0.000374)
  test: set == ~~set[empty]:					.: (0.000146)
  test: set | ~set == full[single number]:			.: (0.000212)
  test: set | ~set == full[single range]:			.: (0.000202)
  test: set | ~set == full[simple numbers list]:		.: (0.000247)
  test: set | ~set == full[numbers and ranges list]:		.: (0.000273)
  test: set | ~set == full[just *]:				.: (0.000191)
  test: set | ~set == full[range with *]:			.: (0.000195)
  test: set | ~set == full[* sorts last]:			.: (0.000226)
  test: set | ~set == full[out of order]:			.: (0.000264)
  test: set | ~set == full[adjacent]:				.: (0.000279)
  test: set | ~set == full[overlapping]:			.: (0.000263)
  test: set | ~set == full[contained]:				.: (0.000260)
  test: set | ~set == full[multiple *]:				.: (0.000222)
  test: set | ~set == full[array]:				.: (0.000340)
  test: set | ~set == full[nested array]:			.: (0.000344)
  test: set | ~set == full[Set]:				.: (0.000330)
  test: set | ~set == full[empty]:				.: (0.000173)
  test: transforms keep frozen status[#min(count)]:		.: (0.000455)
  test: transforms keep frozen status[#max(count)]:		.: (0.000410)
  test: transforms keep frozen status[#slice(length)]:		.: (0.000393)
  test: transforms keep frozen status[#slice(range)]:		.: (0.000395)
  test: transforms keep frozen status[#slice => empty]:		.: (0.000234)
  test: transforms keep frozen status[#slice => empty]:		.: (0.000223)
  test: transforms keep frozen status[#union]:			.: (0.000315)
  test: transforms keep frozen status[#intersection]:		.: (0.000364)
  test: transforms keep frozen status[#difference]:		.: (0.000320)
  test: transforms keep frozen status[#xor]:			.: (0.000523)
  test: transforms keep frozen status[#complement]:		.: (0.000286)
  test: transforms keep frozen status[#normalize]:		.: (0.000269)
  test: transforms keep frozen status[#above]:			.: (0.000313)
  test: transforms keep frozen status[#below]:			.: (0.000303)
  test: transforms keep frozen status[#limit]:			.: (0.000311)
  test: transforms keep frozen status[#limit => empty]:		.: (0.000231)
  test: values for '*':						.: (0.000509)
  test: ~full == empty:						.: (0.000409)
  test_inspect[empty]:						.: (0.000126)
  test_inspect[frozen empty]:					.: (0.000112)
  test_inspect[normalized]:					.: (0.000175)
  test_inspect[denormalized]:					.: (0.000146)
  test_inspect[star]:						.: (0.000117)
  test_inspect[frozen]:						.: (0.000185)
IMAPTest: 
  test: #authenticate disconnects and raises SASL::AuthenticationFailed when the server succeeds prematurely:	.: (0.087435)
  test: #authenticate never sends an initial response when config.sasl_ir: false:	.: (0.195828)
  test: #authenticate never sends an initial response when sasl_ir: false:	.: (0.139903)
  test: #authenticate never sends an initial response when the mechanism does not support client-first:	.: (0.091796)
  test: #authenticate never sends an initial response when the server doesn't explicitly support the mechanism:	.: (0.070155)
  test: #authenticate never sends an initial response when the server isn't capable:	.: (0.114519)
  test: #authenticate sends '=' as the initial reponse when the initial response is an empty string:	.: (0.110938)
  test: #authenticate sends an initial response when supported by both the mechanism and the server:	.: (0.067877)
  test: #examine with condstore:				.: (0.107826)
  test: #expunge with EXPUNGE responses:			.: (0.191926)
  test: #expunge with a VANISHED response:			.: (0.207849)
  test: #expunge with multiple VANISHED responses:		.: (0.220689)
  test: #fetch with FETCH responses:				.: (0.207415)
  test: #fetch with changedsince:				.: (0.179596)
  test: #search/#uid_search:					.: (1.520639)
  test: #search/#uid_search with ESEARCH or IMAP4rev2:		.: (0.123405)
  test: #search/#uid_search with invalid arguments:		.: (0.047299)
  test: #select with condstore:					.: (0.140513)
  test: #store with FETCH responses:				.: (0.199361)
  test: #store with unchangedsince:				.: (0.159830)
  test: #uid_expunge with EXPUNGE responses:			.: (0.191946)
  test: #uid_expunge with VANISHED response:			.: (0.195650)
  test: #uid_fetch with UIDFETCH responses:			.: (0.176061)
  test: #uid_fetch with changedsince:				.: (0.147909)
  test: #uid_fetch with partial:				.: (0.348323)
  test: #uid_store with UIDFETCH responses:			.: (0.191524)
  test: #uid_store with changedsince:				.: (0.171729)
  test: missing server ENABLED response:			.: (0.071874)
  test: missing server ESEARCH response:			.: (0.143846)
  test: missing server SEARCH response:				.: (0.123914)
  test: missing server SORT response:				.: (0.123761)
  test: missing server THREAD response:				.: (0.139917)
  test: send PartialRange args:					.: (0.423881)
  test_append:							.: (0.235789)
  test_append_fail:						.: (0.195857)
  test_close:							.: (0.167484)
  test_connection_closed_during_idle:				.: (0.139675)
  test_connection_closed_without_greeting:			.: (0.431520)
  test_default_port:						.: (0.000228)
  test_disconnect:						.: (0.159587)
  test_enable:							.: (0.296813)
  test_exception_during_idle:					.: (0.211388)
  test_exception_during_shutdown:				.: (0.131462)
  test_id:							.: (0.261049)
  test_idle:							.: (0.247029)
  test_idle_done_not_during_idle:				.: (0.243538)
  test_idle_timeout:						.: (0.368172)
  test_imaps_post_connection_check:				.: (0.151440)
  test_imaps_unknown_ca:					.: (0.164523)
  test_imaps_verify_none:					.: (0.256211)
  test_imaps_with_ca_file:					.: (0.239689)
  test_send_invalid_number:					.: (0.451488)
  test_send_literal:						.: (0.235853)
  test_starttls:						.: (0.163875)
  test_starttls_stripping:					.: (0.168318)
  test_starttls_unknown_ca:					.: (0.175513)
  test_uidplus_appenduid:					.: (0.231846)
  test_uidplus_copyuid_multiple:				.: (0.207885)
  test_uidplus_copyuid_single:					.: (0.163934)
  test_uidplus_uidnotsticky:					.: (0.119844)
  test_unexpected_bye:						.: (0.155473)
  test_unexpected_eof:						.: (0.147630)
  test_unselect:						.: (0.200446)
Net::IMAP::TestData: 
  test_define:							.: (0.000541)
  test_define_edge_cases:					.: (0.000212)
  test_define_with_block:					.: (0.000119)
  test_dup:							.: (0.000291)
  test_eql:							.: (0.000171)
  test_equal:							.: (0.000147)
  test_initialize:						.: (0.000468)
  test_initialize_redefine:					.: (0.000244)
  test_inspect:							.: (0.000286)
  test_instance_behavior:					.: (0.000443)
  test_marshal:							.: (0.000280)
  test_member_precedence:					.: (0.000167)
  test_memberless:						.: (0.000222)
  test_recursive_inspect:					.: (0.000282)
  test_square_braces:						.: (0.000138)
  test_with:							.: (0.000635)
ResponseReaderTest: 
  test: #read_response_buffer:					.: (0.001815)
  test: #read_response_buffer with max_response_size:		.: (0.000344)
SASLprepTest: 
  test_saslprep_invalid_inputs:					.: (0.106082)
  test_saslprep_valid_inputs:					.: (0.000467)
SearchDataTests: 
  test: #== checks modseq:					.: (0.000284)
  test: #== ignores the order of elements:			.: (0.000129)
  test: #inspect:						.: (0.000173)
  test: #modseq:						.: (0.000117)
  test: #to_s:							.: (0.000146)
  test: #to_s(type):						.: (0.000228)
  test: Array[*nz_numbers] != SearchResult[*differently_sorted]:.: (0.000120)
  test: Array[*nz_numbers] == SearchResult[*nz_numbers, modseq: nz_number]:	.: (0.000113)
  test: SearchResult.new(nz_numbers) == Array.new(nz_numbers):	.: (0.000131)
  test: SearchResult[*nz_numbers, modseq: nz_number] != Array[*nz_numbers]:	.: (0.000110)
  test: SearchResult[*nz_numbers] == Array[*differently_sorted]:.: (0.000112)
  test: SearchResult[*nz_numbers] == Array[*nz_numbers]:	.: (0.000129)
StringPrepNamePrepTest: 
  test: ASCII control characters U+0010 U+007F:			.: (0.000334)
  test: ASCII space character U+0020:				.: (0.000147)
  test: Bidi: RandALCat character U+0627 U+0031 U+0628:		.: (0.000163)
  test: Bidi: RandALCat character U+FB38 and LCat characters:	.: (0.001048)
  test: Case folding 8bit U+00DF (german sharp s):		.: (0.000183)
  test: Case folding ASCII U+0043 U+0041 U+0046 U+0045:		.: (0.000154)
  test: Case folding U+0130 (turkish capital I with dot):	.: (0.000348)
  test: Case folding U+1FB7 and normalization:			.: (0.000195)
  test: Case folding U+2121 U+33C6 U+1D7BB:			.: (0.000169)
  test: Case folding multibyte U+0143 U+037A:			.: (0.000150)
  test: Deprecated U+202A:					.: (0.000204)
  test: Display property character U+0341:			.: (0.000184)
  test: Ideographic description character U+2FF5:		.: (0.000167)
  test: Language tagging character U+E0001:			.: (0.000163)
  test: Language tagging character U+E0042:			.: (0.000179)
  test: Larger test (expanding):				.: (0.000220)
  test: Larger test (shrinking):				.: (0.000258)
  test: Left-to-right mark U+200E:				.: (0.000164)
  test: Map to nothing:						.: (0.000150)
  test: Non-ASCII 8bit control character U+0085:		.: (0.000137)
  test: Non-ASCII 8bit space character U+00A0:			.: (0.000137)
  test: Non-ASCII control character U+1D175:			.: (0.000151)
  test: Non-ASCII multibyte control character U+180E:		.: (0.000139)
  test: Non-ASCII multibyte space character U+1680:		.: (0.000149)
  test: Non-ASCII multibyte space character U+2000:		.: (0.000145)
  test: Non-ASCII multibyte space character U+3000:		.: (0.000135)
  test: Non-character code point U+10FFFF:			.: (0.000155)
  test: Non-character code point U+8FFFE:			.: (0.000148)
  test: Non-plain text character U+FFFD:			.: (0.000152)
  test: Normalization of U+006a U+030c U+00A0 U+00AA:		.: (0.000159)
  test: Plane 0 private use character U+F123:			.: (0.000160)
  test: Plane 15 private use character U+F1234:			.: (0.000161)
  test: Plane 16 private use character U+10F234:		.: (0.000155)
  test: Self-reverting case folding U+0390 and normalization:	.: (0.000218)
  test: Self-reverting case folding U+03B0 and normalization:	.: (0.000153)
  test: Self-reverting case folding U+1E96 and normalization:	.: (0.000189)
  test: Self-reverting case folding U+1F56 and normalization:	.: (0.000191)
  test: Zero Width No-Break Space U+FEFF:			.: (0.000150)
  test: Zero Width Space U+200b:				.: (0.000145)
StringPrepProfilesTest: 
  test_trace_profile_prohibit_ctrl_chars:			.: (0.000315)
  test_trace_profile_prohibit_tagging_chars:			.: (0.000191)
StringPrepTablesTest: 
  test_rfc3454_table_A_1:					.: (2.415048)
  test_rfc3454_table_B_1:					.: (1.377901)
  test_rfc3454_table_B_2:					.: (1.427057)
  test_rfc3454_table_C_1_1:					.: (1.017139)
  test_rfc3454_table_C_1_2:					.: (1.312750)
  test_rfc3454_table_C_2_1:					.: (1.052204)
  test_rfc3454_table_C_2_2:					.: (1.403914)
  test_rfc3454_table_C_3:					.: (1.509591)
  test_rfc3454_table_C_4:					.: (1.336028)
  test_rfc3454_table_C_5:					.: (1.276735)
  test_rfc3454_table_C_6:					.: (1.339598)
  test_rfc3454_table_C_7:					.: (1.295498)
  test_rfc3454_table_C_8:					.: (1.350581)
  test_rfc3454_table_C_9:					.: (1.337021)
  test_rfc3454_table_D_1:					.: (1.332664)
  test_rfc3454_table_D_2:					.: (1.772470)
TestAppendUIDData: 
  test: #assigned_uids is converted to SequenceSet:		.: (0.000571)
  test: #assigned_uids must be a valid uid-set:			.: (0.000612)
  test: #size returns the number of UIDs:			.: (0.000288)
  test: #uidvalidity must be valid nz-number:			.: (0.000356)
TestCopyUIDData: 
  test: #[](source_uid):					.: (0.000988)
  test: #assigned_uid_for(source_uid):				.: (0.000829)
  test: #assigned_uids is converted to SequenceSet:		.: (0.000765)
  test: #assigned_uids must be a valid uid-set:			.: (0.000886)
  test: #each_uid_pair:						.: (0.001062)
  test: #size returns the number of UIDs:			.: (0.000644)
  test: #source_uid_for(assigned_uid):				.: (0.000850)
  test: #source_uids and #assigned_uids must be same size:	.: (0.000453)
  test: #source_uids is converted to SequenceSet:		.: (0.000474)
  test: #source_uids must be valid uid-set:			.: (0.001064)
  test: #uid_mapping for with source_uids in unsorted order:	.: (0.000426)
  test: #uid_mapping maps source_uids to assigned_uids:		.: (0.000408)
  test: #uidvalidity must be valid nz-number:			.: (0.000598)
TestUIDPlusData: 
  test: #uid_mapping for with source_uids in unsorted order:	.: (0.000274)
  test: #uid_mapping with sorted source_uids:			.: (0.000125)
ThreadMemberTest: 
  test: #to_sequence_set:					.: (0.000490)
UIDFetchDataTest: 
  test: #binary(1, 2, 3, offset: 1) returns the BINARY[1.2.3]<1> attr:	.: (0.000332)
  test: #binary_size(1, 2, 3) returns the BINARY.SIZE[1.2.3] attr:	.: (0.000172)
  test: #deconstruct_keys:					.: (0.000202)
  test: #emailid returns EMAILID value (RFC8474: OBJECTID):	.: (0.000112)
  test: #header returns the BODY[HEADER] attr:			.: (0.000118)
  test: #header(1, 2, 3) returns the BODY[1.2.3.HEADER] attr:	.: (0.000121)
  test: #header(1, 2, oFfset: 456) returns the BODY[1.2.HEADER]<456> attr:	.: (0.000119)
  test: #header_fields(*) => BODY[HEADER.FIELDS (*)] attr:	.: (0.000390)
  test: #header_fields(*, offset:) => BODY[part.HEADER.FIELDS (*)]<offset>:	.: (0.000153)
  test: #header_fields(*, part:) => BODY[part.HEADER.FIELDS (*)] attr:	.: (0.000230)
  test: #header_fields_not(*) => BODY[HEADER.FIELDS.NOT (*)] attr:	.: (0.000164)
  test: #header_fields_not(*, offset:) => BODY[part.HEADER.FIELDS.NOT (*)]<offset>:	.: (0.000170)
  test: #header_fields_not(*, part:) => BODY[part.HEADER.FIELDS.NOT (*)] attr:	.: (0.000232)
  test: #internaldate parses a datetime value:			.: (0.000367)
  test: #message returns the BODY[] attr:			.: (0.000120)
  test: #message(offset:) returns the BODY[]<offset> attr:	.: (0.000151)
  test: #mime(1, 2, 3) returns the BODY[1.2.3.MIME] attr:	.: (0.000130)
  test: #mime(1, 2, oFfset: 456) returns the BODY[1.2.MIME]<456> attr:	.: (0.000126)
  test: #modseq returns MODSEQ value (RFC7162: CONDSTORE):	.: (0.000109)
  test: #part(1, 2, 3) returns the BODY[1.2.3] attr:		.: (0.000126)
  test: #part(1, 2, oFfset: 456) returns the BODY[1.2]<456> attr:	.: (0.000122)
  test: #seqno does not exist:					.: (0.000164)
  test: #text returns the BODY[TEXT] attr:			.: (0.000120)
  test: #text(1, 2, 3) returns the BODY[1.2.3.TEXT] attr:	.: (0.000119)
  test: #text(1, 2, 3, oFfset: 456) returns the BODY[1.2.3.TEXT]<456> attr:	.: (0.000121)
  test: #threadid returns THREADID value (RFC8474: OBJECTID):	.: (0.000111)
  test: #uid replaces #seqno:					.: (0.000112)
  test: #uid warns when differs from UID attribute:		.: (0.000204)
  test: simple RFC3501 and RFC9051 attrs accessors:		.: (0.000466)
  test: simple RFC822 attrs accessors (deprecated by RFC9051):	.: (0.000149)
VanishedDataTest: 
  test: #==:							.: (0.000479)
  test: #deconstruct_keys returns uids and earlier:		.: (0.000281)
  test: #eql?:							.: (0.000519)
  test: #to_a delegates to uids (SequenceSet#to_a):		.: (0.000178)
  test: .[], missing args raises ArgumentError:			.: (0.000327)
  test: .[], mixing args raises ArgumentError:			.: (0.000203)
  test: .[], nil uids raises DataFormatError:			.: (0.000165)
  test: .[uids, earlier]:					.: (0.000378)
  test: .[uids: string, earlier: bool]:				.: (0.000355)
  test: .new(uids: string, earlier: bool):			.: (0.000349)
  test: .new, missing args raises ArgumentError:		.: (0.000501)
  test: .new, nil uids raises DataFormatError:			.: (0.000174)

Finished in 44.569430252 seconds.
--------------------------------------------------------------------------------
1232 tests, 10840 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications
100% passed
--------------------------------------------------------------------------------
27.64 tests/s, 243.22 assertions/s
>>> ruby-net-imap: Entering fakeroot...
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/authenticators.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/command_data.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/config.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/config/attr_accessors.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/config/attr_inheritance.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/config/attr_type_coercion.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/connection_state.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/data_encoding.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/data_lite.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/deprecated_client_options.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/errors.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/esearch_result.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/fetch_data.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/flags.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/response_data.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/response_parser.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/response_parser/parser_utils.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/response_reader.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/sasl.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/sasl/anonymous_authenticator.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/sasl/authentication_exchange.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/sasl/authenticators.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/sasl/client_adapter.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/sasl/cram_md5_authenticator.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/sasl/digest_md5_authenticator.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/sasl/external_authenticator.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/sasl/gs2_header.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/sasl/login_authenticator.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/sasl/oauthbearer_authenticator.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/sasl/plain_authenticator.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/sasl/protocol_adapters.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/sasl/scram_algorithm.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/sasl/scram_authenticator.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/sasl/stringprep.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/sasl/xoauth2_authenticator.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/sasl_adapter.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/search_result.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/sequence_set.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/stringprep.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/stringprep/nameprep.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/stringprep/saslprep.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/stringprep/saslprep_tables.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/stringprep/tables.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/stringprep/trace.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/uidplus_data.rb
/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap/usr/lib/ruby/gems/3.3.0/gems/net-imap-0.5.8/lib/net/imap/vanished_data.rb
Successfully installed net-imap-0.5.8
Parsing documentation for net-imap-0.5.8
Parsing sources...
  2% [ 1/47]  lib/net/imap.rb
  4% [ 2/47]  lib/net/imap/authenticators.rb
  6% [ 3/47]  lib/net/imap/command_data.rb
  8% [ 4/47]  lib/net/imap/config.rb
 10% [ 5/47]  lib/net/imap/config/attr_accessors.rb
 12% [ 6/47]  lib/net/imap/config/attr_inheritance.rb
 14% [ 7/47]  lib/net/imap/config/attr_type_coercion.rb
 17% [ 8/47]  lib/net/imap/connection_state.rb
 19% [ 9/47]  lib/net/imap/data_encoding.rb
 21% [10/47]  lib/net/imap/data_lite.rb
 23% [11/47]  lib/net/imap/deprecated_client_options.rb
 25% [12/47]  lib/net/imap/errors.rb
 27% [13/47]  lib/net/imap/esearch_result.rb
 29% [14/47]  lib/net/imap/fetch_data.rb
 31% [15/47]  lib/net/imap/flags.rb
 34% [16/47]  lib/net/imap/response_data.rb
 36% [17/47]  lib/net/imap/response_parser.rb
 38% [18/47]  lib/net/imap/response_parser/parser_utils.rb
 40% [19/47]  lib/net/imap/response_reader.rb
 42% [20/47]  lib/net/imap/sasl.rb
 44% [21/47]  lib/net/imap/sasl/anonymous_authenticator.rb
 46% [22/47]  lib/net/imap/sasl/authentication_exchange.rb
 48% [23/47]  lib/net/imap/sasl/authenticators.rb
 51% [24/47]  lib/net/imap/sasl/client_adapter.rb
 53% [25/47]  lib/net/imap/sasl/cram_md5_authenticator.rb
 55% [26/47]  lib/net/imap/sasl/digest_md5_authenticator.rb
 57% [27/47]  lib/net/imap/sasl/external_authenticator.rb
 59% [28/47]  lib/net/imap/sasl/gs2_header.rb
 61% [29/47]  lib/net/imap/sasl/login_authenticator.rb
 63% [30/47]  lib/net/imap/sasl/oauthbearer_authenticator.rb
 65% [31/47]  lib/net/imap/sasl/plain_authenticator.rb
 68% [32/47]  lib/net/imap/sasl/protocol_adapters.rb
 70% [33/47]  lib/net/imap/sasl/scram_algorithm.rb
 72% [34/47]  lib/net/imap/sasl/scram_authenticator.rb
 74% [35/47]  lib/net/imap/sasl/stringprep.rb
 76% [36/47]  lib/net/imap/sasl/xoauth2_authenticator.rb
 78% [37/47]  lib/net/imap/sasl_adapter.rb
 80% [38/47]  lib/net/imap/search_result.rb
 82% [39/47]  lib/net/imap/sequence_set.rb
 85% [40/47]  lib/net/imap/stringprep.rb
 87% [41/47]  lib/net/imap/stringprep/nameprep.rb
 89% [42/47]  lib/net/imap/stringprep/saslprep.rb
 91% [43/47]  lib/net/imap/stringprep/saslprep_tables.rb
 93% [44/47]  lib/net/imap/stringprep/tables.rb
 95% [45/47]  lib/net/imap/stringprep/trace.rb
 97% [46/47]  lib/net/imap/uidplus_data.rb
100% [47/47]  lib/net/imap/vanished_data.rb

Installing ri documentation for net-imap-0.5.8
Done installing documentation for net-imap after 3 seconds
1 gem installed
>>> ruby-net-imap-doc*: Running split function doc...
renamed 'usr/lib/ruby/gems/3.3.0/doc' -> '/home/packager/aports/main/ruby-net-imap/pkg/ruby-net-imap-doc/usr/lib/ruby/gems/3.3.0/doc'
>>> ruby-net-imap-doc*: Preparing subpackage ruby-net-imap-doc...
>>> ruby-net-imap-doc*: Running postcheck for ruby-net-imap-doc
>>> ruby-net-imap*: Running postcheck for ruby-net-imap
>>> ruby-net-imap*: Preparing package ruby-net-imap...
>>> ruby-net-imap-doc*: Tracing dependencies...
	ruby
>>> ruby-net-imap-doc*: Package size: 706.8 KB
>>> ruby-net-imap-doc*: Compressing data...
>>> ruby-net-imap-doc*: Create checksum...
pigz: not found
>>> ruby-net-imap-doc*: Create ruby-net-imap-doc-0.5.8-r0.apk
>>> ruby-net-imap*: Tracing dependencies...
	ruby
>>> ruby-net-imap*: Package size: 664.2 KB
>>> ruby-net-imap*: Compressing data...
>>> ruby-net-imap*: Create checksum...
pigz: not found
>>> ruby-net-imap*: Create ruby-net-imap-0.5.8-r0.apk
>>> ruby-net-imap: Build complete at Fri, 23 May 2025 03:28:44 +0000 elapsed time 0h 1m 7s
>>> ruby-net-imap: Cleaning up srcdir
>>> ruby-net-imap: Cleaning up pkgdir
>>> ruby-net-imap: Uninstalling dependencies...
(1/13) Purging .makedepends-ruby-net-imap (20250523.032738)
(2/13) Purging ruby-rdoc (3.3.8-r0)
(3/13) Purging ruby-base64 (0.2.0-r1)
(4/13) Purging ruby-rake (13.2.1-r1)
(5/13) Purging ruby-test-unit (3.6.8-r0)
(6/13) Purging ruby-power_assert (2.0.5-r0)
(7/13) Purging ruby-test-unit-ruby-core (1.0.6-r0)
(8/13) Purging ruby (3.3.8-r0)
(9/13) Purging ca-certificates (20241121-r2)
Executing ca-certificates-20241121-r2.post-deinstall
(10/13) Purging libucontext (1.3.2-r0)
(11/13) Purging ruby-libs (3.3.8-r0)
(12/13) Purging yaml (0.2.5-r2)
(13/13) Purging libffi (3.4.7-r0)
Executing busybox-1.37.0-r12.trigger
OK: 313 MiB in 114 packages
>>> ruby-net-imap: Updating the main/x86_64 repository index...
>>> ruby-net-imap: Signing the index...
pigz: not found
